   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"trace_impl.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._trace_write_semihosting_debug,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	_trace_write_semihosting_debug:
  25              	.LFB130:
  26              		.file 1 "../system/src/diag/trace_impl.c"
   1:../system/src/diag/trace_impl.c **** /*
   2:../system/src/diag/trace_impl.c ****  * This file is part of the ÂµOS++ distribution.
   3:../system/src/diag/trace_impl.c ****  *   (https://github.com/micro-os-plus)
   4:../system/src/diag/trace_impl.c ****  * Copyright (c) 2014 Liviu Ionescu.
   5:../system/src/diag/trace_impl.c ****  *
   6:../system/src/diag/trace_impl.c ****  * Permission is hereby granted, free of charge, to any person
   7:../system/src/diag/trace_impl.c ****  * obtaining a copy of this software and associated documentation
   8:../system/src/diag/trace_impl.c ****  * files (the "Software"), to deal in the Software without
   9:../system/src/diag/trace_impl.c ****  * restriction, including without limitation the rights to use,
  10:../system/src/diag/trace_impl.c ****  * copy, modify, merge, publish, distribute, sublicense, and/or
  11:../system/src/diag/trace_impl.c ****  * sell copies of the Software, and to permit persons to whom
  12:../system/src/diag/trace_impl.c ****  * the Software is furnished to do so, subject to the following
  13:../system/src/diag/trace_impl.c ****  * conditions:
  14:../system/src/diag/trace_impl.c ****  *
  15:../system/src/diag/trace_impl.c ****  * The above copyright notice and this permission notice shall be
  16:../system/src/diag/trace_impl.c ****  * included in all copies or substantial portions of the Software.
  17:../system/src/diag/trace_impl.c ****  *
  18:../system/src/diag/trace_impl.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  19:../system/src/diag/trace_impl.c ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  20:../system/src/diag/trace_impl.c ****  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  21:../system/src/diag/trace_impl.c ****  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  22:../system/src/diag/trace_impl.c ****  * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  23:../system/src/diag/trace_impl.c ****  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  24:../system/src/diag/trace_impl.c ****  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  25:../system/src/diag/trace_impl.c ****  * OTHER DEALINGS IN THE SOFTWARE.
  26:../system/src/diag/trace_impl.c ****  */
  27:../system/src/diag/trace_impl.c **** 
  28:../system/src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  29:../system/src/diag/trace_impl.c **** 
  30:../system/src/diag/trace_impl.c **** #if defined(TRACE)
  31:../system/src/diag/trace_impl.c **** 
  32:../system/src/diag/trace_impl.c **** #include "cmsis_device.h"
  33:../system/src/diag/trace_impl.c **** #include "diag/Trace.h"
  34:../system/src/diag/trace_impl.c **** 
  35:../system/src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  36:../system/src/diag/trace_impl.c **** 
  37:../system/src/diag/trace_impl.c **** // One of these definitions must be passed via the compiler command line
  38:../system/src/diag/trace_impl.c **** // Note: small Cortex-M0/M0+ might implement a simplified debug interface.
  39:../system/src/diag/trace_impl.c **** 
  40:../system/src/diag/trace_impl.c **** //#define OS_USE_TRACE_ITM
  41:../system/src/diag/trace_impl.c **** //#define OS_USE_TRACE_SEMIHOSTING_DEBUG
  42:../system/src/diag/trace_impl.c **** //#define OS_USE_TRACE_SEMIHOSTING_STDOUT
  43:../system/src/diag/trace_impl.c **** 
  44:../system/src/diag/trace_impl.c **** #if !(defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__))
  45:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
  46:../system/src/diag/trace_impl.c **** #undef OS_USE_TRACE_ITM
  47:../system/src/diag/trace_impl.c **** #warning "ITM unavailable"
  48:../system/src/diag/trace_impl.c **** #endif // defined(OS_USE_TRACE_ITM)
  49:../system/src/diag/trace_impl.c **** #endif // !(defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__))
  50:../system/src/diag/trace_impl.c **** 
  51:../system/src/diag/trace_impl.c **** #if defined(OS_DEBUG_SEMIHOSTING_FAULTS)
  52:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_SEMIHOSTING_STDOUT) || defined(OS_USE_TRACE_SEMIHOSTING_DEBUG)
  53:../system/src/diag/trace_impl.c **** #error "Cannot debug semihosting using semihosting trace; use OS_USE_TRACE_ITM"
  54:../system/src/diag/trace_impl.c **** #endif
  55:../system/src/diag/trace_impl.c **** #endif
  56:../system/src/diag/trace_impl.c **** 
  57:../system/src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  58:../system/src/diag/trace_impl.c **** 
  59:../system/src/diag/trace_impl.c **** // Forward definitions.
  60:../system/src/diag/trace_impl.c **** 
  61:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
  62:../system/src/diag/trace_impl.c **** static ssize_t
  63:../system/src/diag/trace_impl.c **** _trace_write_itm (const char* buf, size_t nbyte);
  64:../system/src/diag/trace_impl.c **** #endif
  65:../system/src/diag/trace_impl.c **** 
  66:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_SEMIHOSTING_STDOUT)
  67:../system/src/diag/trace_impl.c **** static ssize_t
  68:../system/src/diag/trace_impl.c **** _trace_write_semihosting_stdout(const char* buf, size_t nbyte);
  69:../system/src/diag/trace_impl.c **** #endif
  70:../system/src/diag/trace_impl.c **** 
  71:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_SEMIHOSTING_DEBUG)
  72:../system/src/diag/trace_impl.c **** static ssize_t
  73:../system/src/diag/trace_impl.c **** _trace_write_semihosting_debug(const char* buf, size_t nbyte);
  74:../system/src/diag/trace_impl.c **** #endif
  75:../system/src/diag/trace_impl.c **** 
  76:../system/src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  77:../system/src/diag/trace_impl.c **** 
  78:../system/src/diag/trace_impl.c **** void
  79:../system/src/diag/trace_impl.c **** trace_initialize(void)
  80:../system/src/diag/trace_impl.c **** {
  81:../system/src/diag/trace_impl.c ****   // For regular ITM / semihosting, no inits required.
  82:../system/src/diag/trace_impl.c **** }
  83:../system/src/diag/trace_impl.c **** 
  84:../system/src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
  85:../system/src/diag/trace_impl.c **** 
  86:../system/src/diag/trace_impl.c **** // This function is called from _write() for fd==1 or fd==2 and from some
  87:../system/src/diag/trace_impl.c **** // of the trace_* functions.
  88:../system/src/diag/trace_impl.c **** 
  89:../system/src/diag/trace_impl.c **** ssize_t
  90:../system/src/diag/trace_impl.c **** trace_write (const char* buf __attribute__((unused)),
  91:../system/src/diag/trace_impl.c **** 	     size_t nbyte __attribute__((unused)))
  92:../system/src/diag/trace_impl.c **** {
  93:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
  94:../system/src/diag/trace_impl.c ****   return _trace_write_itm (buf, nbyte);
  95:../system/src/diag/trace_impl.c **** #elif defined(OS_USE_TRACE_SEMIHOSTING_STDOUT)
  96:../system/src/diag/trace_impl.c ****   return _trace_write_semihosting_stdout(buf, nbyte);
  97:../system/src/diag/trace_impl.c **** #elif defined(OS_USE_TRACE_SEMIHOSTING_DEBUG)
  98:../system/src/diag/trace_impl.c ****   return _trace_write_semihosting_debug(buf, nbyte);
  99:../system/src/diag/trace_impl.c **** #endif
 100:../system/src/diag/trace_impl.c **** 
 101:../system/src/diag/trace_impl.c ****   return -1;
 102:../system/src/diag/trace_impl.c **** }
 103:../system/src/diag/trace_impl.c **** 
 104:../system/src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
 105:../system/src/diag/trace_impl.c **** 
 106:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
 107:../system/src/diag/trace_impl.c **** 
 108:../system/src/diag/trace_impl.c **** #if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
 109:../system/src/diag/trace_impl.c **** 
 110:../system/src/diag/trace_impl.c **** // ITM is the ARM standard mechanism, running over SWD/SWO on Cortex-M3/M4
 111:../system/src/diag/trace_impl.c **** // devices, and is the recommended setting, if available.
 112:../system/src/diag/trace_impl.c **** //
 113:../system/src/diag/trace_impl.c **** // The JLink probe and the GDB server fully support SWD/SWO
 114:../system/src/diag/trace_impl.c **** // and the JLink Debugging plug-in enables it by default.
 115:../system/src/diag/trace_impl.c **** // The current OpenOCD does not include support to parse the SWO stream,
 116:../system/src/diag/trace_impl.c **** // so this configuration will not work on OpenOCD (will not crash, but
 117:../system/src/diag/trace_impl.c **** // nothing will be displayed in the output console).
 118:../system/src/diag/trace_impl.c **** 
 119:../system/src/diag/trace_impl.c **** #if !defined(OS_INTEGER_TRACE_ITM_STIMULUS_PORT)
 120:../system/src/diag/trace_impl.c **** #define OS_INTEGER_TRACE_ITM_STIMULUS_PORT     (0)
 121:../system/src/diag/trace_impl.c **** #endif
 122:../system/src/diag/trace_impl.c **** 
 123:../system/src/diag/trace_impl.c **** static ssize_t
 124:../system/src/diag/trace_impl.c **** _trace_write_itm (const char* buf, size_t nbyte)
 125:../system/src/diag/trace_impl.c **** {
 126:../system/src/diag/trace_impl.c ****   for (size_t i = 0; i < nbyte; i++)
 127:../system/src/diag/trace_impl.c ****     {
 128:../system/src/diag/trace_impl.c ****       // Check if ITM or the stimulus port are not enabled
 129:../system/src/diag/trace_impl.c ****       if (((ITM->TCR & ITM_TCR_ITMENA_Msk) == 0)
 130:../system/src/diag/trace_impl.c **** 	  || ((ITM->TER & (1UL << OS_INTEGER_TRACE_ITM_STIMULUS_PORT)) == 0))
 131:../system/src/diag/trace_impl.c **** 	{
 132:../system/src/diag/trace_impl.c **** 	  return (ssize_t)i; // return the number of sent characters (may be 0)
 133:../system/src/diag/trace_impl.c **** 	}
 134:../system/src/diag/trace_impl.c **** 
 135:../system/src/diag/trace_impl.c ****       // Wait until STIMx is ready...
 136:../system/src/diag/trace_impl.c ****       while (ITM->PORT[OS_INTEGER_TRACE_ITM_STIMULUS_PORT].u32 == 0)
 137:../system/src/diag/trace_impl.c **** 	;
 138:../system/src/diag/trace_impl.c ****       // then send data, one byte at a time
 139:../system/src/diag/trace_impl.c ****       ITM->PORT[OS_INTEGER_TRACE_ITM_STIMULUS_PORT].u8 = (uint8_t) (*buf++);
 140:../system/src/diag/trace_impl.c ****     }
 141:../system/src/diag/trace_impl.c **** 
 142:../system/src/diag/trace_impl.c ****   return (ssize_t)nbyte; // all characters successfully sent
 143:../system/src/diag/trace_impl.c **** }
 144:../system/src/diag/trace_impl.c **** 
 145:../system/src/diag/trace_impl.c **** #endif // defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
 146:../system/src/diag/trace_impl.c **** 
 147:../system/src/diag/trace_impl.c **** #endif // OS_USE_TRACE_ITM
 148:../system/src/diag/trace_impl.c **** 
 149:../system/src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
 150:../system/src/diag/trace_impl.c **** 
 151:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_SEMIHOSTING_DEBUG) || defined(OS_USE_TRACE_SEMIHOSTING_STDOUT)
 152:../system/src/diag/trace_impl.c **** 
 153:../system/src/diag/trace_impl.c **** #include "arm/semihosting.h"
 154:../system/src/diag/trace_impl.c **** 
 155:../system/src/diag/trace_impl.c **** // Semihosting is the other output channel that can be used for the trace
 156:../system/src/diag/trace_impl.c **** // messages. It comes in two flavours: STDOUT and DEBUG. The STDOUT channel
 157:../system/src/diag/trace_impl.c **** // is the equivalent of the stdout in POSIX and in most cases it is forwarded
 158:../system/src/diag/trace_impl.c **** // to the GDB server stdout stream. The debug channel is a separate
 159:../system/src/diag/trace_impl.c **** // channel. STDOUT is buffered, so nothing is displayed until a \n;
 160:../system/src/diag/trace_impl.c **** // DEBUG is not buffered, but can be slow.
 161:../system/src/diag/trace_impl.c **** //
 162:../system/src/diag/trace_impl.c **** // Choosing between semihosting stdout and debug depends on the capabilities
 163:../system/src/diag/trace_impl.c **** // of your GDB server, and also on specific needs. It is recommended to test
 164:../system/src/diag/trace_impl.c **** // DEBUG first, and if too slow, try STDOUT.
 165:../system/src/diag/trace_impl.c **** //
 166:../system/src/diag/trace_impl.c **** // The JLink GDB server fully support semihosting, and both configurations
 167:../system/src/diag/trace_impl.c **** // are available; to activate it, use "monitor semihosting enable" or check
 168:../system/src/diag/trace_impl.c **** // the corresponding button in the JLink Debugging plug-in.
 169:../system/src/diag/trace_impl.c **** // In OpenOCD, support for semihosting can be enabled using
 170:../system/src/diag/trace_impl.c **** // "monitor arm semihosting enable".
 171:../system/src/diag/trace_impl.c **** //
 172:../system/src/diag/trace_impl.c **** // Note: Applications built with semihosting output active normally cannot
 173:../system/src/diag/trace_impl.c **** // be executed without the debugger connected and active, since they use
 174:../system/src/diag/trace_impl.c **** // BKPT to communicate with the host. However, with a carefully written
 175:../system/src/diag/trace_impl.c **** // HardFault_Handler, the semihosting BKPT calls can be processed, making
 176:../system/src/diag/trace_impl.c **** // possible to run semihosting applications as standalone, without being
 177:../system/src/diag/trace_impl.c **** // terminated with hardware faults.
 178:../system/src/diag/trace_impl.c **** 
 179:../system/src/diag/trace_impl.c **** #endif // OS_USE_TRACE_SEMIHOSTING_DEBUG_*
 180:../system/src/diag/trace_impl.c **** 
 181:../system/src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
 182:../system/src/diag/trace_impl.c **** 
 183:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_SEMIHOSTING_STDOUT)
 184:../system/src/diag/trace_impl.c **** 
 185:../system/src/diag/trace_impl.c **** static ssize_t
 186:../system/src/diag/trace_impl.c **** _trace_write_semihosting_stdout (const char* buf, size_t nbyte)
 187:../system/src/diag/trace_impl.c **** {
 188:../system/src/diag/trace_impl.c ****   static int handle;
 189:../system/src/diag/trace_impl.c ****   void* block[3];
 190:../system/src/diag/trace_impl.c ****   int ret;
 191:../system/src/diag/trace_impl.c **** 
 192:../system/src/diag/trace_impl.c ****   if (handle == 0)
 193:../system/src/diag/trace_impl.c ****     {
 194:../system/src/diag/trace_impl.c ****       // On the first call get the file handle from the host
 195:../system/src/diag/trace_impl.c ****       block[0] = ":tt"; // special filename to be used for stdin/out/err
 196:../system/src/diag/trace_impl.c ****       block[1] = (void*) 4; // mode "w"
 197:../system/src/diag/trace_impl.c ****       // length of ":tt", except null terminator
 198:../system/src/diag/trace_impl.c ****       block[2] = (void*) (sizeof(":tt") - 1);
 199:../system/src/diag/trace_impl.c **** 
 200:../system/src/diag/trace_impl.c ****       ret = call_host (SEMIHOSTING_SYS_OPEN, (void*) block);
 201:../system/src/diag/trace_impl.c ****       if (ret == -1)
 202:../system/src/diag/trace_impl.c ****         return -1;
 203:../system/src/diag/trace_impl.c **** 
 204:../system/src/diag/trace_impl.c ****       handle = ret;
 205:../system/src/diag/trace_impl.c ****     }
 206:../system/src/diag/trace_impl.c **** 
 207:../system/src/diag/trace_impl.c ****   block[0] = (void*) handle;
 208:../system/src/diag/trace_impl.c ****   block[1] = (void*) buf;
 209:../system/src/diag/trace_impl.c ****   block[2] = (void*) nbyte;
 210:../system/src/diag/trace_impl.c ****   // send character array to host file/device
 211:../system/src/diag/trace_impl.c ****   ret = call_host (SEMIHOSTING_SYS_WRITE, (void*) block);
 212:../system/src/diag/trace_impl.c ****   // this call returns the number of bytes NOT written (0 if all ok)
 213:../system/src/diag/trace_impl.c **** 
 214:../system/src/diag/trace_impl.c ****   // -1 is not a legal value, but SEGGER seems to return it
 215:../system/src/diag/trace_impl.c ****   if (ret == -1)
 216:../system/src/diag/trace_impl.c ****     return -1;
 217:../system/src/diag/trace_impl.c **** 
 218:../system/src/diag/trace_impl.c ****   // The compliant way of returning errors
 219:../system/src/diag/trace_impl.c ****   if (ret == (int) nbyte)
 220:../system/src/diag/trace_impl.c ****     return -1;
 221:../system/src/diag/trace_impl.c **** 
 222:../system/src/diag/trace_impl.c ****   // Return the number of bytes written
 223:../system/src/diag/trace_impl.c ****   return (ssize_t) (nbyte) - (ssize_t) ret;
 224:../system/src/diag/trace_impl.c **** }
 225:../system/src/diag/trace_impl.c **** 
 226:../system/src/diag/trace_impl.c **** #endif // OS_USE_TRACE_SEMIHOSTING_STDOUT
 227:../system/src/diag/trace_impl.c **** 
 228:../system/src/diag/trace_impl.c **** // ----------------------------------------------------------------------------
 229:../system/src/diag/trace_impl.c **** 
 230:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_SEMIHOSTING_DEBUG)
 231:../system/src/diag/trace_impl.c **** 
 232:../system/src/diag/trace_impl.c **** #define OS_INTEGER_TRACE_TMP_ARRAY_SIZE  (16)
 233:../system/src/diag/trace_impl.c **** 
 234:../system/src/diag/trace_impl.c **** static ssize_t
 235:../system/src/diag/trace_impl.c **** _trace_write_semihosting_debug (const char* buf, size_t nbyte)
 236:../system/src/diag/trace_impl.c **** {
  27              		.loc 1 236 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  33              		.cfi_def_cfa_offset 28
  34              		.cfi_offset 4, -28
  35              		.cfi_offset 5, -24
  36              		.cfi_offset 6, -20
  37              		.cfi_offset 7, -16
  38              		.cfi_offset 8, -12
  39              		.cfi_offset 9, -8
  40              		.cfi_offset 14, -4
  41 0004 85B0     		sub	sp, sp, #20
  42              		.cfi_def_cfa_offset 48
  43 0006 0446     		mov	r4, r0
  44 0008 0F46     		mov	r7, r1
 237:../system/src/diag/trace_impl.c ****   // Since the single character debug channel is quite slow, try to
 238:../system/src/diag/trace_impl.c ****   // optimise and send a null terminated string, if possible.
 239:../system/src/diag/trace_impl.c ****   if (buf[nbyte] == '\0')
  45              		.loc 1 239 0
  46 000a 4356     		ldrsb	r3, [r0, r1]
  47 000c 13BB     		cbnz	r3, .L7
  48              	.LVL1:
  49              	.LBB8:
  50              	.LBB9:
  51              		.file 2 "../system/include/arm/semihosting.h"
   1:../system/include/arm/semihosting.h **** /*
   2:../system/include/arm/semihosting.h ****  * This file is part of the ÂµOS++ distribution.
   3:../system/include/arm/semihosting.h ****  *   (https://github.com/micro-os-plus)
   4:../system/include/arm/semihosting.h ****  * Copyright (c) 2014 Liviu Ionescu.
   5:../system/include/arm/semihosting.h ****  *
   6:../system/include/arm/semihosting.h ****  * Permission is hereby granted, free of charge, to any person
   7:../system/include/arm/semihosting.h ****  * obtaining a copy of this software and associated documentation
   8:../system/include/arm/semihosting.h ****  * files (the "Software"), to deal in the Software without
   9:../system/include/arm/semihosting.h ****  * restriction, including without limitation the rights to use,
  10:../system/include/arm/semihosting.h ****  * copy, modify, merge, publish, distribute, sublicense, and/or
  11:../system/include/arm/semihosting.h ****  * sell copies of the Software, and to permit persons to whom
  12:../system/include/arm/semihosting.h ****  * the Software is furnished to do so, subject to the following
  13:../system/include/arm/semihosting.h ****  * conditions:
  14:../system/include/arm/semihosting.h ****  *
  15:../system/include/arm/semihosting.h ****  * The above copyright notice and this permission notice shall be
  16:../system/include/arm/semihosting.h ****  * included in all copies or substantial portions of the Software.
  17:../system/include/arm/semihosting.h ****  *
  18:../system/include/arm/semihosting.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  19:../system/include/arm/semihosting.h ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  20:../system/include/arm/semihosting.h ****  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  21:../system/include/arm/semihosting.h ****  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  22:../system/include/arm/semihosting.h ****  * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  23:../system/include/arm/semihosting.h ****  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  24:../system/include/arm/semihosting.h ****  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  25:../system/include/arm/semihosting.h ****  * OTHER DEALINGS IN THE SOFTWARE.
  26:../system/include/arm/semihosting.h ****  */
  27:../system/include/arm/semihosting.h **** 
  28:../system/include/arm/semihosting.h **** #ifndef ARM_SEMIHOSTING_H_
  29:../system/include/arm/semihosting.h **** #define ARM_SEMIHOSTING_H_
  30:../system/include/arm/semihosting.h **** 
  31:../system/include/arm/semihosting.h **** // ----------------------------------------------------------------------------
  32:../system/include/arm/semihosting.h **** 
  33:../system/include/arm/semihosting.h **** // Semihosting operations.
  34:../system/include/arm/semihosting.h **** enum OperationNumber
  35:../system/include/arm/semihosting.h **** {
  36:../system/include/arm/semihosting.h ****   // Regular operations
  37:../system/include/arm/semihosting.h ****   SEMIHOSTING_EnterSVC = 0x17,
  38:../system/include/arm/semihosting.h ****   SEMIHOSTING_ReportException = 0x18,
  39:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_CLOSE = 0x02,
  40:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_CLOCK = 0x10,
  41:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_ELAPSED = 0x30,
  42:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_ERRNO = 0x13,
  43:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_FLEN = 0x0C,
  44:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_GET_CMDLINE = 0x15,
  45:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_HEAPINFO = 0x16,
  46:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_ISERROR = 0x08,
  47:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_ISTTY = 0x09,
  48:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_OPEN = 0x01,
  49:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_READ = 0x06,
  50:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_READC = 0x07,
  51:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_REMOVE = 0x0E,
  52:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_RENAME = 0x0F,
  53:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_SEEK = 0x0A,
  54:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_SYSTEM = 0x12,
  55:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_TICKFREQ = 0x31,
  56:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_TIME = 0x11,
  57:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_TMPNAM = 0x0D,
  58:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_WRITE = 0x05,
  59:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_WRITEC = 0x03,
  60:../system/include/arm/semihosting.h ****   SEMIHOSTING_SYS_WRITE0 = 0x04,
  61:../system/include/arm/semihosting.h **** 
  62:../system/include/arm/semihosting.h ****   // Codes returned by SEMIHOSTING_ReportException
  63:../system/include/arm/semihosting.h ****   ADP_Stopped_ApplicationExit = ((2 << 16) + 38),
  64:../system/include/arm/semihosting.h ****   ADP_Stopped_RunTimeError = ((2 << 16) + 35),
  65:../system/include/arm/semihosting.h **** 
  66:../system/include/arm/semihosting.h **** };
  67:../system/include/arm/semihosting.h **** 
  68:../system/include/arm/semihosting.h **** // ----------------------------------------------------------------------------
  69:../system/include/arm/semihosting.h **** 
  70:../system/include/arm/semihosting.h **** // SWI numbers and reason codes for RDI (Angel) monitors.
  71:../system/include/arm/semihosting.h **** #define AngelSWI_ARM                    0x123456
  72:../system/include/arm/semihosting.h **** #ifdef __thumb__
  73:../system/include/arm/semihosting.h **** #define AngelSWI                        0xAB
  74:../system/include/arm/semihosting.h **** #else
  75:../system/include/arm/semihosting.h **** #define AngelSWI                        AngelSWI_ARM
  76:../system/include/arm/semihosting.h **** #endif
  77:../system/include/arm/semihosting.h **** // For thumb only architectures use the BKPT instruction instead of SWI.
  78:../system/include/arm/semihosting.h **** #if defined(__ARM_ARCH_7M__)     \
  79:../system/include/arm/semihosting.h ****     || defined(__ARM_ARCH_7EM__) \
  80:../system/include/arm/semihosting.h ****     || defined(__ARM_ARCH_6M__)
  81:../system/include/arm/semihosting.h **** #define AngelSWIInsn                    "bkpt"
  82:../system/include/arm/semihosting.h **** #define AngelSWIAsm                     bkpt
  83:../system/include/arm/semihosting.h **** #else
  84:../system/include/arm/semihosting.h **** #define AngelSWIInsn                    "swi"
  85:../system/include/arm/semihosting.h **** #define AngelSWIAsm                     swi
  86:../system/include/arm/semihosting.h **** #endif
  87:../system/include/arm/semihosting.h **** 
  88:../system/include/arm/semihosting.h **** #if defined(OS_DEBUG_SEMIHOSTING_FAULTS)
  89:../system/include/arm/semihosting.h **** // Testing the local semihosting handler cannot use another BKPT, since this
  90:../system/include/arm/semihosting.h **** // configuration cannot trigger HaedFault exceptions while the debugger is
  91:../system/include/arm/semihosting.h **** // connected, so we use an illegal op code, that will trigger an
  92:../system/include/arm/semihosting.h **** // UsageFault exception.
  93:../system/include/arm/semihosting.h **** #define AngelSWITestFault       "setend be"
  94:../system/include/arm/semihosting.h **** #define AngelSWITestFaultOpCode (0xB658)
  95:../system/include/arm/semihosting.h **** #endif
  96:../system/include/arm/semihosting.h **** 
  97:../system/include/arm/semihosting.h **** static inline int
  98:../system/include/arm/semihosting.h **** __attribute__ ((always_inline))
  99:../system/include/arm/semihosting.h **** call_host (int reason, void* arg)
 100:../system/include/arm/semihosting.h **** {
 101:../system/include/arm/semihosting.h ****   int value;
 102:../system/include/arm/semihosting.h ****   asm volatile (
  52              		.loc 2 102 0
  53 000e 0425     		movs	r5, #4
  54              		.syntax unified
  55              	@ 102 "../system/include/arm/semihosting.h" 1
  56 0010 2846     		 mov r0, r5  
  57 0012 2146     	 mov r1, r4  
  58 0014 ABBE     	 bkpt #171 
  59 0016 0446     	 mov r4, r0
  60              	@ 0 "" 2
  61              	.LVL2:
  62              		.thumb
  63              		.syntax unified
  64 0018 1FE0     		b	.L3
  65              	.LVL3:
  66              	.L6:
  67              	.LBE9:
  68              	.LBE8:
  69              	.LBB10:
  70              	.LBB11:
 240:../system/src/diag/trace_impl.c ****     {
 241:../system/src/diag/trace_impl.c ****       // send string
 242:../system/src/diag/trace_impl.c ****       call_host (SEMIHOSTING_SYS_WRITE0, (void*) buf);
 243:../system/src/diag/trace_impl.c ****     }
 244:../system/src/diag/trace_impl.c ****   else
 245:../system/src/diag/trace_impl.c ****     {
 246:../system/src/diag/trace_impl.c ****       // If not, use a local buffer to speed things up
 247:../system/src/diag/trace_impl.c ****       char tmp[OS_INTEGER_TRACE_TMP_ARRAY_SIZE];
 248:../system/src/diag/trace_impl.c ****       size_t togo = nbyte;
 249:../system/src/diag/trace_impl.c ****       while (togo > 0)
 250:../system/src/diag/trace_impl.c ****         {
 251:../system/src/diag/trace_impl.c ****           unsigned int n = ((togo < sizeof(tmp)) ? togo : sizeof(tmp));
  71              		.loc 1 251 0
  72 001a 3546     		mov	r5, r6
  73 001c 102E     		cmp	r6, #16
  74 001e 28BF     		it	cs
  75 0020 1025     		movcs	r5, #16
  76              	.LVL4:
 252:../system/src/diag/trace_impl.c ****           unsigned int i = 0;
  77              		.loc 1 252 0
  78 0022 0023     		movs	r3, #0
 253:../system/src/diag/trace_impl.c ****           for (; i < n; ++i, ++buf)
  79              		.loc 1 253 0
  80 0024 06E0     		b	.L4
  81              	.LVL5:
  82              	.L5:
 254:../system/src/diag/trace_impl.c ****             {
 255:../system/src/diag/trace_impl.c ****               tmp[i] = *buf;
  83              		.loc 1 255 0 discriminator 2
  84 0026 14F9011B 		ldrsb	r1, [r4], #1
  85              	.LVL6:
  86 002a 04AA     		add	r2, sp, #16
  87 002c 1A44     		add	r2, r2, r3
  88 002e 02F8101C 		strb	r1, [r2, #-16]
 253:../system/src/diag/trace_impl.c ****           for (; i < n; ++i, ++buf)
  89              		.loc 1 253 0 discriminator 2
  90 0032 0133     		adds	r3, r3, #1
  91              	.LVL7:
  92              	.L4:
 253:../system/src/diag/trace_impl.c ****           for (; i < n; ++i, ++buf)
  93              		.loc 1 253 0 is_stmt 0 discriminator 1
  94 0034 AB42     		cmp	r3, r5
  95 0036 F6D3     		bcc	.L5
 256:../system/src/diag/trace_impl.c ****             }
 257:../system/src/diag/trace_impl.c ****           tmp[i] = '\0';
  96              		.loc 1 257 0 is_stmt 1
  97 0038 04AA     		add	r2, sp, #16
  98 003a 1344     		add	r3, r3, r2
  99              	.LVL8:
 100 003c 0022     		movs	r2, #0
 101 003e 03F8102C 		strb	r2, [r3, #-16]
 102              	.LVL9:
 103              	.LBB12:
 104              	.LBB13:
 105              		.loc 2 102 0
 106 0042 E946     		mov	r9, sp
 107 0044 4FF00408 		mov	r8, #4
 108              		.syntax unified
 109              	@ 102 "../system/include/arm/semihosting.h" 1
 110 0048 4046     		 mov r0, r8  
 111 004a 4946     	 mov r1, r9  
 112 004c ABBE     	 bkpt #171 
 113 004e 8046     	 mov r8, r0
 114              	@ 0 "" 2
 115              	.LVL10:
 116              		.thumb
 117              		.syntax unified
 118              	.LBE13:
 119              	.LBE12:
 258:../system/src/diag/trace_impl.c **** 
 259:../system/src/diag/trace_impl.c ****           call_host (SEMIHOSTING_SYS_WRITE0, (void*) tmp);
 260:../system/src/diag/trace_impl.c **** 
 261:../system/src/diag/trace_impl.c ****           togo -= n;
 120              		.loc 1 261 0
 121 0050 761B     		subs	r6, r6, r5
 122              	.LVL11:
 123 0052 00E0     		b	.L2
 124              	.LVL12:
 125              	.L7:
 126              	.LBE11:
 127              	.LBE10:
 128 0054 0E46     		mov	r6, r1
 129              	.LVL13:
 130              	.L2:
 131              	.LBB14:
 249:../system/src/diag/trace_impl.c ****         {
 132              		.loc 1 249 0
 133 0056 002E     		cmp	r6, #0
 134 0058 DFD1     		bne	.L6
 135              	.LVL14:
 136              	.L3:
 137              	.LBE14:
 262:../system/src/diag/trace_impl.c ****         }
 263:../system/src/diag/trace_impl.c ****     }
 264:../system/src/diag/trace_impl.c **** 
 265:../system/src/diag/trace_impl.c ****   // All bytes written
 266:../system/src/diag/trace_impl.c ****   return (ssize_t) nbyte;
 267:../system/src/diag/trace_impl.c **** }
 138              		.loc 1 267 0
 139 005a 3846     		mov	r0, r7
 140 005c 05B0     		add	sp, sp, #20
 141              		.cfi_def_cfa_offset 28
 142              		@ sp needed
 143 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 144              		.cfi_endproc
 145              	.LFE130:
 147 0062 00BF     		.section	.text.trace_initialize,"ax",%progbits
 148              		.align	2
 149              		.global	trace_initialize
 150              		.thumb
 151              		.thumb_func
 153              	trace_initialize:
 154              	.LFB126:
  80:../system/src/diag/trace_impl.c ****   // For regular ITM / semihosting, no inits required.
 155              		.loc 1 80 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160 0000 7047     		bx	lr
 161              		.cfi_endproc
 162              	.LFE126:
 164 0002 00BF     		.section	.text.trace_write,"ax",%progbits
 165              		.align	2
 166              		.global	trace_write
 167              		.thumb
 168              		.thumb_func
 170              	trace_write:
 171              	.LFB127:
  92:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
 172              		.loc 1 92 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              	.LVL15:
  92:../system/src/diag/trace_impl.c **** #if defined(OS_USE_TRACE_ITM)
 177              		.loc 1 92 0
 178 0000 08B5     		push	{r3, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
  98:../system/src/diag/trace_impl.c **** #endif
 182              		.loc 1 98 0
 183 0002 FFF7FEFF 		bl	_trace_write_semihosting_debug
 184              	.LVL16:
 102:../system/src/diag/trace_impl.c **** 
 185              		.loc 1 102 0
 186 0006 08BD     		pop	{r3, pc}
 187              		.cfi_endproc
 188              	.LFE127:
 190              		.text
 191              	.Letext0:
 192              		.file 3 "e:\\iti_9_months\\embeddedsystems\\tourkey\\tools\\arm gcc\\lib\\gcc\\arm-none-eabi\\5.4.
 193              		.file 4 "e:\\iti_9_months\\embeddedsystems\\tourkey\\tools\\arm gcc\\lib\\gcc\\arm-none-eabi\\5.4.
 194              		.file 5 "e:\\iti_9_months\\embeddedsystems\\tourkey\\tools\\arm gcc\\arm-none-eabi\\include\\sys\\
 195              		.file 6 "e:\\iti_9_months\\embeddedsystems\\tourkey\\tools\\arm gcc\\arm-none-eabi\\include\\sys\\
 196              		.file 7 "../system/include/cmsis/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 trace_impl.c
C:\Users\NoteBook\AppData\Local\Temp\cccAqldJ.s:20     .text._trace_write_semihosting_debug:00000000 $t
C:\Users\NoteBook\AppData\Local\Temp\cccAqldJ.s:24     .text._trace_write_semihosting_debug:00000000 _trace_write_semihosting_debug
C:\Users\NoteBook\AppData\Local\Temp\cccAqldJ.s:148    .text.trace_initialize:00000000 $t
C:\Users\NoteBook\AppData\Local\Temp\cccAqldJ.s:153    .text.trace_initialize:00000000 trace_initialize
C:\Users\NoteBook\AppData\Local\Temp\cccAqldJ.s:165    .text.trace_write:00000000 $t
C:\Users\NoteBook\AppData\Local\Temp\cccAqldJ.s:170    .text.trace_write:00000000 trace_write
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.a2f836f628cd58bfd83621916854a0d2
                           .group:00000000 wm4.stm32f4xx.h.57.caf7de43308682a5c2971c240280861f
                           .group:00000000 wm4.stm32f401xc.h.53.32ae70b26f06e84261965f4f8509143f
                           .group:00000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:00000000 wm4.core_cm4.h.82.5b4a6930d46cec837ebb7e03538f1940
                           .group:00000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:00000000 wm4.core_cm4.h.231.bf7ac9deadcf6cf58f5e6091077d58ba
                           .group:00000000 wm4.stm32f401xc.h.665.1631b5232f7e84a5a3554893915398db
                           .group:00000000 wm4.stm32f4xx.h.207.14fa426eaa9270fccf67225a85c55066
                           .group:00000000 wm4.stm32f4xx_hal_conf.h.42.14dbb308b3923aa896496f5e31c092c7
                           .group:00000000 wm4.stm32_hal_legacy.h.41.a0c7d1d1ab9e18b59678572b8fb0b559
                           .group:00000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:00000000 wm4.newlib.h.21.0b9fc973bddc8b940a18de2b6ea6adc7
                           .group:00000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.47.ba62642086d429b4f95c2381cae1c0aa
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.8188691c2279eac7a223caa50f6694b9
                           .group:00000000 wm4.stm32f4xx_hal_def.h.75.e45277c25f163200f11a5b130f34471b
                           .group:00000000 wm4.stm32f4xx_hal_rcc_ex.h.40.18b09d174fa574f01457792fbda5a4ed
                           .group:00000000 wm4.stm32f4xx_hal_rcc.h.126.909432743c2583b720bb0008d3cb601b
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.40.243a62750b839c18266a63bd9f8ec7de
                           .group:00000000 wm4.stm32f4xx_hal_gpio_ex.h.40.0690426f4d05c1c7df79d9f4fc37776e
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.282.bc507a844f3f1fa1ae0b260c571a1fed
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.40.02a49c6d9ed69b414b5251b575cbb120
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.711.7d8adff58fe0cdf7df8cf0b38bcda9a8
                           .group:00000000 wm4.stm32f4xx_hal_cortex.h.40.bd6bd5e21d30d93b5cc09e6379f85579
                           .group:00000000 wm4.stm32f4xx_hal_adc.h.40.5f72b7209e41daf25ebb2d3f44ed6022
                           .group:00000000 wm4.stm32f4xx_hal_adc_ex.h.40.74ffed63201beef39029db39ae4000e6
                           .group:00000000 wm4.stm32f4xx_hal_adc.h.600.e2fa69b55dd5855ec79c5fa8d8138abc
                           .group:00000000 wm4.stm32f4xx_hal_crc.h.40.594a9fca6b84bdca454cc94fcb8ca1e6
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.40.79f4e2fb2175b1d961992d107e3b97d1
                           .group:00000000 wm4.stm32f4xx_hal_flash_ex.h.40.078814aec6d39273876728f89faa5fdc
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.377.f3276ca767858576e66724350a5f4b79
                           .group:00000000 wm4.stm32f4xx_hal_i2c.h.40.8777077c1b40711dfbb7fe5638c86b4d
                           .group:00000000 wm4.stm32f4xx_hal_i2c_ex.h.40.e977780240ecd3ff4625d90dde83acba
                           .group:00000000 wm4.stm32f4xx_hal_i2c.h.569.f33af1dad4d641ffefd5962b45d8017e
                           .group:00000000 wm4.stm32f4xx_hal_i2s.h.40.adbb9357230b37d5785903f9377ef643
                           .group:00000000 wm4.stm32f4xx_hal_i2s_ex.h.40.b1b981bde8df0507aeadd7d987ff19d8
                           .group:00000000 wm4.stm32f4xx_hal_i2s.h.430.18183ec6891f9817e472056534290a64
                           .group:00000000 wm4.stm32f4xx_hal_iwdg.h.40.10b3ce62d06ce16241c746ce2681a9e9
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.40.48daf2b1572aa696f3e5573f36f3559f
                           .group:00000000 wm4.stm32f4xx_hal_pwr_ex.h.40.ee590d0a8b48cfc5bfa7320dcdefbe45
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.355.c8e79697d7e1fddc6656ac227acc439d
                           .group:00000000 wm4.stm32f4xx_hal_rtc.h.40.e8a9eca417eb1ea85c96699fa4825564
                           .group:00000000 wm4.stm32f4xx_hal_rtc_ex.h.40.48c33335eaffa2c91e1128c060b49586
                           .group:00000000 wm4.stm32f4xx_hal_rtc.h.711.01e1e4428c2c9ff324d2c3be286796df
                           .group:00000000 wm4.stm32f4xx_ll_sdmmc.h.40.74276ace32060010e79af5af02a40636
                           .group:00000000 wm4.stm32f4xx_hal_sd.h.70.44ce64a00d3a49c8b3953658ff6ee61b
                           .group:00000000 wm4.stm32f4xx_hal_spi.h.40.53d65072187e01517c8ed17e13b46fd9
                           .group:00000000 wm4.stm32f4xx_hal_tim.h.40.2ddd43345448926f7508d4d414cd8d44
                           .group:00000000 wm4.stm32f4xx_hal_tim_ex.h.40.51c404f3398176729c77ba26df5737f5
                           .group:00000000 wm4.stm32f4xx_hal_tim.h.1342.8e4b73046a1408dd961d89c806992d06
                           .group:00000000 wm4.stm32f4xx_hal_uart.h.40.4115b2b612e1b133e868ca3d153a397c
                           .group:00000000 wm4.stm32f4xx_hal_usart.h.40.0da1ae9e4b27096d199a6f6bbedee03d
                           .group:00000000 wm4.stm32f4xx_hal_irda.h.40.7b01c4194527bf309de0c25e6a1b6c61
                           .group:00000000 wm4.stm32f4xx_hal_smartcard.h.40.9cae48d13a13aeffbf67a67e90e13923
                           .group:00000000 wm4.stm32f4xx_hal_wwdg.h.40.18044949aad98f3b5c6a15b0659eb4bb
                           .group:00000000 wm4.stm32f4xx_ll_usb.h.40.45b30db8377470652f55eaa1d2fb7567
                           .group:00000000 wm4.stm32f4xx_hal_pcd.h.133.3788c362c5460e4abdebbc72798ed2c4
                           .group:00000000 wm4.stm32f4xx_hal_hcd.h.40.fab9d48aa62190d6b2f837ad19b189aa
                           .group:00000000 wm4.stm32f4xx_hal.h.67.9f84fd90ea7b366046c2f5ad9e68743c
                           .group:00000000 wm4.unistd.h.2.39165d5b7784d1815ef4b0c4be6df560
                           .group:00000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:00000000 wm4.unistd.h.156.74e26bdd1b78d9a50719dd472125647d
                           .group:00000000 wm4.semihosting.h.29.e1653dbea6634b93ff8fe25df9a0d7b2

NO UNDEFINED SYMBOLS
