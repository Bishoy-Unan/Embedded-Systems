   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"system_stm32f4xx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SystemInit,"ax",%progbits
  20              		.align	2
  21              		.global	SystemInit
  22              		.thumb
  23              		.thumb_func
  25              	SystemInit:
  26              	.LFB126:
  27              		.file 1 "../system/src/cmsis/system_stm32f4xx.c"
   1:../system/src/cmsis/system_stm32f4xx.c **** /**
   2:../system/src/cmsis/system_stm32f4xx.c ****   ******************************************************************************
   3:../system/src/cmsis/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../system/src/cmsis/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../system/src/cmsis/system_stm32f4xx.c ****   * @version V2.5.0
   6:../system/src/cmsis/system_stm32f4xx.c ****   * @date    22-April-2016
   7:../system/src/cmsis/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../system/src/cmsis/system_stm32f4xx.c ****   *
   9:../system/src/cmsis/system_stm32f4xx.c ****   *   This file provides two functions and one global variable to be called from 
  10:../system/src/cmsis/system_stm32f4xx.c ****   *   user application:
  11:../system/src/cmsis/system_stm32f4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and 
  12:../system/src/cmsis/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  13:../system/src/cmsis/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  14:../system/src/cmsis/system_stm32f4xx.c ****   *
  15:../system/src/cmsis/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  16:../system/src/cmsis/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  17:../system/src/cmsis/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  18:../system/src/cmsis/system_stm32f4xx.c ****   *                                     
  19:../system/src/cmsis/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  20:../system/src/cmsis/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  21:../system/src/cmsis/system_stm32f4xx.c ****   *                                 during program execution.
  22:../system/src/cmsis/system_stm32f4xx.c ****   *
  23:../system/src/cmsis/system_stm32f4xx.c ****   *
  24:../system/src/cmsis/system_stm32f4xx.c ****   ******************************************************************************
  25:../system/src/cmsis/system_stm32f4xx.c ****   * @attention
  26:../system/src/cmsis/system_stm32f4xx.c ****   *
  27:../system/src/cmsis/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2016 STMicroelectronics</center></h2>
  28:../system/src/cmsis/system_stm32f4xx.c ****   *
  29:../system/src/cmsis/system_stm32f4xx.c ****   * Redistribution and use in source and binary forms, with or without modification,
  30:../system/src/cmsis/system_stm32f4xx.c ****   * are permitted provided that the following conditions are met:
  31:../system/src/cmsis/system_stm32f4xx.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  32:../system/src/cmsis/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer.
  33:../system/src/cmsis/system_stm32f4xx.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  34:../system/src/cmsis/system_stm32f4xx.c ****   *      this list of conditions and the following disclaimer in the documentation
  35:../system/src/cmsis/system_stm32f4xx.c ****   *      and/or other materials provided with the distribution.
  36:../system/src/cmsis/system_stm32f4xx.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  37:../system/src/cmsis/system_stm32f4xx.c ****   *      may be used to endorse or promote products derived from this software
  38:../system/src/cmsis/system_stm32f4xx.c ****   *      without specific prior written permission.
  39:../system/src/cmsis/system_stm32f4xx.c ****   *
  40:../system/src/cmsis/system_stm32f4xx.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  41:../system/src/cmsis/system_stm32f4xx.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  42:../system/src/cmsis/system_stm32f4xx.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  43:../system/src/cmsis/system_stm32f4xx.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  44:../system/src/cmsis/system_stm32f4xx.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  45:../system/src/cmsis/system_stm32f4xx.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  46:../system/src/cmsis/system_stm32f4xx.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  47:../system/src/cmsis/system_stm32f4xx.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  48:../system/src/cmsis/system_stm32f4xx.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  49:../system/src/cmsis/system_stm32f4xx.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  50:../system/src/cmsis/system_stm32f4xx.c ****   *
  51:../system/src/cmsis/system_stm32f4xx.c ****   ******************************************************************************
  52:../system/src/cmsis/system_stm32f4xx.c ****   */
  53:../system/src/cmsis/system_stm32f4xx.c **** 
  54:../system/src/cmsis/system_stm32f4xx.c **** /** @addtogroup CMSIS
  55:../system/src/cmsis/system_stm32f4xx.c ****   * @{
  56:../system/src/cmsis/system_stm32f4xx.c ****   */
  57:../system/src/cmsis/system_stm32f4xx.c **** 
  58:../system/src/cmsis/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
  59:../system/src/cmsis/system_stm32f4xx.c ****   * @{
  60:../system/src/cmsis/system_stm32f4xx.c ****   */  
  61:../system/src/cmsis/system_stm32f4xx.c ****   
  62:../system/src/cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
  63:../system/src/cmsis/system_stm32f4xx.c ****   * @{
  64:../system/src/cmsis/system_stm32f4xx.c ****   */
  65:../system/src/cmsis/system_stm32f4xx.c **** 
  66:../system/src/cmsis/system_stm32f4xx.c **** 
  67:../system/src/cmsis/system_stm32f4xx.c **** #include "stm32f4xx.h"
  68:../system/src/cmsis/system_stm32f4xx.c **** 
  69:../system/src/cmsis/system_stm32f4xx.c **** #if !defined  (HSE_VALUE) 
  70:../system/src/cmsis/system_stm32f4xx.c ****   #define HSE_VALUE    ((uint32_t)25000000) /*!< Default value of the External oscillator in Hz */
  71:../system/src/cmsis/system_stm32f4xx.c **** #endif /* HSE_VALUE */
  72:../system/src/cmsis/system_stm32f4xx.c **** 
  73:../system/src/cmsis/system_stm32f4xx.c **** #if !defined  (HSI_VALUE)
  74:../system/src/cmsis/system_stm32f4xx.c ****   #define HSI_VALUE    ((uint32_t)16000000) /*!< Value of the Internal oscillator in Hz*/
  75:../system/src/cmsis/system_stm32f4xx.c **** #endif /* HSI_VALUE */
  76:../system/src/cmsis/system_stm32f4xx.c **** 
  77:../system/src/cmsis/system_stm32f4xx.c **** /**
  78:../system/src/cmsis/system_stm32f4xx.c ****   * @}
  79:../system/src/cmsis/system_stm32f4xx.c ****   */
  80:../system/src/cmsis/system_stm32f4xx.c **** 
  81:../system/src/cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
  82:../system/src/cmsis/system_stm32f4xx.c ****   * @{
  83:../system/src/cmsis/system_stm32f4xx.c ****   */
  84:../system/src/cmsis/system_stm32f4xx.c **** 
  85:../system/src/cmsis/system_stm32f4xx.c **** /**
  86:../system/src/cmsis/system_stm32f4xx.c ****   * @}
  87:../system/src/cmsis/system_stm32f4xx.c ****   */
  88:../system/src/cmsis/system_stm32f4xx.c **** 
  89:../system/src/cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
  90:../system/src/cmsis/system_stm32f4xx.c ****   * @{
  91:../system/src/cmsis/system_stm32f4xx.c ****   */
  92:../system/src/cmsis/system_stm32f4xx.c **** 
  93:../system/src/cmsis/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
  94:../system/src/cmsis/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM or SDRAM as data memory  */
  95:../system/src/cmsis/system_stm32f4xx.c **** #if defined(STM32F405xx) || defined(STM32F415xx) || defined(STM32F407xx) || defined(STM32F417xx)\
  96:../system/src/cmsis/system_stm32f4xx.c ****  || defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
  97:../system/src/cmsis/system_stm32f4xx.c ****  || defined(STM32F469xx) || defined(STM32F479xx) || defined(STM32F412Zx) || defined(STM32F412Vx)
  98:../system/src/cmsis/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
  99:../system/src/cmsis/system_stm32f4xx.c **** #endif /* STM32F40xxx || STM32F41xxx || STM32F42xxx || STM32F43xxx || STM32F469xx || STM32F479xx ||
 100:../system/src/cmsis/system_stm32f4xx.c ****           STM32F412Zx || STM32F412Vx */
 101:../system/src/cmsis/system_stm32f4xx.c ****  
 102:../system/src/cmsis/system_stm32f4xx.c **** #if defined(STM32F427xx) || defined(STM32F437xx) || defined(STM32F429xx) || defined(STM32F439xx)\
 103:../system/src/cmsis/system_stm32f4xx.c ****  || defined(STM32F446xx) || defined(STM32F469xx) || defined(STM32F479xx)
 104:../system/src/cmsis/system_stm32f4xx.c **** /* #define DATA_IN_ExtSDRAM */
 105:../system/src/cmsis/system_stm32f4xx.c **** #endif /* STM32F427xx || STM32F437xx || STM32F429xx || STM32F439xx || STM32F446xx || STM32F469xx ||
 106:../system/src/cmsis/system_stm32f4xx.c ****           STM32F479xx */
 107:../system/src/cmsis/system_stm32f4xx.c **** 
 108:../system/src/cmsis/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 109:../system/src/cmsis/system_stm32f4xx.c ****      Internal SRAM. */
 110:../system/src/cmsis/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 111:../system/src/cmsis/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 112:../system/src/cmsis/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 113:../system/src/cmsis/system_stm32f4xx.c **** /******************************************************************************/
 114:../system/src/cmsis/system_stm32f4xx.c **** 
 115:../system/src/cmsis/system_stm32f4xx.c **** /**
 116:../system/src/cmsis/system_stm32f4xx.c ****   * @}
 117:../system/src/cmsis/system_stm32f4xx.c ****   */
 118:../system/src/cmsis/system_stm32f4xx.c **** 
 119:../system/src/cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 120:../system/src/cmsis/system_stm32f4xx.c ****   * @{
 121:../system/src/cmsis/system_stm32f4xx.c ****   */
 122:../system/src/cmsis/system_stm32f4xx.c **** 
 123:../system/src/cmsis/system_stm32f4xx.c **** /**
 124:../system/src/cmsis/system_stm32f4xx.c ****   * @}
 125:../system/src/cmsis/system_stm32f4xx.c ****   */
 126:../system/src/cmsis/system_stm32f4xx.c **** 
 127:../system/src/cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 128:../system/src/cmsis/system_stm32f4xx.c ****   * @{
 129:../system/src/cmsis/system_stm32f4xx.c ****   */
 130:../system/src/cmsis/system_stm32f4xx.c ****   /* This variable is updated in three ways:
 131:../system/src/cmsis/system_stm32f4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 132:../system/src/cmsis/system_stm32f4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 133:../system/src/cmsis/system_stm32f4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency 
 134:../system/src/cmsis/system_stm32f4xx.c ****          Note: If you use this function to configure the system clock; then there
 135:../system/src/cmsis/system_stm32f4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 136:../system/src/cmsis/system_stm32f4xx.c ****                variable is updated automatically.
 137:../system/src/cmsis/system_stm32f4xx.c ****   */
 138:../system/src/cmsis/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 16000000;
 139:../system/src/cmsis/system_stm32f4xx.c **** const uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 140:../system/src/cmsis/system_stm32f4xx.c **** 
 141:../system/src/cmsis/system_stm32f4xx.c **** /**
 142:../system/src/cmsis/system_stm32f4xx.c ****   * @}
 143:../system/src/cmsis/system_stm32f4xx.c ****   */
 144:../system/src/cmsis/system_stm32f4xx.c **** 
 145:../system/src/cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 146:../system/src/cmsis/system_stm32f4xx.c ****   * @{
 147:../system/src/cmsis/system_stm32f4xx.c ****   */
 148:../system/src/cmsis/system_stm32f4xx.c **** 
 149:../system/src/cmsis/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 150:../system/src/cmsis/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 151:../system/src/cmsis/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 152:../system/src/cmsis/system_stm32f4xx.c **** 
 153:../system/src/cmsis/system_stm32f4xx.c **** /**
 154:../system/src/cmsis/system_stm32f4xx.c ****   * @}
 155:../system/src/cmsis/system_stm32f4xx.c ****   */
 156:../system/src/cmsis/system_stm32f4xx.c **** 
 157:../system/src/cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 158:../system/src/cmsis/system_stm32f4xx.c ****   * @{
 159:../system/src/cmsis/system_stm32f4xx.c ****   */
 160:../system/src/cmsis/system_stm32f4xx.c **** 
 161:../system/src/cmsis/system_stm32f4xx.c **** /**
 162:../system/src/cmsis/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 163:../system/src/cmsis/system_stm32f4xx.c ****   *         Initialize the FPU setting, vector table location and External memory 
 164:../system/src/cmsis/system_stm32f4xx.c ****   *         configuration.
 165:../system/src/cmsis/system_stm32f4xx.c ****   * @param  None
 166:../system/src/cmsis/system_stm32f4xx.c ****   * @retval None
 167:../system/src/cmsis/system_stm32f4xx.c ****   */
 168:../system/src/cmsis/system_stm32f4xx.c **** void SystemInit(void)
 169:../system/src/cmsis/system_stm32f4xx.c **** {
  28              		.loc 1 169 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 170:../system/src/cmsis/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 171:../system/src/cmsis/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 172:../system/src/cmsis/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 173:../system/src/cmsis/system_stm32f4xx.c ****   #endif
 174:../system/src/cmsis/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 175:../system/src/cmsis/system_stm32f4xx.c ****   /* Set HSION bit */
 176:../system/src/cmsis/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
  33              		.loc 1 176 0
  34 0000 0C4B     		ldr	r3, .L2
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 42F00102 		orr	r2, r2, #1
  37 0008 1A60     		str	r2, [r3]
 177:../system/src/cmsis/system_stm32f4xx.c **** 
 178:../system/src/cmsis/system_stm32f4xx.c ****   /* Reset CFGR register */
 179:../system/src/cmsis/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
  38              		.loc 1 179 0
  39 000a 0021     		movs	r1, #0
  40 000c 9960     		str	r1, [r3, #8]
 180:../system/src/cmsis/system_stm32f4xx.c **** 
 181:../system/src/cmsis/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 182:../system/src/cmsis/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  41              		.loc 1 182 0
  42 000e 1A68     		ldr	r2, [r3]
  43 0010 22F08472 		bic	r2, r2, #17301504
  44 0014 22F48032 		bic	r2, r2, #65536
  45 0018 1A60     		str	r2, [r3]
 183:../system/src/cmsis/system_stm32f4xx.c **** 
 184:../system/src/cmsis/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 185:../system/src/cmsis/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
  46              		.loc 1 185 0
  47 001a 074A     		ldr	r2, .L2+4
  48 001c 5A60     		str	r2, [r3, #4]
 186:../system/src/cmsis/system_stm32f4xx.c **** 
 187:../system/src/cmsis/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 188:../system/src/cmsis/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  49              		.loc 1 188 0
  50 001e 1A68     		ldr	r2, [r3]
  51 0020 22F48022 		bic	r2, r2, #262144
  52 0024 1A60     		str	r2, [r3]
 189:../system/src/cmsis/system_stm32f4xx.c **** 
 190:../system/src/cmsis/system_stm32f4xx.c ****   /* Disable all interrupts */
 191:../system/src/cmsis/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
  53              		.loc 1 191 0
  54 0026 D960     		str	r1, [r3, #12]
 192:../system/src/cmsis/system_stm32f4xx.c **** 
 193:../system/src/cmsis/system_stm32f4xx.c **** #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
 194:../system/src/cmsis/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 195:../system/src/cmsis/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
 196:../system/src/cmsis/system_stm32f4xx.c **** 
 197:../system/src/cmsis/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 198:../system/src/cmsis/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 199:../system/src/cmsis/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 200:../system/src/cmsis/system_stm32f4xx.c **** #else
 201:../system/src/cmsis/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  55              		.loc 1 201 0
  56 0028 4FF00062 		mov	r2, #134217728
  57 002c 034B     		ldr	r3, .L2+8
  58 002e 9A60     		str	r2, [r3, #8]
  59 0030 7047     		bx	lr
  60              	.L3:
  61 0032 00BF     		.align	2
  62              	.L2:
  63 0034 00380240 		.word	1073887232
  64 0038 10300024 		.word	603992080
  65 003c 00ED00E0 		.word	-536810240
  66              		.cfi_endproc
  67              	.LFE126:
  69              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  70              		.align	2
  71              		.global	SystemCoreClockUpdate
  72              		.thumb
  73              		.thumb_func
  75              	SystemCoreClockUpdate:
  76              	.LFB127:
 202:../system/src/cmsis/system_stm32f4xx.c **** #endif
 203:../system/src/cmsis/system_stm32f4xx.c **** }
 204:../system/src/cmsis/system_stm32f4xx.c **** 
 205:../system/src/cmsis/system_stm32f4xx.c **** /**
 206:../system/src/cmsis/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 207:../system/src/cmsis/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 208:../system/src/cmsis/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 209:../system/src/cmsis/system_stm32f4xx.c ****   *         other parameters.
 210:../system/src/cmsis/system_stm32f4xx.c ****   *           
 211:../system/src/cmsis/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 212:../system/src/cmsis/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 213:../system/src/cmsis/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 214:../system/src/cmsis/system_stm32f4xx.c ****   *     
 215:../system/src/cmsis/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 216:../system/src/cmsis/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 217:../system/src/cmsis/system_stm32f4xx.c ****   *           constant and the selected clock source:
 218:../system/src/cmsis/system_stm32f4xx.c ****   *             
 219:../system/src/cmsis/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 220:../system/src/cmsis/system_stm32f4xx.c ****   *                                              
 221:../system/src/cmsis/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 222:../system/src/cmsis/system_stm32f4xx.c ****   *                          
 223:../system/src/cmsis/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 224:../system/src/cmsis/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 225:../system/src/cmsis/system_stm32f4xx.c ****   *         
 226:../system/src/cmsis/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx_hal_conf.h file (default value
 227:../system/src/cmsis/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 228:../system/src/cmsis/system_stm32f4xx.c ****   *             in voltage and temperature.   
 229:../system/src/cmsis/system_stm32f4xx.c ****   *    
 230:../system/src/cmsis/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx_hal_conf.h file (its value
 231:../system/src/cmsis/system_stm32f4xx.c ****   *              depends on the application requirements), user has to ensure that HSE_VALUE
 232:../system/src/cmsis/system_stm32f4xx.c ****   *              is same as the real frequency of the crystal used. Otherwise, this function
 233:../system/src/cmsis/system_stm32f4xx.c ****   *              may have wrong result.
 234:../system/src/cmsis/system_stm32f4xx.c ****   *                
 235:../system/src/cmsis/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 236:../system/src/cmsis/system_stm32f4xx.c ****   *           value for HSE crystal.
 237:../system/src/cmsis/system_stm32f4xx.c ****   *     
 238:../system/src/cmsis/system_stm32f4xx.c ****   * @param  None
 239:../system/src/cmsis/system_stm32f4xx.c ****   * @retval None
 240:../system/src/cmsis/system_stm32f4xx.c ****   */
 241:../system/src/cmsis/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 242:../system/src/cmsis/system_stm32f4xx.c **** {
  77              		.loc 1 242 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.LVL0:
 243:../system/src/cmsis/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 244:../system/src/cmsis/system_stm32f4xx.c ****   
 245:../system/src/cmsis/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 246:../system/src/cmsis/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
  83              		.loc 1 246 0
  84 0000 224B     		ldr	r3, .L13
  85 0002 9B68     		ldr	r3, [r3, #8]
  86 0004 03F00C03 		and	r3, r3, #12
  87              	.LVL1:
 247:../system/src/cmsis/system_stm32f4xx.c **** 
 248:../system/src/cmsis/system_stm32f4xx.c ****   switch (tmp)
  88              		.loc 1 248 0
  89 0008 042B     		cmp	r3, #4
  90 000a 07D0     		beq	.L6
  91 000c 082B     		cmp	r3, #8
  92 000e 09D0     		beq	.L7
  93 0010 002B     		cmp	r3, #0
  94 0012 2DD1     		bne	.L12
 249:../system/src/cmsis/system_stm32f4xx.c ****   {
 250:../system/src/cmsis/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 251:../system/src/cmsis/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
  95              		.loc 1 251 0
  96 0014 1E4A     		ldr	r2, .L13+4
  97 0016 1F4B     		ldr	r3, .L13+8
  98              	.LVL2:
  99 0018 1A60     		str	r2, [r3]
 252:../system/src/cmsis/system_stm32f4xx.c ****       break;
 100              		.loc 1 252 0
 101 001a 2CE0     		b	.L9
 102              	.LVL3:
 103              	.L6:
 253:../system/src/cmsis/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 254:../system/src/cmsis/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 104              		.loc 1 254 0
 105 001c 1E4A     		ldr	r2, .L13+12
 106 001e 1D4B     		ldr	r3, .L13+8
 107              	.LVL4:
 108 0020 1A60     		str	r2, [r3]
 255:../system/src/cmsis/system_stm32f4xx.c ****       break;
 109              		.loc 1 255 0
 110 0022 28E0     		b	.L9
 111              	.LVL5:
 112              	.L7:
 256:../system/src/cmsis/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 257:../system/src/cmsis/system_stm32f4xx.c **** 
 258:../system/src/cmsis/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 259:../system/src/cmsis/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 260:../system/src/cmsis/system_stm32f4xx.c ****          */    
 261:../system/src/cmsis/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 113              		.loc 1 261 0
 114 0024 194B     		ldr	r3, .L13
 115              	.LVL6:
 116 0026 5A68     		ldr	r2, [r3, #4]
 117              	.LVL7:
 262:../system/src/cmsis/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 118              		.loc 1 262 0
 119 0028 5B68     		ldr	r3, [r3, #4]
 120 002a 03F03F03 		and	r3, r3, #63
 121              	.LVL8:
 263:../system/src/cmsis/system_stm32f4xx.c ****       
 264:../system/src/cmsis/system_stm32f4xx.c ****       if (pllsource != 0)
 122              		.loc 1 264 0
 123 002e 12F4800F 		tst	r2, #4194304
 124 0032 09D0     		beq	.L10
 265:../system/src/cmsis/system_stm32f4xx.c ****       {
 266:../system/src/cmsis/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 267:../system/src/cmsis/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 125              		.loc 1 267 0
 126 0034 184A     		ldr	r2, .L13+12
 127              	.LVL9:
 128 0036 B2FBF3F2 		udiv	r2, r2, r3
 129 003a 144B     		ldr	r3, .L13
 130              	.LVL10:
 131 003c 5B68     		ldr	r3, [r3, #4]
 132 003e C3F38813 		ubfx	r3, r3, #6, #9
 133 0042 03FB02F2 		mul	r2, r3, r2
 134              	.LVL11:
 135 0046 08E0     		b	.L11
 136              	.LVL12:
 137              	.L10:
 268:../system/src/cmsis/system_stm32f4xx.c ****       }
 269:../system/src/cmsis/system_stm32f4xx.c ****       else
 270:../system/src/cmsis/system_stm32f4xx.c ****       {
 271:../system/src/cmsis/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 272:../system/src/cmsis/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 138              		.loc 1 272 0
 139 0048 114A     		ldr	r2, .L13+4
 140              	.LVL13:
 141 004a B2FBF3F3 		udiv	r3, r2, r3
 142              	.LVL14:
 143 004e 0F4A     		ldr	r2, .L13
 144 0050 5168     		ldr	r1, [r2, #4]
 145 0052 C1F38811 		ubfx	r1, r1, #6, #9
 146 0056 01FB03F2 		mul	r2, r1, r3
 147              	.LVL15:
 148              	.L11:
 273:../system/src/cmsis/system_stm32f4xx.c ****       }
 274:../system/src/cmsis/system_stm32f4xx.c **** 
 275:../system/src/cmsis/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 149              		.loc 1 275 0
 150 005a 0C4B     		ldr	r3, .L13
 151 005c 5B68     		ldr	r3, [r3, #4]
 152 005e C3F30143 		ubfx	r3, r3, #16, #2
 153 0062 0133     		adds	r3, r3, #1
 154 0064 5B00     		lsls	r3, r3, #1
 155              	.LVL16:
 276:../system/src/cmsis/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 156              		.loc 1 276 0
 157 0066 B2FBF3F3 		udiv	r3, r2, r3
 158              	.LVL17:
 159 006a 0A4A     		ldr	r2, .L13+8
 160              	.LVL18:
 161 006c 1360     		str	r3, [r2]
 277:../system/src/cmsis/system_stm32f4xx.c ****       break;
 162              		.loc 1 277 0
 163 006e 02E0     		b	.L9
 164              	.LVL19:
 165              	.L12:
 278:../system/src/cmsis/system_stm32f4xx.c ****     default:
 279:../system/src/cmsis/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 166              		.loc 1 279 0
 167 0070 074A     		ldr	r2, .L13+4
 168 0072 084B     		ldr	r3, .L13+8
 169              	.LVL20:
 170 0074 1A60     		str	r2, [r3]
 171              	.LVL21:
 172              	.L9:
 280:../system/src/cmsis/system_stm32f4xx.c ****       break;
 281:../system/src/cmsis/system_stm32f4xx.c ****   }
 282:../system/src/cmsis/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 283:../system/src/cmsis/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 284:../system/src/cmsis/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 173              		.loc 1 284 0
 174 0076 054B     		ldr	r3, .L13
 175 0078 9B68     		ldr	r3, [r3, #8]
 176 007a C3F30313 		ubfx	r3, r3, #4, #4
 177 007e 074A     		ldr	r2, .L13+16
 178 0080 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 179              	.LVL22:
 285:../system/src/cmsis/system_stm32f4xx.c ****   /* HCLK frequency */
 286:../system/src/cmsis/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 180              		.loc 1 286 0
 181 0082 044A     		ldr	r2, .L13+8
 182 0084 1368     		ldr	r3, [r2]
 183 0086 CB40     		lsrs	r3, r3, r1
 184 0088 1360     		str	r3, [r2]
 185 008a 7047     		bx	lr
 186              	.L14:
 187              		.align	2
 188              	.L13:
 189 008c 00380240 		.word	1073887232
 190 0090 0024F400 		.word	16000000
 191 0094 00000000 		.word	.LANCHOR0
 192 0098 40787D01 		.word	25000000
 193 009c 00000000 		.word	.LANCHOR1
 194              		.cfi_endproc
 195              	.LFE127:
 197              		.global	AHBPrescTable
 198              		.global	SystemCoreClock
 199              		.section	.rodata.AHBPrescTable,"a",%progbits
 200              		.align	2
 201              		.set	.LANCHOR1,. + 0
 204              	AHBPrescTable:
 205 0000 00       		.byte	0
 206 0001 00       		.byte	0
 207 0002 00       		.byte	0
 208 0003 00       		.byte	0
 209 0004 00       		.byte	0
 210 0005 00       		.byte	0
 211 0006 00       		.byte	0
 212 0007 00       		.byte	0
 213 0008 01       		.byte	1
 214 0009 02       		.byte	2
 215 000a 03       		.byte	3
 216 000b 04       		.byte	4
 217 000c 06       		.byte	6
 218 000d 07       		.byte	7
 219 000e 08       		.byte	8
 220 000f 09       		.byte	9
 221              		.section	.data.SystemCoreClock,"aw",%progbits
 222              		.align	2
 223              		.set	.LANCHOR0,. + 0
 226              	SystemCoreClock:
 227 0000 0024F400 		.word	16000000
 228              		.text
 229              	.Letext0:
 230              		.file 2 "e:\\iti_9_months\\embeddedsystems\\tourkey\\tools\\arm gcc\\lib\\gcc\\arm-none-eabi\\5.4.
 231              		.file 3 "../system/include/cmsis/core_cm4.h"
 232              		.file 4 "../system/include/cmsis/stm32f401xc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:20     .text.SystemInit:00000000 $t
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:25     .text.SystemInit:00000000 SystemInit
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:63     .text.SystemInit:00000034 $d
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:70     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:75     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:189    .text.SystemCoreClockUpdate:0000008c $d
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:204    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:226    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:200    .rodata.AHBPrescTable:00000000 $d
C:\Users\NoteBook\AppData\Local\Temp\cccCt0YW.s:222    .data.SystemCoreClock:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.a2f836f628cd58bfd83621916854a0d2
                           .group:00000000 wm4.stm32f4xx.h.57.caf7de43308682a5c2971c240280861f
                           .group:00000000 wm4.stm32f401xc.h.53.32ae70b26f06e84261965f4f8509143f
                           .group:00000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:00000000 wm4.core_cm4.h.82.5b4a6930d46cec837ebb7e03538f1940
                           .group:00000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:00000000 wm4.core_cm4.h.231.bf7ac9deadcf6cf58f5e6091077d58ba
                           .group:00000000 wm4.stm32f401xc.h.665.1631b5232f7e84a5a3554893915398db
                           .group:00000000 wm4.stm32f4xx.h.207.14fa426eaa9270fccf67225a85c55066
                           .group:00000000 wm4.stm32f4xx_hal_conf.h.42.14dbb308b3923aa896496f5e31c092c7
                           .group:00000000 wm4.stm32_hal_legacy.h.41.a0c7d1d1ab9e18b59678572b8fb0b559
                           .group:00000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:00000000 wm4.newlib.h.21.0b9fc973bddc8b940a18de2b6ea6adc7
                           .group:00000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.47.ba62642086d429b4f95c2381cae1c0aa
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.8188691c2279eac7a223caa50f6694b9
                           .group:00000000 wm4.stm32f4xx_hal_def.h.75.e45277c25f163200f11a5b130f34471b
                           .group:00000000 wm4.stm32f4xx_hal_rcc_ex.h.40.18b09d174fa574f01457792fbda5a4ed
                           .group:00000000 wm4.stm32f4xx_hal_rcc.h.126.909432743c2583b720bb0008d3cb601b
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.40.243a62750b839c18266a63bd9f8ec7de
                           .group:00000000 wm4.stm32f4xx_hal_gpio_ex.h.40.0690426f4d05c1c7df79d9f4fc37776e
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.282.bc507a844f3f1fa1ae0b260c571a1fed
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.40.02a49c6d9ed69b414b5251b575cbb120
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.711.7d8adff58fe0cdf7df8cf0b38bcda9a8
                           .group:00000000 wm4.stm32f4xx_hal_cortex.h.40.bd6bd5e21d30d93b5cc09e6379f85579
                           .group:00000000 wm4.stm32f4xx_hal_adc.h.40.5f72b7209e41daf25ebb2d3f44ed6022
                           .group:00000000 wm4.stm32f4xx_hal_adc_ex.h.40.74ffed63201beef39029db39ae4000e6
                           .group:00000000 wm4.stm32f4xx_hal_adc.h.600.e2fa69b55dd5855ec79c5fa8d8138abc
                           .group:00000000 wm4.stm32f4xx_hal_crc.h.40.594a9fca6b84bdca454cc94fcb8ca1e6
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.40.79f4e2fb2175b1d961992d107e3b97d1
                           .group:00000000 wm4.stm32f4xx_hal_flash_ex.h.40.078814aec6d39273876728f89faa5fdc
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.377.f3276ca767858576e66724350a5f4b79
                           .group:00000000 wm4.stm32f4xx_hal_i2c.h.40.8777077c1b40711dfbb7fe5638c86b4d
                           .group:00000000 wm4.stm32f4xx_hal_i2c_ex.h.40.e977780240ecd3ff4625d90dde83acba
                           .group:00000000 wm4.stm32f4xx_hal_i2c.h.569.f33af1dad4d641ffefd5962b45d8017e
                           .group:00000000 wm4.stm32f4xx_hal_i2s.h.40.adbb9357230b37d5785903f9377ef643
                           .group:00000000 wm4.stm32f4xx_hal_i2s_ex.h.40.b1b981bde8df0507aeadd7d987ff19d8
                           .group:00000000 wm4.stm32f4xx_hal_i2s.h.430.18183ec6891f9817e472056534290a64
                           .group:00000000 wm4.stm32f4xx_hal_iwdg.h.40.10b3ce62d06ce16241c746ce2681a9e9
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.40.48daf2b1572aa696f3e5573f36f3559f
                           .group:00000000 wm4.stm32f4xx_hal_pwr_ex.h.40.ee590d0a8b48cfc5bfa7320dcdefbe45
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.355.c8e79697d7e1fddc6656ac227acc439d
                           .group:00000000 wm4.stm32f4xx_hal_rtc.h.40.e8a9eca417eb1ea85c96699fa4825564
                           .group:00000000 wm4.stm32f4xx_hal_rtc_ex.h.40.48c33335eaffa2c91e1128c060b49586
                           .group:00000000 wm4.stm32f4xx_hal_rtc.h.711.01e1e4428c2c9ff324d2c3be286796df
                           .group:00000000 wm4.stm32f4xx_ll_sdmmc.h.40.74276ace32060010e79af5af02a40636
                           .group:00000000 wm4.stm32f4xx_hal_sd.h.70.44ce64a00d3a49c8b3953658ff6ee61b
                           .group:00000000 wm4.stm32f4xx_hal_spi.h.40.53d65072187e01517c8ed17e13b46fd9
                           .group:00000000 wm4.stm32f4xx_hal_tim.h.40.2ddd43345448926f7508d4d414cd8d44
                           .group:00000000 wm4.stm32f4xx_hal_tim_ex.h.40.51c404f3398176729c77ba26df5737f5
                           .group:00000000 wm4.stm32f4xx_hal_tim.h.1342.8e4b73046a1408dd961d89c806992d06
                           .group:00000000 wm4.stm32f4xx_hal_uart.h.40.4115b2b612e1b133e868ca3d153a397c
                           .group:00000000 wm4.stm32f4xx_hal_usart.h.40.0da1ae9e4b27096d199a6f6bbedee03d
                           .group:00000000 wm4.stm32f4xx_hal_irda.h.40.7b01c4194527bf309de0c25e6a1b6c61
                           .group:00000000 wm4.stm32f4xx_hal_smartcard.h.40.9cae48d13a13aeffbf67a67e90e13923
                           .group:00000000 wm4.stm32f4xx_hal_wwdg.h.40.18044949aad98f3b5c6a15b0659eb4bb
                           .group:00000000 wm4.stm32f4xx_ll_usb.h.40.45b30db8377470652f55eaa1d2fb7567
                           .group:00000000 wm4.stm32f4xx_hal_pcd.h.133.3788c362c5460e4abdebbc72798ed2c4
                           .group:00000000 wm4.stm32f4xx_hal_hcd.h.40.fab9d48aa62190d6b2f837ad19b189aa
                           .group:00000000 wm4.stm32f4xx_hal.h.67.9f84fd90ea7b366046c2f5ad9e68743c

NO UNDEFINED SYMBOLS
