   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"_initialize_hardware.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.__initialize_hardware_early,"ax",%progbits
  20              		.align	2
  21              		.weak	__initialize_hardware_early
  22              		.thumb
  23              		.thumb_func
  25              	__initialize_hardware_early:
  26              	.LFB126:
  27              		.file 1 "../system/src/cortexm/_initialize_hardware.c"
   1:../system/src/cortexm/_initialize_hardware.c **** /*
   2:../system/src/cortexm/_initialize_hardware.c ****  * This file is part of the ÂµOS++ distribution.
   3:../system/src/cortexm/_initialize_hardware.c ****  *   (https://github.com/micro-os-plus)
   4:../system/src/cortexm/_initialize_hardware.c ****  * Copyright (c) 2014 Liviu Ionescu.
   5:../system/src/cortexm/_initialize_hardware.c ****  *
   6:../system/src/cortexm/_initialize_hardware.c ****  * Permission is hereby granted, free of charge, to any person
   7:../system/src/cortexm/_initialize_hardware.c ****  * obtaining a copy of this software and associated documentation
   8:../system/src/cortexm/_initialize_hardware.c ****  * files (the "Software"), to deal in the Software without
   9:../system/src/cortexm/_initialize_hardware.c ****  * restriction, including without limitation the rights to use,
  10:../system/src/cortexm/_initialize_hardware.c ****  * copy, modify, merge, publish, distribute, sublicense, and/or
  11:../system/src/cortexm/_initialize_hardware.c ****  * sell copies of the Software, and to permit persons to whom
  12:../system/src/cortexm/_initialize_hardware.c ****  * the Software is furnished to do so, subject to the following
  13:../system/src/cortexm/_initialize_hardware.c ****  * conditions:
  14:../system/src/cortexm/_initialize_hardware.c ****  *
  15:../system/src/cortexm/_initialize_hardware.c ****  * The above copyright notice and this permission notice shall be
  16:../system/src/cortexm/_initialize_hardware.c ****  * included in all copies or substantial portions of the Software.
  17:../system/src/cortexm/_initialize_hardware.c ****  *
  18:../system/src/cortexm/_initialize_hardware.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  19:../system/src/cortexm/_initialize_hardware.c ****  * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
  20:../system/src/cortexm/_initialize_hardware.c ****  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  21:../system/src/cortexm/_initialize_hardware.c ****  * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  22:../system/src/cortexm/_initialize_hardware.c ****  * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
  23:../system/src/cortexm/_initialize_hardware.c ****  * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  24:../system/src/cortexm/_initialize_hardware.c ****  * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
  25:../system/src/cortexm/_initialize_hardware.c ****  * OTHER DEALINGS IN THE SOFTWARE.
  26:../system/src/cortexm/_initialize_hardware.c ****  */
  27:../system/src/cortexm/_initialize_hardware.c **** 
  28:../system/src/cortexm/_initialize_hardware.c **** // ----------------------------------------------------------------------------
  29:../system/src/cortexm/_initialize_hardware.c **** 
  30:../system/src/cortexm/_initialize_hardware.c **** #include "cmsis_device.h"
  31:../system/src/cortexm/_initialize_hardware.c **** 
  32:../system/src/cortexm/_initialize_hardware.c **** // ----------------------------------------------------------------------------
  33:../system/src/cortexm/_initialize_hardware.c **** 
  34:../system/src/cortexm/_initialize_hardware.c **** extern unsigned int __vectors_start;
  35:../system/src/cortexm/_initialize_hardware.c **** 
  36:../system/src/cortexm/_initialize_hardware.c **** // Forward declarations.
  37:../system/src/cortexm/_initialize_hardware.c **** 
  38:../system/src/cortexm/_initialize_hardware.c **** void
  39:../system/src/cortexm/_initialize_hardware.c **** __initialize_hardware_early(void);
  40:../system/src/cortexm/_initialize_hardware.c **** 
  41:../system/src/cortexm/_initialize_hardware.c **** void
  42:../system/src/cortexm/_initialize_hardware.c **** __initialize_hardware(void);
  43:../system/src/cortexm/_initialize_hardware.c **** 
  44:../system/src/cortexm/_initialize_hardware.c **** // ----------------------------------------------------------------------------
  45:../system/src/cortexm/_initialize_hardware.c **** 
  46:../system/src/cortexm/_initialize_hardware.c **** // This is the early hardware initialisation routine, it can be
  47:../system/src/cortexm/_initialize_hardware.c **** // redefined in the application for more complex cases that
  48:../system/src/cortexm/_initialize_hardware.c **** // require early inits (before BSS init).
  49:../system/src/cortexm/_initialize_hardware.c **** //
  50:../system/src/cortexm/_initialize_hardware.c **** // Called early from _start(), right before data & bss init.
  51:../system/src/cortexm/_initialize_hardware.c **** //
  52:../system/src/cortexm/_initialize_hardware.c **** // After Reset the Cortex-M processor is in Thread mode,
  53:../system/src/cortexm/_initialize_hardware.c **** // priority is Privileged, and the Stack is set to Main.
  54:../system/src/cortexm/_initialize_hardware.c **** 
  55:../system/src/cortexm/_initialize_hardware.c **** void
  56:../system/src/cortexm/_initialize_hardware.c **** __attribute__((weak))
  57:../system/src/cortexm/_initialize_hardware.c **** __initialize_hardware_early(void)
  58:../system/src/cortexm/_initialize_hardware.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  59:../system/src/cortexm/_initialize_hardware.c ****   // Call the CSMSIS system initialisation routine.
  60:../system/src/cortexm/_initialize_hardware.c ****   SystemInit();
  36              		.loc 1 60 0
  37 0002 FFF7FEFF 		bl	SystemInit
  38              	.LVL0:
  61:../system/src/cortexm/_initialize_hardware.c **** 
  62:../system/src/cortexm/_initialize_hardware.c **** #if defined(__ARM_ARCH_7M__) || defined(__ARM_ARCH_7EM__)
  63:../system/src/cortexm/_initialize_hardware.c ****   // Set VTOR to the actual address, provided by the linker script.
  64:../system/src/cortexm/_initialize_hardware.c ****   // Override the manual, possibly wrong, SystemInit() setting.
  65:../system/src/cortexm/_initialize_hardware.c ****   SCB->VTOR = (uint32_t)(&__vectors_start);
  39              		.loc 1 65 0
  40 0006 024B     		ldr	r3, .L3
  41 0008 024A     		ldr	r2, .L3+4
  42 000a 9A60     		str	r2, [r3, #8]
  43 000c 08BD     		pop	{r3, pc}
  44              	.L4:
  45 000e 00BF     		.align	2
  46              	.L3:
  47 0010 00ED00E0 		.word	-536810240
  48 0014 00000000 		.word	__vectors_start
  49              		.cfi_endproc
  50              	.LFE126:
  52              		.section	.text.__initialize_hardware,"ax",%progbits
  53              		.align	2
  54              		.weak	__initialize_hardware
  55              		.thumb
  56              		.thumb_func
  58              	__initialize_hardware:
  59              	.LFB127:
  66:../system/src/cortexm/_initialize_hardware.c **** #endif
  67:../system/src/cortexm/_initialize_hardware.c **** 
  68:../system/src/cortexm/_initialize_hardware.c ****   // The current version of SystemInit() leaves the value of the clock
  69:../system/src/cortexm/_initialize_hardware.c ****   // in a RAM variable (SystemCoreClock), which will be cleared shortly,
  70:../system/src/cortexm/_initialize_hardware.c ****   // so it needs to be recomputed after the RAM initialisations
  71:../system/src/cortexm/_initialize_hardware.c ****   // are completed.
  72:../system/src/cortexm/_initialize_hardware.c **** 
  73:../system/src/cortexm/_initialize_hardware.c **** #if defined(OS_INCLUDE_STARTUP_INIT_FP) || (defined (__VFP_FP__) && !defined (__SOFTFP__))
  74:../system/src/cortexm/_initialize_hardware.c **** 
  75:../system/src/cortexm/_initialize_hardware.c ****   // Normally FP init is done by SystemInit(). In case this is not done
  76:../system/src/cortexm/_initialize_hardware.c ****   // there, it is possible to force its inclusion by defining
  77:../system/src/cortexm/_initialize_hardware.c ****   // OS_INCLUDE_STARTUP_INIT_FP.
  78:../system/src/cortexm/_initialize_hardware.c **** 
  79:../system/src/cortexm/_initialize_hardware.c ****   // Enable the Cortex-M4 FPU only when -mfloat-abi=hard.
  80:../system/src/cortexm/_initialize_hardware.c ****   // Code taken from Section 7.1, Cortex-M4 TRM (DDI0439C)
  81:../system/src/cortexm/_initialize_hardware.c **** 
  82:../system/src/cortexm/_initialize_hardware.c ****   // Set bits 20-23 to enable CP10 and CP11 coprocessor
  83:../system/src/cortexm/_initialize_hardware.c ****   SCB->CPACR |= (0xF << 20);
  84:../system/src/cortexm/_initialize_hardware.c **** 
  85:../system/src/cortexm/_initialize_hardware.c **** #endif // (__VFP_FP__) && !(__SOFTFP__)
  86:../system/src/cortexm/_initialize_hardware.c **** 
  87:../system/src/cortexm/_initialize_hardware.c **** #if defined(OS_DEBUG_SEMIHOSTING_FAULTS)
  88:../system/src/cortexm/_initialize_hardware.c ****   SCB->SHCSR |= SCB_SHCSR_USGFAULTENA_Msk;
  89:../system/src/cortexm/_initialize_hardware.c **** #endif
  90:../system/src/cortexm/_initialize_hardware.c **** }
  91:../system/src/cortexm/_initialize_hardware.c **** 
  92:../system/src/cortexm/_initialize_hardware.c **** // This is the second hardware initialisation routine, it can be
  93:../system/src/cortexm/_initialize_hardware.c **** // redefined in the application for more complex cases that
  94:../system/src/cortexm/_initialize_hardware.c **** // require custom inits (before constructors), otherwise these can
  95:../system/src/cortexm/_initialize_hardware.c **** // be done in main().
  96:../system/src/cortexm/_initialize_hardware.c **** //
  97:../system/src/cortexm/_initialize_hardware.c **** // Called from _start(), right after data & bss init, before
  98:../system/src/cortexm/_initialize_hardware.c **** // constructors.
  99:../system/src/cortexm/_initialize_hardware.c **** 
 100:../system/src/cortexm/_initialize_hardware.c **** void
 101:../system/src/cortexm/_initialize_hardware.c **** __attribute__((weak))
 102:../system/src/cortexm/_initialize_hardware.c **** __initialize_hardware(void)
 103:../system/src/cortexm/_initialize_hardware.c **** {
  60              		.loc 1 103 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64 0000 08B5     		push	{r3, lr}
  65              		.cfi_def_cfa_offset 8
  66              		.cfi_offset 3, -8
  67              		.cfi_offset 14, -4
 104:../system/src/cortexm/_initialize_hardware.c ****   // Call the CSMSIS system clock routine to store the clock frequency
 105:../system/src/cortexm/_initialize_hardware.c ****   // in the SystemCoreClock global RAM location.
 106:../system/src/cortexm/_initialize_hardware.c ****   SystemCoreClockUpdate();
  68              		.loc 1 106 0
  69 0002 FFF7FEFF 		bl	SystemCoreClockUpdate
  70              	.LVL1:
  71 0006 08BD     		pop	{r3, pc}
  72              		.cfi_endproc
  73              	.LFE127:
  75              		.text
  76              	.Letext0:
  77              		.file 2 "e:\\iti_9_months\\embeddedsystems\\tourkey\\tools\\arm gcc\\lib\\gcc\\arm-none-eabi\\5.4.
  78              		.file 3 "../system/include/cmsis/core_cm4.h"
  79              		.file 4 "../system/include/cmsis/system_stm32f4xx.h"
DEFINED SYMBOLS
                            *ABS*:00000000 _initialize_hardware.c
C:\Users\NoteBook\AppData\Local\Temp\ccfD3nfU.s:20     .text.__initialize_hardware_early:00000000 $t
C:\Users\NoteBook\AppData\Local\Temp\ccfD3nfU.s:25     .text.__initialize_hardware_early:00000000 __initialize_hardware_early
C:\Users\NoteBook\AppData\Local\Temp\ccfD3nfU.s:47     .text.__initialize_hardware_early:00000010 $d
C:\Users\NoteBook\AppData\Local\Temp\ccfD3nfU.s:53     .text.__initialize_hardware:00000000 $t
C:\Users\NoteBook\AppData\Local\Temp\ccfD3nfU.s:58     .text.__initialize_hardware:00000000 __initialize_hardware
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.a2f836f628cd58bfd83621916854a0d2
                           .group:00000000 wm4.stm32f4xx.h.57.caf7de43308682a5c2971c240280861f
                           .group:00000000 wm4.stm32f401xc.h.53.32ae70b26f06e84261965f4f8509143f
                           .group:00000000 wm4.stdintgcc.h.29.6d480f4ba0f60596e88234283d42444f
                           .group:00000000 wm4.core_cm4.h.82.5b4a6930d46cec837ebb7e03538f1940
                           .group:00000000 wm4.cmsis_gcc.h.36.39970cb43ce4b53c82644a1f9bc2eab9
                           .group:00000000 wm4.core_cm4.h.231.bf7ac9deadcf6cf58f5e6091077d58ba
                           .group:00000000 wm4.stm32f401xc.h.665.1631b5232f7e84a5a3554893915398db
                           .group:00000000 wm4.stm32f4xx.h.207.14fa426eaa9270fccf67225a85c55066
                           .group:00000000 wm4.stm32f4xx_hal_conf.h.42.14dbb308b3923aa896496f5e31c092c7
                           .group:00000000 wm4.stm32_hal_legacy.h.41.a0c7d1d1ab9e18b59678572b8fb0b559
                           .group:00000000 wm4._newlib_version.h.4.ad342815780c8db09778091a421b5b5b
                           .group:00000000 wm4.newlib.h.21.0b9fc973bddc8b940a18de2b6ea6adc7
                           .group:00000000 wm4.features.h.22.5cdadbb3efe495d1c9e38350b8c376c7
                           .group:00000000 wm4.config.h.219.65a553ab5bef5482f0d7880b0d33015e
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stdio.h.31.7c0e28c411445f3f9c5b11accf882760
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.stddef.h.187.2ff233552538c6ff9b8575ca8ea52cb3
                           .group:00000000 wm4.cdefs.h.47.ba62642086d429b4f95c2381cae1c0aa
                           .group:00000000 wm4.stddef.h.39.ec95e8feac892e292b69dc7ae75b0d64
                           .group:00000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.125.5cf8a495f1f7ef36777ad868a1e32068
                           .group:00000000 wm4.stddef.h.161.5349cb105733e8777bfb0cf53c4e3f34
                           .group:00000000 wm4._types.h.183.c226d164ceca1f2ecb9ae9360c54a098
                           .group:00000000 wm4.reent.h.17.23b059516345f8f5abfa01ddc379570f
                           .group:00000000 wm4.types.h.40.e8c16e7ec36ba55f133d0616070e25fc
                           .group:00000000 wm4._stdint.h.10.7a5f60e6741af4a5594a3867d347e1f9
                           .group:00000000 wm4._endian.h.31.65a10590763c3dde1ac4a7f66d7d4891
                           .group:00000000 wm4.endian.h.9.49f3a4695c1b61e8a0808de3c4a106cb
                           .group:00000000 wm4._timeval.h.30.0e8bfd94e85db17dda3286ee81496fe6
                           .group:00000000 wm4.timespec.h.41.d855182eb0e690443ab8651bcedca6e1
                           .group:00000000 wm4.select.h.30.bbece7fa40993a78092dcc5805132560
                           .group:00000000 wm4.types.h.69.ed3eae3cf73030a737515151ebcab7a1
                           .group:00000000 wm4.stdio.h.2.4aa87247282eca6c8f36f9de33d8df1a
                           .group:00000000 wm4.stdio.h.81.8188691c2279eac7a223caa50f6694b9
                           .group:00000000 wm4.stm32f4xx_hal_def.h.75.e45277c25f163200f11a5b130f34471b
                           .group:00000000 wm4.stm32f4xx_hal_rcc_ex.h.40.18b09d174fa574f01457792fbda5a4ed
                           .group:00000000 wm4.stm32f4xx_hal_rcc.h.126.909432743c2583b720bb0008d3cb601b
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.40.243a62750b839c18266a63bd9f8ec7de
                           .group:00000000 wm4.stm32f4xx_hal_gpio_ex.h.40.0690426f4d05c1c7df79d9f4fc37776e
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.282.bc507a844f3f1fa1ae0b260c571a1fed
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.40.02a49c6d9ed69b414b5251b575cbb120
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.711.7d8adff58fe0cdf7df8cf0b38bcda9a8
                           .group:00000000 wm4.stm32f4xx_hal_cortex.h.40.bd6bd5e21d30d93b5cc09e6379f85579
                           .group:00000000 wm4.stm32f4xx_hal_adc.h.40.5f72b7209e41daf25ebb2d3f44ed6022
                           .group:00000000 wm4.stm32f4xx_hal_adc_ex.h.40.74ffed63201beef39029db39ae4000e6
                           .group:00000000 wm4.stm32f4xx_hal_adc.h.600.e2fa69b55dd5855ec79c5fa8d8138abc
                           .group:00000000 wm4.stm32f4xx_hal_crc.h.40.594a9fca6b84bdca454cc94fcb8ca1e6
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.40.79f4e2fb2175b1d961992d107e3b97d1
                           .group:00000000 wm4.stm32f4xx_hal_flash_ex.h.40.078814aec6d39273876728f89faa5fdc
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.377.f3276ca767858576e66724350a5f4b79
                           .group:00000000 wm4.stm32f4xx_hal_i2c.h.40.8777077c1b40711dfbb7fe5638c86b4d
                           .group:00000000 wm4.stm32f4xx_hal_i2c_ex.h.40.e977780240ecd3ff4625d90dde83acba
                           .group:00000000 wm4.stm32f4xx_hal_i2c.h.569.f33af1dad4d641ffefd5962b45d8017e
                           .group:00000000 wm4.stm32f4xx_hal_i2s.h.40.adbb9357230b37d5785903f9377ef643
                           .group:00000000 wm4.stm32f4xx_hal_i2s_ex.h.40.b1b981bde8df0507aeadd7d987ff19d8
                           .group:00000000 wm4.stm32f4xx_hal_i2s.h.430.18183ec6891f9817e472056534290a64
                           .group:00000000 wm4.stm32f4xx_hal_iwdg.h.40.10b3ce62d06ce16241c746ce2681a9e9
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.40.48daf2b1572aa696f3e5573f36f3559f
                           .group:00000000 wm4.stm32f4xx_hal_pwr_ex.h.40.ee590d0a8b48cfc5bfa7320dcdefbe45
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.355.c8e79697d7e1fddc6656ac227acc439d
                           .group:00000000 wm4.stm32f4xx_hal_rtc.h.40.e8a9eca417eb1ea85c96699fa4825564
                           .group:00000000 wm4.stm32f4xx_hal_rtc_ex.h.40.48c33335eaffa2c91e1128c060b49586
                           .group:00000000 wm4.stm32f4xx_hal_rtc.h.711.01e1e4428c2c9ff324d2c3be286796df
                           .group:00000000 wm4.stm32f4xx_ll_sdmmc.h.40.74276ace32060010e79af5af02a40636
                           .group:00000000 wm4.stm32f4xx_hal_sd.h.70.44ce64a00d3a49c8b3953658ff6ee61b
                           .group:00000000 wm4.stm32f4xx_hal_spi.h.40.53d65072187e01517c8ed17e13b46fd9
                           .group:00000000 wm4.stm32f4xx_hal_tim.h.40.2ddd43345448926f7508d4d414cd8d44
                           .group:00000000 wm4.stm32f4xx_hal_tim_ex.h.40.51c404f3398176729c77ba26df5737f5
                           .group:00000000 wm4.stm32f4xx_hal_tim.h.1342.8e4b73046a1408dd961d89c806992d06
                           .group:00000000 wm4.stm32f4xx_hal_uart.h.40.4115b2b612e1b133e868ca3d153a397c
                           .group:00000000 wm4.stm32f4xx_hal_usart.h.40.0da1ae9e4b27096d199a6f6bbedee03d
                           .group:00000000 wm4.stm32f4xx_hal_irda.h.40.7b01c4194527bf309de0c25e6a1b6c61
                           .group:00000000 wm4.stm32f4xx_hal_smartcard.h.40.9cae48d13a13aeffbf67a67e90e13923
                           .group:00000000 wm4.stm32f4xx_hal_wwdg.h.40.18044949aad98f3b5c6a15b0659eb4bb
                           .group:00000000 wm4.stm32f4xx_ll_usb.h.40.45b30db8377470652f55eaa1d2fb7567
                           .group:00000000 wm4.stm32f4xx_hal_pcd.h.133.3788c362c5460e4abdebbc72798ed2c4
                           .group:00000000 wm4.stm32f4xx_hal_hcd.h.40.fab9d48aa62190d6b2f837ad19b189aa
                           .group:00000000 wm4.stm32f4xx_hal.h.67.9f84fd90ea7b366046c2f5ad9e68743c

UNDEFINED SYMBOLS
SystemInit
__vectors_start
SystemCoreClockUpdate
