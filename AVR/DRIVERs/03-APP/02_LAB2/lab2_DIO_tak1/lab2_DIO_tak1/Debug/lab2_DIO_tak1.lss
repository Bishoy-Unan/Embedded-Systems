
lab2_DIO_tak1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000003b2  00000446  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000446  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000475  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000483  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f49  00000000  00000000  000004db  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000606  00000000  00000000  00001424  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000362  00000000  00000000  00001a2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000048  00000000  00000000  00001d8c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001a3  00000000  00000000  00001dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000024f  00000000  00000000  00001f77  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000021c6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000384  00000384  00000418  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000021e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    00000006  0000037e  0000037e  00000412  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.DIO_enumInit 000002b8  000000b0  000000b0  00000144  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .data.DIO_PinCFG 00000020  00800060  00000392  00000426  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 17 .text.__dummy_fini 00000002  0000038c  0000038c  00000420  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__dummy_funcs_on_exit 00000002  0000038e  0000038e  00000422  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__dummy_simulator_exit 00000002  00000390  00000390  00000424  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.exit    00000016  00000368  00000368  000003fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text._Exit   00000004  00000388  00000388  0000041c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
   8:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
   c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  10:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  14:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  18:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  1c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  20:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  24:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  28:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  2c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  30:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  34:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  38:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  3c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  40:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  44:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  48:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  4c:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>
  50:	0c 94 c2 01 	jmp	0x384	; 0x384 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 80       	ld	r0, Z
  58:	00 03       	mulsu	r16, r16
  5a:	92 00       	.word	0x0092	; ????

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf e5       	ldi	r28, 0x5F	; 95
  62:	d8 e0       	ldi	r29, 0x08	; 8
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
  68:	e4 e5       	ldi	r30, 0x54	; 84
  6a:	f0 e0       	ldi	r31, 0x00	; 0
  6c:	40 e0       	ldi	r20, 0x00	; 0
  6e:	17 c0       	rjmp	.+46     	; 0x9e <__do_clear_bss+0x8>
  70:	b5 91       	lpm	r27, Z+
  72:	a5 91       	lpm	r26, Z+
  74:	35 91       	lpm	r19, Z+
  76:	25 91       	lpm	r18, Z+
  78:	05 91       	lpm	r16, Z+
  7a:	07 fd       	sbrc	r16, 7
  7c:	0c c0       	rjmp	.+24     	; 0x96 <__do_clear_bss>
  7e:	95 91       	lpm	r25, Z+
  80:	85 91       	lpm	r24, Z+
  82:	ef 01       	movw	r28, r30
  84:	f9 2f       	mov	r31, r25
  86:	e8 2f       	mov	r30, r24
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 17       	cp	r26, r18
  8e:	b3 07       	cpc	r27, r19
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0x20>
  92:	fe 01       	movw	r30, r28
  94:	04 c0       	rjmp	.+8      	; 0x9e <__do_clear_bss+0x8>

00000096 <__do_clear_bss>:
  96:	1d 92       	st	X+, r1
  98:	a2 17       	cp	r26, r18
  9a:	b3 07       	cpc	r27, r19
  9c:	e1 f7       	brne	.-8      	; 0x96 <__do_clear_bss>
  9e:	eb 35       	cpi	r30, 0x5B	; 91
  a0:	f4 07       	cpc	r31, r20
  a2:	31 f7       	brne	.-52     	; 0x70 <__do_copy_data+0x8>
  a4:	0e 94 bf 01 	call	0x37e	; 0x37e <main>
  a8:	0c 94 b4 01 	jmp	0x368	; 0x368 <exit>

000000ac <_exit>:
  ac:	f8 94       	cli

000000ae <__stop_program>:
  ae:	ff cf       	rjmp	.-2      	; 0xae <__stop_program>

Disassembly of section .text:

00000384 <__bad_interrupt>:
 384:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

0000037e <main>:
int main(void)
{
	/************************************************************************/
	/* configure pint0 at port A as output high using configration file "prebuild configration"                                                                     */
	/************************************************************************/
   DIO_enumInit();
 37e:	0e 94 58 00 	call	0xb0	; 0xb0 <__data_load_end>
 382:	ff cf       	rjmp	.-2      	; 0x382 <main+0x4>

Disassembly of section .text.DIO_enumInit:

000000b0 <DIO_enumInit>:
			DIO_enumPorts_t LOC_enumPortNum = DIO_enumPORTA ;
			/*DIO_enumPinOptions_t variable used to configre pin mode*/
			DIO_enumPinOptions_t LOC_enumPinNum = DIO_enumINP_PU;
			
			
			for(iterator=0; iterator < NUM_OF_PINS ;iterator++){
  b0:	80 e0       	ldi	r24, 0x00	; 0
  b2:	55 c1       	rjmp	.+682    	; 0x35e <DIO_enumInit+0x2ae>
				/*determine the pin choosed from 32 pins exist in which port*/
				LOC_enumPortNum = iterator / PINS_PER_PORT;
  b4:	98 2f       	mov	r25, r24
  b6:	96 95       	lsr	r25
  b8:	96 95       	lsr	r25
  ba:	96 95       	lsr	r25
				/*specify the bit number it will be from 0 to 7 */
				LOC_enumPinNum  = iterator % PINS_PER_PORT;
  bc:	28 2f       	mov	r18, r24
  be:	27 70       	andi	r18, 0x07	; 7
				
				switch(LOC_enumPortNum)
  c0:	91 30       	cpi	r25, 0x01	; 1
  c2:	09 f4       	brne	.+2      	; 0xc6 <DIO_enumInit+0x16>
  c4:	59 c0       	rjmp	.+178    	; 0x178 <DIO_enumInit+0xc8>
  c6:	38 f0       	brcs	.+14     	; 0xd6 <DIO_enumInit+0x26>
  c8:	92 30       	cpi	r25, 0x02	; 2
  ca:	09 f4       	brne	.+2      	; 0xce <DIO_enumInit+0x1e>
  cc:	a6 c0       	rjmp	.+332    	; 0x21a <DIO_enumInit+0x16a>
  ce:	93 30       	cpi	r25, 0x03	; 3
  d0:	09 f4       	brne	.+2      	; 0xd4 <DIO_enumInit+0x24>
  d2:	f4 c0       	rjmp	.+488    	; 0x2bc <DIO_enumInit+0x20c>
  d4:	43 c1       	rjmp	.+646    	; 0x35c <DIO_enumInit+0x2ac>
				{
					case DIO_enumPORTA:
							switch(DIO_PinCFG[iterator])
  d6:	e8 2f       	mov	r30, r24
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	e0 5a       	subi	r30, 0xA0	; 160
  dc:	ff 4f       	sbci	r31, 0xFF	; 255
  de:	90 81       	ld	r25, Z
  e0:	91 30       	cpi	r25, 0x01	; 1
  e2:	c1 f0       	breq	.+48     	; 0x114 <DIO_enumInit+0x64>
  e4:	28 f0       	brcs	.+10     	; 0xf0 <DIO_enumInit+0x40>
  e6:	92 30       	cpi	r25, 0x02	; 2
  e8:	31 f1       	breq	.+76     	; 0x136 <DIO_enumInit+0x86>
  ea:	93 30       	cpi	r25, 0x03	; 3
  ec:	a1 f1       	breq	.+104    	; 0x156 <DIO_enumInit+0xa6>
  ee:	36 c1       	rjmp	.+620    	; 0x35c <DIO_enumInit+0x2ac>
							{
									case DIO_enumINP_PU:
											CLR_BIT(DDRA,LOC_enumPinNum);
  f0:	9a b3       	in	r25, 0x1a	; 26
  f2:	41 e0       	ldi	r20, 0x01	; 1
  f4:	50 e0       	ldi	r21, 0x00	; 0
  f6:	ba 01       	movw	r22, r20
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_enumInit+0x4e>
  fa:	66 0f       	add	r22, r22
  fc:	77 1f       	adc	r23, r23
  fe:	2a 95       	dec	r18
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_enumInit+0x4a>
 102:	9b 01       	movw	r18, r22
 104:	36 2f       	mov	r19, r22
 106:	30 95       	com	r19
 108:	93 23       	and	r25, r19
 10a:	9a bb       	out	0x1a, r25	; 26
											SET_BIT(PORTA,LOC_enumPinNum);
 10c:	9b b3       	in	r25, 0x1b	; 27
 10e:	29 2b       	or	r18, r25
 110:	2b bb       	out	0x1b, r18	; 27
									break;
 112:	24 c1       	rjmp	.+584    	; 0x35c <DIO_enumInit+0x2ac>
									case DIO_enumINP_HIm:
											CLR_BIT(DDRA,LOC_enumPinNum);
 114:	9a b3       	in	r25, 0x1a	; 26
 116:	41 e0       	ldi	r20, 0x01	; 1
 118:	50 e0       	ldi	r21, 0x00	; 0
 11a:	ba 01       	movw	r22, r20
 11c:	02 c0       	rjmp	.+4      	; 0x122 <DIO_enumInit+0x72>
 11e:	66 0f       	add	r22, r22
 120:	77 1f       	adc	r23, r23
 122:	2a 95       	dec	r18
 124:	e2 f7       	brpl	.-8      	; 0x11e <DIO_enumInit+0x6e>
 126:	9b 01       	movw	r18, r22
 128:	20 95       	com	r18
 12a:	92 23       	and	r25, r18
 12c:	9a bb       	out	0x1a, r25	; 26
											CLR_BIT(PORTA,LOC_enumPinNum);
 12e:	9b b3       	in	r25, 0x1b	; 27
 130:	29 23       	and	r18, r25
 132:	2b bb       	out	0x1b, r18	; 27
									break;
 134:	13 c1       	rjmp	.+550    	; 0x35c <DIO_enumInit+0x2ac>
									case DIO_enumOUT_HIGH:
											SET_BIT(DDRA,LOC_enumPinNum);
 136:	9a b3       	in	r25, 0x1a	; 26
 138:	41 e0       	ldi	r20, 0x01	; 1
 13a:	50 e0       	ldi	r21, 0x00	; 0
 13c:	ba 01       	movw	r22, r20
 13e:	02 c0       	rjmp	.+4      	; 0x144 <DIO_enumInit+0x94>
 140:	66 0f       	add	r22, r22
 142:	77 1f       	adc	r23, r23
 144:	2a 95       	dec	r18
 146:	e2 f7       	brpl	.-8      	; 0x140 <DIO_enumInit+0x90>
 148:	9b 01       	movw	r18, r22
 14a:	96 2b       	or	r25, r22
 14c:	9a bb       	out	0x1a, r25	; 26
											SET_BIT(PORTA,LOC_enumPinNum);
 14e:	9b b3       	in	r25, 0x1b	; 27
 150:	29 2b       	or	r18, r25
 152:	2b bb       	out	0x1b, r18	; 27
									break;
 154:	03 c1       	rjmp	.+518    	; 0x35c <DIO_enumInit+0x2ac>
									case DIO_enumOUT_lOW:
											SET_BIT(DDRA,LOC_enumPinNum);
 156:	9a b3       	in	r25, 0x1a	; 26
 158:	41 e0       	ldi	r20, 0x01	; 1
 15a:	50 e0       	ldi	r21, 0x00	; 0
 15c:	ba 01       	movw	r22, r20
 15e:	02 c0       	rjmp	.+4      	; 0x164 <DIO_enumInit+0xb4>
 160:	66 0f       	add	r22, r22
 162:	77 1f       	adc	r23, r23
 164:	2a 95       	dec	r18
 166:	e2 f7       	brpl	.-8      	; 0x160 <DIO_enumInit+0xb0>
 168:	9b 01       	movw	r18, r22
 16a:	96 2b       	or	r25, r22
 16c:	9a bb       	out	0x1a, r25	; 26
											CLR_BIT(PORTA,LOC_enumPinNum);
 16e:	9b b3       	in	r25, 0x1b	; 27
 170:	20 95       	com	r18
 172:	29 23       	and	r18, r25
 174:	2b bb       	out	0x1b, r18	; 27
									break;
 176:	f2 c0       	rjmp	.+484    	; 0x35c <DIO_enumInit+0x2ac>
									default:
									break;
							}/*switch 2*/
					break;
					case DIO_enumPORTB:
							switch(DIO_PinCFG[iterator])
 178:	e8 2f       	mov	r30, r24
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	e0 5a       	subi	r30, 0xA0	; 160
 17e:	ff 4f       	sbci	r31, 0xFF	; 255
 180:	90 81       	ld	r25, Z
 182:	91 30       	cpi	r25, 0x01	; 1
 184:	c1 f0       	breq	.+48     	; 0x1b6 <DIO_enumInit+0x106>
 186:	28 f0       	brcs	.+10     	; 0x192 <DIO_enumInit+0xe2>
 188:	92 30       	cpi	r25, 0x02	; 2
 18a:	31 f1       	breq	.+76     	; 0x1d8 <DIO_enumInit+0x128>
 18c:	93 30       	cpi	r25, 0x03	; 3
 18e:	a1 f1       	breq	.+104    	; 0x1f8 <DIO_enumInit+0x148>
 190:	e5 c0       	rjmp	.+458    	; 0x35c <DIO_enumInit+0x2ac>
									{
											case DIO_enumINP_PU:
													CLR_BIT(DDRB,LOC_enumPinNum);
 192:	97 b3       	in	r25, 0x17	; 23
 194:	41 e0       	ldi	r20, 0x01	; 1
 196:	50 e0       	ldi	r21, 0x00	; 0
 198:	ba 01       	movw	r22, r20
 19a:	02 c0       	rjmp	.+4      	; 0x1a0 <DIO_enumInit+0xf0>
 19c:	66 0f       	add	r22, r22
 19e:	77 1f       	adc	r23, r23
 1a0:	2a 95       	dec	r18
 1a2:	e2 f7       	brpl	.-8      	; 0x19c <DIO_enumInit+0xec>
 1a4:	9b 01       	movw	r18, r22
 1a6:	36 2f       	mov	r19, r22
 1a8:	30 95       	com	r19
 1aa:	93 23       	and	r25, r19
 1ac:	97 bb       	out	0x17, r25	; 23
													SET_BIT(PORTB,LOC_enumPinNum);
 1ae:	98 b3       	in	r25, 0x18	; 24
 1b0:	29 2b       	or	r18, r25
 1b2:	28 bb       	out	0x18, r18	; 24
											break;
 1b4:	d3 c0       	rjmp	.+422    	; 0x35c <DIO_enumInit+0x2ac>
											case DIO_enumINP_HIm:
													CLR_BIT(DDRB,LOC_enumPinNum);
 1b6:	97 b3       	in	r25, 0x17	; 23
 1b8:	41 e0       	ldi	r20, 0x01	; 1
 1ba:	50 e0       	ldi	r21, 0x00	; 0
 1bc:	ba 01       	movw	r22, r20
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_enumInit+0x114>
 1c0:	66 0f       	add	r22, r22
 1c2:	77 1f       	adc	r23, r23
 1c4:	2a 95       	dec	r18
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_enumInit+0x110>
 1c8:	9b 01       	movw	r18, r22
 1ca:	20 95       	com	r18
 1cc:	92 23       	and	r25, r18
 1ce:	97 bb       	out	0x17, r25	; 23
													CLR_BIT(PORTB,LOC_enumPinNum);
 1d0:	98 b3       	in	r25, 0x18	; 24
 1d2:	29 23       	and	r18, r25
 1d4:	28 bb       	out	0x18, r18	; 24
											break;
 1d6:	c2 c0       	rjmp	.+388    	; 0x35c <DIO_enumInit+0x2ac>
											case DIO_enumOUT_HIGH:
													SET_BIT(DDRB,LOC_enumPinNum);
 1d8:	97 b3       	in	r25, 0x17	; 23
 1da:	41 e0       	ldi	r20, 0x01	; 1
 1dc:	50 e0       	ldi	r21, 0x00	; 0
 1de:	ba 01       	movw	r22, r20
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_enumInit+0x136>
 1e2:	66 0f       	add	r22, r22
 1e4:	77 1f       	adc	r23, r23
 1e6:	2a 95       	dec	r18
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_enumInit+0x132>
 1ea:	9b 01       	movw	r18, r22
 1ec:	96 2b       	or	r25, r22
 1ee:	97 bb       	out	0x17, r25	; 23
													SET_BIT(PORTB,LOC_enumPinNum);
 1f0:	98 b3       	in	r25, 0x18	; 24
 1f2:	29 2b       	or	r18, r25
 1f4:	28 bb       	out	0x18, r18	; 24
											break;
 1f6:	b2 c0       	rjmp	.+356    	; 0x35c <DIO_enumInit+0x2ac>
											case DIO_enumOUT_lOW:
													SET_BIT(DDRB,LOC_enumPinNum);
 1f8:	97 b3       	in	r25, 0x17	; 23
 1fa:	41 e0       	ldi	r20, 0x01	; 1
 1fc:	50 e0       	ldi	r21, 0x00	; 0
 1fe:	ba 01       	movw	r22, r20
 200:	02 c0       	rjmp	.+4      	; 0x206 <DIO_enumInit+0x156>
 202:	66 0f       	add	r22, r22
 204:	77 1f       	adc	r23, r23
 206:	2a 95       	dec	r18
 208:	e2 f7       	brpl	.-8      	; 0x202 <DIO_enumInit+0x152>
 20a:	9b 01       	movw	r18, r22
 20c:	96 2b       	or	r25, r22
 20e:	97 bb       	out	0x17, r25	; 23
													CLR_BIT(PORTB,LOC_enumPinNum);
 210:	98 b3       	in	r25, 0x18	; 24
 212:	20 95       	com	r18
 214:	29 23       	and	r18, r25
 216:	28 bb       	out	0x18, r18	; 24
											break;
 218:	a1 c0       	rjmp	.+322    	; 0x35c <DIO_enumInit+0x2ac>
											default:
											break;
									}/*switch 2*/
					break;
					case DIO_enumPORTC:
								switch(DIO_PinCFG[iterator])
 21a:	e8 2f       	mov	r30, r24
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	e0 5a       	subi	r30, 0xA0	; 160
 220:	ff 4f       	sbci	r31, 0xFF	; 255
 222:	90 81       	ld	r25, Z
 224:	91 30       	cpi	r25, 0x01	; 1
 226:	c1 f0       	breq	.+48     	; 0x258 <DIO_enumInit+0x1a8>
 228:	28 f0       	brcs	.+10     	; 0x234 <DIO_enumInit+0x184>
 22a:	92 30       	cpi	r25, 0x02	; 2
 22c:	31 f1       	breq	.+76     	; 0x27a <DIO_enumInit+0x1ca>
 22e:	93 30       	cpi	r25, 0x03	; 3
 230:	a1 f1       	breq	.+104    	; 0x29a <DIO_enumInit+0x1ea>
 232:	94 c0       	rjmp	.+296    	; 0x35c <DIO_enumInit+0x2ac>
									{
											case DIO_enumINP_PU:
													CLR_BIT(DDRC,LOC_enumPinNum);
 234:	94 b3       	in	r25, 0x14	; 20
 236:	41 e0       	ldi	r20, 0x01	; 1
 238:	50 e0       	ldi	r21, 0x00	; 0
 23a:	ba 01       	movw	r22, r20
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_enumInit+0x192>
 23e:	66 0f       	add	r22, r22
 240:	77 1f       	adc	r23, r23
 242:	2a 95       	dec	r18
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_enumInit+0x18e>
 246:	9b 01       	movw	r18, r22
 248:	36 2f       	mov	r19, r22
 24a:	30 95       	com	r19
 24c:	93 23       	and	r25, r19
 24e:	94 bb       	out	0x14, r25	; 20
													SET_BIT(PORTC,LOC_enumPinNum);
 250:	95 b3       	in	r25, 0x15	; 21
 252:	29 2b       	or	r18, r25
 254:	25 bb       	out	0x15, r18	; 21
											break;
 256:	82 c0       	rjmp	.+260    	; 0x35c <DIO_enumInit+0x2ac>
											case DIO_enumINP_HIm:
													CLR_BIT(DDRC,LOC_enumPinNum);
 258:	94 b3       	in	r25, 0x14	; 20
 25a:	41 e0       	ldi	r20, 0x01	; 1
 25c:	50 e0       	ldi	r21, 0x00	; 0
 25e:	ba 01       	movw	r22, r20
 260:	02 c0       	rjmp	.+4      	; 0x266 <DIO_enumInit+0x1b6>
 262:	66 0f       	add	r22, r22
 264:	77 1f       	adc	r23, r23
 266:	2a 95       	dec	r18
 268:	e2 f7       	brpl	.-8      	; 0x262 <DIO_enumInit+0x1b2>
 26a:	9b 01       	movw	r18, r22
 26c:	20 95       	com	r18
 26e:	92 23       	and	r25, r18
 270:	94 bb       	out	0x14, r25	; 20
													CLR_BIT(PORTC,LOC_enumPinNum);
 272:	95 b3       	in	r25, 0x15	; 21
 274:	29 23       	and	r18, r25
 276:	25 bb       	out	0x15, r18	; 21
											break;
 278:	71 c0       	rjmp	.+226    	; 0x35c <DIO_enumInit+0x2ac>
											case DIO_enumOUT_HIGH:
													SET_BIT(DDRC,LOC_enumPinNum);
 27a:	94 b3       	in	r25, 0x14	; 20
 27c:	41 e0       	ldi	r20, 0x01	; 1
 27e:	50 e0       	ldi	r21, 0x00	; 0
 280:	ba 01       	movw	r22, r20
 282:	02 c0       	rjmp	.+4      	; 0x288 <DIO_enumInit+0x1d8>
 284:	66 0f       	add	r22, r22
 286:	77 1f       	adc	r23, r23
 288:	2a 95       	dec	r18
 28a:	e2 f7       	brpl	.-8      	; 0x284 <DIO_enumInit+0x1d4>
 28c:	9b 01       	movw	r18, r22
 28e:	96 2b       	or	r25, r22
 290:	94 bb       	out	0x14, r25	; 20
													SET_BIT(PORTC,LOC_enumPinNum);
 292:	95 b3       	in	r25, 0x15	; 21
 294:	29 2b       	or	r18, r25
 296:	25 bb       	out	0x15, r18	; 21
											break;
 298:	61 c0       	rjmp	.+194    	; 0x35c <DIO_enumInit+0x2ac>
											case DIO_enumOUT_lOW:
													SET_BIT(DDRC,LOC_enumPinNum);
 29a:	94 b3       	in	r25, 0x14	; 20
 29c:	41 e0       	ldi	r20, 0x01	; 1
 29e:	50 e0       	ldi	r21, 0x00	; 0
 2a0:	ba 01       	movw	r22, r20
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <DIO_enumInit+0x1f8>
 2a4:	66 0f       	add	r22, r22
 2a6:	77 1f       	adc	r23, r23
 2a8:	2a 95       	dec	r18
 2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <DIO_enumInit+0x1f4>
 2ac:	9b 01       	movw	r18, r22
 2ae:	96 2b       	or	r25, r22
 2b0:	94 bb       	out	0x14, r25	; 20
													CLR_BIT(PORTC,LOC_enumPinNum);
 2b2:	95 b3       	in	r25, 0x15	; 21
 2b4:	20 95       	com	r18
 2b6:	29 23       	and	r18, r25
 2b8:	25 bb       	out	0x15, r18	; 21
											break;
 2ba:	50 c0       	rjmp	.+160    	; 0x35c <DIO_enumInit+0x2ac>
											default:
											break;
									}/*switch 2*/
					break;
					case DIO_enumPORTD:
								switch(DIO_PinCFG[iterator])
 2bc:	e8 2f       	mov	r30, r24
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	e0 5a       	subi	r30, 0xA0	; 160
 2c2:	ff 4f       	sbci	r31, 0xFF	; 255
 2c4:	90 81       	ld	r25, Z
 2c6:	91 30       	cpi	r25, 0x01	; 1
 2c8:	c1 f0       	breq	.+48     	; 0x2fa <DIO_enumInit+0x24a>
 2ca:	28 f0       	brcs	.+10     	; 0x2d6 <DIO_enumInit+0x226>
 2cc:	92 30       	cpi	r25, 0x02	; 2
 2ce:	31 f1       	breq	.+76     	; 0x31c <DIO_enumInit+0x26c>
 2d0:	93 30       	cpi	r25, 0x03	; 3
 2d2:	a1 f1       	breq	.+104    	; 0x33c <DIO_enumInit+0x28c>
 2d4:	43 c0       	rjmp	.+134    	; 0x35c <DIO_enumInit+0x2ac>
									{
											case DIO_enumINP_PU:
													CLR_BIT(DDRD,LOC_enumPinNum);
 2d6:	91 b3       	in	r25, 0x11	; 17
 2d8:	41 e0       	ldi	r20, 0x01	; 1
 2da:	50 e0       	ldi	r21, 0x00	; 0
 2dc:	ba 01       	movw	r22, r20
 2de:	02 c0       	rjmp	.+4      	; 0x2e4 <DIO_enumInit+0x234>
 2e0:	66 0f       	add	r22, r22
 2e2:	77 1f       	adc	r23, r23
 2e4:	2a 95       	dec	r18
 2e6:	e2 f7       	brpl	.-8      	; 0x2e0 <DIO_enumInit+0x230>
 2e8:	9b 01       	movw	r18, r22
 2ea:	36 2f       	mov	r19, r22
 2ec:	30 95       	com	r19
 2ee:	93 23       	and	r25, r19
 2f0:	91 bb       	out	0x11, r25	; 17
													SET_BIT(PORTD,LOC_enumPinNum);
 2f2:	92 b3       	in	r25, 0x12	; 18
 2f4:	29 2b       	or	r18, r25
 2f6:	22 bb       	out	0x12, r18	; 18
											break;
 2f8:	31 c0       	rjmp	.+98     	; 0x35c <DIO_enumInit+0x2ac>
											case DIO_enumINP_HIm:
													CLR_BIT(DDRD,LOC_enumPinNum);
 2fa:	91 b3       	in	r25, 0x11	; 17
 2fc:	41 e0       	ldi	r20, 0x01	; 1
 2fe:	50 e0       	ldi	r21, 0x00	; 0
 300:	ba 01       	movw	r22, r20
 302:	02 c0       	rjmp	.+4      	; 0x308 <DIO_enumInit+0x258>
 304:	66 0f       	add	r22, r22
 306:	77 1f       	adc	r23, r23
 308:	2a 95       	dec	r18
 30a:	e2 f7       	brpl	.-8      	; 0x304 <DIO_enumInit+0x254>
 30c:	9b 01       	movw	r18, r22
 30e:	20 95       	com	r18
 310:	92 23       	and	r25, r18
 312:	91 bb       	out	0x11, r25	; 17
													CLR_BIT(PORTD,LOC_enumPinNum);
 314:	92 b3       	in	r25, 0x12	; 18
 316:	29 23       	and	r18, r25
 318:	22 bb       	out	0x12, r18	; 18
											break;
 31a:	20 c0       	rjmp	.+64     	; 0x35c <DIO_enumInit+0x2ac>
											case DIO_enumOUT_HIGH:
													SET_BIT(DDRD,LOC_enumPinNum);
 31c:	91 b3       	in	r25, 0x11	; 17
 31e:	41 e0       	ldi	r20, 0x01	; 1
 320:	50 e0       	ldi	r21, 0x00	; 0
 322:	ba 01       	movw	r22, r20
 324:	02 c0       	rjmp	.+4      	; 0x32a <DIO_enumInit+0x27a>
 326:	66 0f       	add	r22, r22
 328:	77 1f       	adc	r23, r23
 32a:	2a 95       	dec	r18
 32c:	e2 f7       	brpl	.-8      	; 0x326 <DIO_enumInit+0x276>
 32e:	9b 01       	movw	r18, r22
 330:	96 2b       	or	r25, r22
 332:	91 bb       	out	0x11, r25	; 17
													SET_BIT(PORTD,LOC_enumPinNum);
 334:	92 b3       	in	r25, 0x12	; 18
 336:	29 2b       	or	r18, r25
 338:	22 bb       	out	0x12, r18	; 18
											break;
 33a:	10 c0       	rjmp	.+32     	; 0x35c <DIO_enumInit+0x2ac>
											case DIO_enumOUT_lOW:
													SET_BIT(DDRD,LOC_enumPinNum);
 33c:	91 b3       	in	r25, 0x11	; 17
 33e:	41 e0       	ldi	r20, 0x01	; 1
 340:	50 e0       	ldi	r21, 0x00	; 0
 342:	ba 01       	movw	r22, r20
 344:	02 c0       	rjmp	.+4      	; 0x34a <DIO_enumInit+0x29a>
 346:	66 0f       	add	r22, r22
 348:	77 1f       	adc	r23, r23
 34a:	2a 95       	dec	r18
 34c:	e2 f7       	brpl	.-8      	; 0x346 <DIO_enumInit+0x296>
 34e:	9b 01       	movw	r18, r22
 350:	96 2b       	or	r25, r22
 352:	91 bb       	out	0x11, r25	; 17
													CLR_BIT(PORTD,LOC_enumPinNum);
 354:	92 b3       	in	r25, 0x12	; 18
 356:	20 95       	com	r18
 358:	29 23       	and	r18, r25
 35a:	22 bb       	out	0x12, r18	; 18
			DIO_enumPorts_t LOC_enumPortNum = DIO_enumPORTA ;
			/*DIO_enumPinOptions_t variable used to configre pin mode*/
			DIO_enumPinOptions_t LOC_enumPinNum = DIO_enumINP_PU;
			
			
			for(iterator=0; iterator < NUM_OF_PINS ;iterator++){
 35c:	8f 5f       	subi	r24, 0xFF	; 255
 35e:	80 32       	cpi	r24, 0x20	; 32
 360:	08 f4       	brcc	.+2      	; 0x364 <DIO_enumInit+0x2b4>
 362:	a8 ce       	rjmp	.-688    	; 0xb4 <DIO_enumInit+0x4>
			
			
			
			return DIO_enumReturnErrorStatus;
			
		}/*dio inite postbuild configration mode*/
 364:	80 e0       	ldi	r24, 0x00	; 0
 366:	08 95       	ret

Disassembly of section .text.__dummy_fini:

0000038c <_fini>:
 38c:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

0000038e <__funcs_on_exit>:
 38e:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000390 <__simulator_exit>:
 390:	08 95       	ret

Disassembly of section .text.exit:

00000368 <exit>:
 368:	ec 01       	movw	r28, r24
 36a:	0e 94 c7 01 	call	0x38e	; 0x38e <__funcs_on_exit>
 36e:	0e 94 c6 01 	call	0x38c	; 0x38c <_fini>
 372:	ce 01       	movw	r24, r28
 374:	0e 94 c8 01 	call	0x390	; 0x390 <__simulator_exit>
 378:	ce 01       	movw	r24, r28
 37a:	0e 94 c4 01 	call	0x388	; 0x388 <_Exit>

Disassembly of section .text._Exit:

00000388 <_Exit>:
 388:	0e 94 56 00 	call	0xac	; 0xac <_exit>
