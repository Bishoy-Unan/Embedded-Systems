
LED_ON.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000136  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000136  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000165  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000173  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000854  00000000  00000000  00000193  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000058d  00000000  00000000  000009e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000216  00000000  00000000  00000f74  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000118c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000196  00000000  00000000  000011b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000048  00000000  00000000  00001346  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  0000138e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000000b4  000000b4  00000128  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    00000032  0000006c  0000006c  000000e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__dummy_fini 00000002  000000bc  000000bc  00000130  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.__dummy_funcs_on_exit 00000002  000000be  000000be  00000132  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.__dummy_simulator_exit 00000002  000000c0  000000c0  00000134  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.exit    00000016  0000009e  0000009e  00000112  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text._Exit   00000004  000000b8  000000b8  0000012c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   8:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
   c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  10:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  14:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  18:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  1c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  20:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  24:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  28:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  2c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  30:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  34:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  38:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  3c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  40:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  44:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  48:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  4c:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>
  50:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <_etext>
  64:	0c 94 4f 00 	jmp	0x9e	; 0x9e <exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

000000b4 <__bad_interrupt>:
  b4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.main:

0000006c <main>:


int main(void)
{
	/*cnfigure pin0 and pin1 at port A as output */
	DDRA = 0b00000011;
  6c:	83 e0       	ldi	r24, 0x03	; 3
  6e:	8a bb       	out	0x1a, r24	; 26
	while(1)
	{
		/*LED ON1 FOR ONE SECOND AND LED TWO OFF FOR ONE SECOND*/
		PORTA = 0b00000001;
  70:	81 e0       	ldi	r24, 0x01	; 1
  72:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  74:	2f e3       	ldi	r18, 0x3F	; 63
  76:	8d e0       	ldi	r24, 0x0D	; 13
  78:	93 e0       	ldi	r25, 0x03	; 3
  7a:	21 50       	subi	r18, 0x01	; 1
  7c:	80 40       	sbci	r24, 0x00	; 0
  7e:	90 40       	sbci	r25, 0x00	; 0
  80:	e1 f7       	brne	.-8      	; 0x7a <main+0xe>
  82:	00 c0       	rjmp	.+0      	; 0x84 <main+0x18>
  84:	00 00       	nop
		_delay_ms(1000);
		/*LED ON1 FOR ONE SECOND AND LED TWO OFF FOR ONE SECOND*/
		PORTA = 0b00000010;
  86:	82 e0       	ldi	r24, 0x02	; 2
  88:	8b bb       	out	0x1b, r24	; 27
  8a:	2f e3       	ldi	r18, 0x3F	; 63
  8c:	8d e0       	ldi	r24, 0x0D	; 13
  8e:	93 e0       	ldi	r25, 0x03	; 3
  90:	21 50       	subi	r18, 0x01	; 1
  92:	80 40       	sbci	r24, 0x00	; 0
  94:	90 40       	sbci	r25, 0x00	; 0
  96:	e1 f7       	brne	.-8      	; 0x90 <main+0x24>
  98:	00 c0       	rjmp	.+0      	; 0x9a <main+0x2e>
  9a:	00 00       	nop
  9c:	e9 cf       	rjmp	.-46     	; 0x70 <main+0x4>

Disassembly of section .text.__dummy_fini:

000000bc <_fini>:
  bc:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000000be <__funcs_on_exit>:
  be:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000000c0 <__simulator_exit>:
  c0:	08 95       	ret

Disassembly of section .text.exit:

0000009e <exit>:
  9e:	ec 01       	movw	r28, r24
  a0:	0e 94 5f 00 	call	0xbe	; 0xbe <__funcs_on_exit>
  a4:	0e 94 5e 00 	call	0xbc	; 0xbc <_fini>
  a8:	ce 01       	movw	r24, r28
  aa:	0e 94 60 00 	call	0xc0	; 0xc0 <__simulator_exit>
  ae:	ce 01       	movw	r24, r28
  b0:	0e 94 5c 00 	call	0xb8	; 0xb8 <_Exit>

Disassembly of section .text._Exit:

000000b8 <_Exit>:
  b8:	0e 94 34 00 	call	0x68	; 0x68 <_exit>
