
KeyPad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000922  000009d6  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000009d6  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  00000a05  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000a13  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002b24  00000000  00000000  00000b43  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a8d  00000000  00000000  00003667  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e87  00000000  00000000  000040f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002d8  00000000  00000000  00004f7c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000298  00000000  00000000  00005254  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000119d  00000000  00000000  000054ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00006689  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000008e6  000008e6  0000099a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000673c  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    0000003a  0000086a  0000086a  0000091e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.KEYPAD_enuInit 0000002c  000008a4  000008a4  00000958  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.KEYPAD_enuGetPressedKey 00000118  0000045c  0000045c  00000510  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .data.SWITCH_Configration 00000010  00800078  0000090c  000009c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 18 .data.KeyPad_PINS 00000018  00800060  000008f4  000009a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 19 .text.LED_enumdInit 0000010c  00000574  00000574  00000628  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.LED_enuSetLedState 0000006a  00000704  00000704  000007b8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .data.LEDS    00000006  00800088  0000091c  000009d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 22 .text.DIO_enumSetCFG 000003a8  000000b4  000000b4  00000168  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.DIO_enumGetPinVal 00000084  00000680  00000680  00000734  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__vector_1 00000054  0000076e  0000076e  00000822  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.__vector_2 00000054  000007c2  000007c2  00000876  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.__vector_3 00000054  00000816  00000816  000008ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .bss.ExtInt2_AddCallBack 00000002  0080008e  0080008e  000009d6  2**0
                  ALLOC
 28 .bss.ExtInt1_AddCallBack 00000002  00800090  00800090  000009d6  2**0
                  ALLOC
 29 .bss.ExtInt0_AddCallBack 00000002  00800092  00800092  000009d6  2**0
                  ALLOC
 30 .text.__dummy_fini 00000002  000008ee  000008ee  000009a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__dummy_funcs_on_exit 00000002  000008f0  000008f0  000009a4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.__dummy_simulator_exit 00000002  000008f2  000008f2  000009a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.exit    00000016  000008d0  000008d0  00000984  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text._Exit   00000004  000008ea  000008ea  0000099e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 30 00 	jmp	0x60	; 0x60 <__ctors_end>
   4:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__vector_1>
   8:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <__vector_2>
   c:	0c 94 0b 04 	jmp	0x816	; 0x816 <__vector_3>
  10:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  14:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  18:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  1c:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  20:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  24:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  28:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  2c:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  30:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  34:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  38:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  3c:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  40:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  44:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  48:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  4c:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>
  50:	0c 94 73 04 	jmp	0x8e6	; 0x8e6 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 8e       	std	Z+24, r0	; 0x18
  58:	00 08       	sbc	r0, r0
  5a:	f4 00       	.word	0x00f4	; ????
  5c:	8e 00       	.word	0x008e	; ????
  5e:	94 80       	ldd	r9, Z+4	; 0x04

00000060 <__ctors_end>:
  60:	11 24       	eor	r1, r1
  62:	1f be       	out	0x3f, r1	; 63
  64:	cf e5       	ldi	r28, 0x5F	; 95
  66:	d8 e0       	ldi	r29, 0x08	; 8
  68:	de bf       	out	0x3e, r29	; 62
  6a:	cd bf       	out	0x3d, r28	; 61

0000006c <__do_copy_data>:
  6c:	e4 e5       	ldi	r30, 0x54	; 84
  6e:	f0 e0       	ldi	r31, 0x00	; 0
  70:	40 e0       	ldi	r20, 0x00	; 0
  72:	17 c0       	rjmp	.+46     	; 0xa2 <__do_clear_bss+0x8>
  74:	b5 91       	lpm	r27, Z+
  76:	a5 91       	lpm	r26, Z+
  78:	35 91       	lpm	r19, Z+
  7a:	25 91       	lpm	r18, Z+
  7c:	05 91       	lpm	r16, Z+
  7e:	07 fd       	sbrc	r16, 7
  80:	0c c0       	rjmp	.+24     	; 0x9a <__do_clear_bss>
  82:	95 91       	lpm	r25, Z+
  84:	85 91       	lpm	r24, Z+
  86:	ef 01       	movw	r28, r30
  88:	f9 2f       	mov	r31, r25
  8a:	e8 2f       	mov	r30, r24
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	a2 17       	cp	r26, r18
  92:	b3 07       	cpc	r27, r19
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0x20>
  96:	fe 01       	movw	r30, r28
  98:	04 c0       	rjmp	.+8      	; 0xa2 <__do_clear_bss+0x8>

0000009a <__do_clear_bss>:
  9a:	1d 92       	st	X+, r1
  9c:	a2 17       	cp	r26, r18
  9e:	b3 07       	cpc	r27, r19
  a0:	e1 f7       	brne	.-8      	; 0x9a <__do_clear_bss>
  a2:	e0 36       	cpi	r30, 0x60	; 96
  a4:	f4 07       	cpc	r31, r20
  a6:	31 f7       	brne	.-52     	; 0x74 <__do_copy_data+0x8>
  a8:	0e 94 35 04 	call	0x86a	; 0x86a <main>
  ac:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <exit>

000000b0 <_exit>:
  b0:	f8 94       	cli

000000b2 <__stop_program>:
  b2:	ff cf       	rjmp	.-2      	; 0xb2 <__stop_program>

Disassembly of section .text:

000008e6 <__bad_interrupt>:
 8e6:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

0000086a <main>:
#include "../HAL/KeyPad/KeyPad_Config.h"
#include "../HAL/LED/LED.h"
#include "../HAL/LED/LED_Config.h"

int main(void)
{
 86a:	cf 93       	push	r28
 86c:	df 93       	push	r29
 86e:	0f 92       	push	r0
 870:	cd b7       	in	r28, 0x3d	; 61
 872:	de b7       	in	r29, 0x3e	; 62
	/**
	*@ LOCAL_u8Button1 variable to check that any switch  pressed or not
	*/
	u8 LOCAL_u8Button1 ; 
	
	KEYPAD_enuInit();
 874:	0e 94 52 04 	call	0x8a4	; 0x8a4 <KEYPAD_enuInit>
	LED_enumdInit();
 878:	0e 94 ba 02 	call	0x574	; 0x574 <LED_enumdInit>
	
    while(1)
    {
		KEYPAD_enuGetPressedKey( & LOCAL_u8Button1 );
 87c:	ce 01       	movw	r24, r28
 87e:	01 96       	adiw	r24, 0x01	; 1
 880:	0e 94 2e 02 	call	0x45c	; 0x45c <KEYPAD_enuGetPressedKey>
		switch(LOCAL_u8Button1)
 884:	89 81       	ldd	r24, Y+1	; 0x01
 886:	8b 32       	cpi	r24, 0x2B	; 43
 888:	19 f0       	breq	.+6      	; 0x890 <main+0x26>
 88a:	8f 32       	cpi	r24, 0x2F	; 47
 88c:	31 f0       	breq	.+12     	; 0x89a <main+0x30>
 88e:	f6 cf       	rjmp	.-20     	; 0x87c <main+0x12>
		{
			case '+':
				
					LED_enuSetLedState(LED1,LED_enumActiveHigh_ON);
 890:	60 e0       	ldi	r22, 0x00	; 0
 892:	80 e0       	ldi	r24, 0x00	; 0
 894:	0e 94 82 03 	call	0x704	; 0x704 <LED_enuSetLedState>
					
				
			break;
 898:	f1 cf       	rjmp	.-30     	; 0x87c <main+0x12>
			case '/':
					LED_enuSetLedState(LED1,LED_enumActiveHigh_OFF);
 89a:	61 e0       	ldi	r22, 0x01	; 1
 89c:	80 e0       	ldi	r24, 0x00	; 0
 89e:	0e 94 82 03 	call	0x704	; 0x704 <LED_enuSetLedState>
					
			break;
 8a2:	ec cf       	rjmp	.-40     	; 0x87c <main+0x12>

Disassembly of section .text.KEYPAD_enuInit:

000008a4 <KEYPAD_enuInit>:
*@breif KEYPAD_enuInit() function to set the Rows and Columns configrations
*@param Nothing
*@return Error status
*/
KeyPad_enumErrorState KEYPAD_enuInit(void)
{
 8a4:	cf 93       	push	r28
	*/
	KeyPad_enumErrorState LOCAL_enumReturnStatus = KeyPad_enumOK ;
	
	u8 Local_u8PinNo = 0 ;

	for(Local_u8PinNo = 0 ; Local_u8PinNo < (NUM_OF_ROWS + NUM_OF_COLUMNS) ; Local_u8PinNo++)
 8a6:	c0 e0       	ldi	r28, 0x00	; 0
KeyPad_enumErrorState KEYPAD_enuInit(void)
{
	/**
	*@ Error status for return variable
	*/
	KeyPad_enumErrorState LOCAL_enumReturnStatus = KeyPad_enumOK ;
 8a8:	80 e0       	ldi	r24, 0x00	; 0
	
	u8 Local_u8PinNo = 0 ;

	for(Local_u8PinNo = 0 ; Local_u8PinNo < (NUM_OF_ROWS + NUM_OF_COLUMNS) ; Local_u8PinNo++)
 8aa:	0e c0       	rjmp	.+28     	; 0x8c8 <KEYPAD_enuInit+0x24>
	{
		/**
		*@ Set the row and columns pins as configred in KeyPad_PINS array in KeyPad_Config.c file
		*@ using DIO_enumSetCFG() API from DIO_04 driver
		*/
		LOCAL_enumReturnStatus = DIO_enumSetCFG( & KeyPad_PINS [Local_u8PinNo] );
 8ac:	8c 2f       	mov	r24, r28
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	9c 01       	movw	r18, r24
 8b2:	22 0f       	add	r18, r18
 8b4:	33 1f       	adc	r19, r19
 8b6:	82 0f       	add	r24, r18
 8b8:	93 1f       	adc	r25, r19
 8ba:	80 5a       	subi	r24, 0xA0	; 160
 8bc:	9f 4f       	sbci	r25, 0xFF	; 255
 8be:	0e 94 5a 00 	call	0xb4	; 0xb4 <__data_load_end>
		/**
		*@ validate if DIO_enumSetCFG function return not ok then break
		*/
		if(LOCAL_enumReturnStatus)
 8c2:	81 11       	cpse	r24, r1
 8c4:	03 c0       	rjmp	.+6      	; 0x8cc <KEYPAD_enuInit+0x28>
	*/
	KeyPad_enumErrorState LOCAL_enumReturnStatus = KeyPad_enumOK ;
	
	u8 Local_u8PinNo = 0 ;

	for(Local_u8PinNo = 0 ; Local_u8PinNo < (NUM_OF_ROWS + NUM_OF_COLUMNS) ; Local_u8PinNo++)
 8c6:	cf 5f       	subi	r28, 0xFF	; 255
 8c8:	c8 30       	cpi	r28, 0x08	; 8
 8ca:	80 f3       	brcs	.-32     	; 0x8ac <KEYPAD_enuInit+0x8>
		
	}
	
	
  return LOCAL_enumReturnStatus ;	
}/* KEYPAD_enuInit function*/
 8cc:	cf 91       	pop	r28
 8ce:	08 95       	ret

Disassembly of section .text.KEYPAD_enuGetPressedKey:

0000045c <KEYPAD_enuGetPressedKey>:
*@breif KEYPAD_enuGetPressedKey() function to get the pressed button value
*@param pointer in which return the value of the pressed button
*@return Error status
*/
KeyPad_enumErrorState KEYPAD_enuGetPressedKey(u8 *Copy_pu8Addr)
{
 45c:	8f 92       	push	r8
 45e:	9f 92       	push	r9
 460:	af 92       	push	r10
 462:	bf 92       	push	r11
 464:	cf 92       	push	r12
 466:	df 92       	push	r13
 468:	ef 92       	push	r14
 46a:	ff 92       	push	r15
 46c:	0f 93       	push	r16
 46e:	1f 93       	push	r17
 470:	cf 93       	push	r28
 472:	df 93       	push	r29
 474:	0f 92       	push	r0
 476:	cd b7       	in	r28, 0x3d	; 61
 478:	de b7       	in	r29, 0x3e	; 62
	/**
	*@ Error status for return variable
	*/
	KeyPad_enumErrorState LOCAL_enumReturnStatus = KeyPad_enumOK ;
	
	u8 Local_u8ColNo=0 , Local_u8RowNo=0 , Local_u8RetVal = 1 ;
 47a:	21 e0       	ldi	r18, 0x01	; 1
 47c:	29 83       	std	Y+1, r18	; 0x01
	
	/**
	*@ validate the pointer
	*/
	if( Copy_pu8Addr == NULL)
 47e:	00 97       	sbiw	r24, 0x00	; 0
 480:	09 f4       	brne	.+2      	; 0x484 <KEYPAD_enuGetPressedKey+0x28>
 482:	69 c0       	rjmp	.+210    	; 0x556 <KEYPAD_enuGetPressedKey+0xfa>
 484:	5c 01       	movw	r10, r24
		LOCAL_enumReturnStatus = KeyPad_enumNOK ;
	
	}/*if*/
	else{
			
			*Copy_pu8Addr =	0 ;	
 486:	fc 01       	movw	r30, r24
 488:	10 82       	st	Z, r1
			/**
			*@ looping on the columns, start from 4 to 8
			*@ becouse of the columns starts from 4 index in SWITCH_Configration array
			*/
			for (Local_u8ColNo = COLUMN0_PIN ; Local_u8ColNo < (NUM_OF_ROWS + NUM_OF_COLUMNS) ; Local_u8ColNo++)
 48a:	68 94       	set
 48c:	88 24       	eor	r8, r8
 48e:	82 f8       	bld	r8, 2
{
	
	/**
	*@ Error status for return variable
	*/
	KeyPad_enumErrorState LOCAL_enumReturnStatus = KeyPad_enumOK ;
 490:	80 e0       	ldi	r24, 0x00	; 0
			*Copy_pu8Addr =	0 ;	
			/**
			*@ looping on the columns, start from 4 to 8
			*@ becouse of the columns starts from 4 index in SWITCH_Configration array
			*/
			for (Local_u8ColNo = COLUMN0_PIN ; Local_u8ColNo < (NUM_OF_ROWS + NUM_OF_COLUMNS) ; Local_u8ColNo++)
 492:	5c c0       	rjmp	.+184    	; 0x54c <KEYPAD_enuGetPressedKey+0xf0>
			{
				/*
				*@ Activate column
				*/
				KeyPad_PINS[Local_u8ColNo].PORT_strCFGType = DIO_enumOUTPUTLOW ;
 494:	e8 2c       	mov	r14, r8
 496:	f1 2c       	mov	r15, r1
 498:	67 01       	movw	r12, r14
 49a:	cc 0c       	add	r12, r12
 49c:	dd 1c       	adc	r13, r13
 49e:	c6 01       	movw	r24, r12
 4a0:	8e 0d       	add	r24, r14
 4a2:	9f 1d       	adc	r25, r15
 4a4:	9c 01       	movw	r18, r24
 4a6:	20 5a       	subi	r18, 0xA0	; 160
 4a8:	3f 4f       	sbci	r19, 0xFF	; 255
 4aa:	69 01       	movw	r12, r18
 4ac:	81 e0       	ldi	r24, 0x01	; 1
 4ae:	f9 01       	movw	r30, r18
 4b0:	82 83       	std	Z+2, r24	; 0x02
				/**
				*@ DIO_enumSetCFG() API to set the configration
				*/
				LOCAL_enumReturnStatus = DIO_enumSetCFG( & KeyPad_PINS [Local_u8ColNo] );
 4b2:	c9 01       	movw	r24, r18
 4b4:	0e 94 5a 00 	call	0xb4	; 0xb4 <__data_load_end>
				/**
				*@ loop to read the rows, which one is Low, start from zero to NUM_OF_ROWS
				*@ becouse of the rows starts from zero index in SWITCH_Configration array
				*/
				for(Local_u8RowNo = ROW0_PIN ; Local_u8RowNo < NUM_OF_ROWS ; Local_u8RowNo++)
 4b8:	91 2c       	mov	r9, r1
 4ba:	35 c0       	rjmp	.+106    	; 0x526 <KEYPAD_enuGetPressedKey+0xca>
				{
					/**
					*@ read the pin status and return the value in the Local_u8RetVal variable
					*/
					DIO_enumGetPinVal( KeyPad_PINS[Local_u8RowNo].PORT_strPORT , KeyPad_PINS[Local_u8RowNo].PORT_strPIN , &Local_u8RetVal);
 4bc:	09 2d       	mov	r16, r9
 4be:	10 e0       	ldi	r17, 0x00	; 0
 4c0:	f8 01       	movw	r30, r16
 4c2:	ee 0f       	add	r30, r30
 4c4:	ff 1f       	adc	r31, r31
 4c6:	e0 0f       	add	r30, r16
 4c8:	f1 1f       	adc	r31, r17
 4ca:	e0 5a       	subi	r30, 0xA0	; 160
 4cc:	ff 4f       	sbci	r31, 0xFF	; 255
 4ce:	ae 01       	movw	r20, r28
 4d0:	4f 5f       	subi	r20, 0xFF	; 255
 4d2:	5f 4f       	sbci	r21, 0xFF	; 255
 4d4:	61 81       	ldd	r22, Z+1	; 0x01
 4d6:	80 81       	ld	r24, Z
 4d8:	0e 94 40 03 	call	0x680	; 0x680 <DIO_enumGetPinVal>
					*/
				
					/**
					*@ ckeck the pressed button at this row or not
					*/
					if ( Local_u8RetVal == 0)
 4dc:	89 81       	ldd	r24, Y+1	; 0x01
 4de:	81 11       	cpse	r24, r1
 4e0:	21 c0       	rjmp	.+66     	; 0x524 <KEYPAD_enuGetPressedKey+0xc8>
						{
							
							/**
							*@ return the pressed button value according to the array SWITCH_Configration configuration
							*/
							 * Copy_pu8Addr = SWITCH_Configration[Local_u8RowNo][(Local_u8ColNo-NUM_OF_COLUMNS)];
 4e2:	f8 01       	movw	r30, r16
 4e4:	ee 0f       	add	r30, r30
 4e6:	ff 1f       	adc	r31, r31
 4e8:	ee 0f       	add	r30, r30
 4ea:	ff 1f       	adc	r31, r31
 4ec:	e8 58       	subi	r30, 0x88	; 136
 4ee:	ff 4f       	sbci	r31, 0xFF	; 255
 4f0:	c7 01       	movw	r24, r14
 4f2:	04 97       	sbiw	r24, 0x04	; 4
 4f4:	e8 0f       	add	r30, r24
 4f6:	f9 1f       	adc	r31, r25
 4f8:	80 81       	ld	r24, Z
 4fa:	f5 01       	movw	r30, r10
 4fc:	80 83       	st	Z, r24
							
							/*
							*@ wait to release the button
							*/
						while(Local_u8RetVal == 0)
 4fe:	0e c0       	rjmp	.+28     	; 0x51c <KEYPAD_enuGetPressedKey+0xc0>
							{
								DIO_enumGetPinVal( KeyPad_PINS[Local_u8RowNo].PORT_strPORT , KeyPad_PINS[Local_u8RowNo].PORT_strPIN , &Local_u8RetVal);			
 500:	f8 01       	movw	r30, r16
 502:	ee 0f       	add	r30, r30
 504:	ff 1f       	adc	r31, r31
 506:	e0 0f       	add	r30, r16
 508:	f1 1f       	adc	r31, r17
 50a:	e0 5a       	subi	r30, 0xA0	; 160
 50c:	ff 4f       	sbci	r31, 0xFF	; 255
 50e:	ae 01       	movw	r20, r28
 510:	4f 5f       	subi	r20, 0xFF	; 255
 512:	5f 4f       	sbci	r21, 0xFF	; 255
 514:	61 81       	ldd	r22, Z+1	; 0x01
 516:	80 81       	ld	r24, Z
 518:	0e 94 40 03 	call	0x680	; 0x680 <DIO_enumGetPinVal>
							 * Copy_pu8Addr = SWITCH_Configration[Local_u8RowNo][(Local_u8ColNo-NUM_OF_COLUMNS)];
							
							/*
							*@ wait to release the button
							*/
						while(Local_u8RetVal == 0)
 51c:	89 81       	ldd	r24, Y+1	; 0x01
 51e:	88 23       	and	r24, r24
 520:	79 f3       	breq	.-34     	; 0x500 <KEYPAD_enuGetPressedKey+0xa4>
 522:	04 c0       	rjmp	.+8      	; 0x52c <KEYPAD_enuGetPressedKey+0xd0>
				LOCAL_enumReturnStatus = DIO_enumSetCFG( & KeyPad_PINS [Local_u8ColNo] );
				/**
				*@ loop to read the rows, which one is Low, start from zero to NUM_OF_ROWS
				*@ becouse of the rows starts from zero index in SWITCH_Configration array
				*/
				for(Local_u8RowNo = ROW0_PIN ; Local_u8RowNo < NUM_OF_ROWS ; Local_u8RowNo++)
 524:	93 94       	inc	r9
 526:	f3 e0       	ldi	r31, 0x03	; 3
 528:	f9 15       	cp	r31, r9
 52a:	40 f6       	brcc	.-112    	; 0x4bc <KEYPAD_enuGetPressedKey+0x60>
				}/*for 2*/
				
				/*
				*@Deactivate column
				*/
				KeyPad_PINS[Local_u8ColNo].PORT_strCFGType = DIO_enumOUTPUTHIGH ;
 52c:	f7 01       	movw	r30, r14
 52e:	ee 0f       	add	r30, r30
 530:	ff 1f       	adc	r31, r31
 532:	ee 0d       	add	r30, r14
 534:	ff 1d       	adc	r31, r15
 536:	e0 5a       	subi	r30, 0xA0	; 160
 538:	ff 4f       	sbci	r31, 0xFF	; 255
 53a:	12 82       	std	Z+2, r1	; 0x02
				/**
				*@ DIO_enumSetCFG() API to set the configration
				*/
				LOCAL_enumReturnStatus = DIO_enumSetCFG( & KeyPad_PINS [Local_u8ColNo] );
 53c:	c6 01       	movw	r24, r12
 53e:	0e 94 5a 00 	call	0xb4	; 0xb4 <__data_load_end>
				/**
				*@ check the pointer value to break columns loop in case any key is pressed
				*/
				if(*Copy_pu8Addr!=0)
 542:	f5 01       	movw	r30, r10
 544:	90 81       	ld	r25, Z
 546:	91 11       	cpse	r25, r1
 548:	07 c0       	rjmp	.+14     	; 0x558 <KEYPAD_enuGetPressedKey+0xfc>
			*Copy_pu8Addr =	0 ;	
			/**
			*@ looping on the columns, start from 4 to 8
			*@ becouse of the columns starts from 4 index in SWITCH_Configration array
			*/
			for (Local_u8ColNo = COLUMN0_PIN ; Local_u8ColNo < (NUM_OF_ROWS + NUM_OF_COLUMNS) ; Local_u8ColNo++)
 54a:	83 94       	inc	r8
 54c:	f7 e0       	ldi	r31, 0x07	; 7
 54e:	f8 15       	cp	r31, r8
 550:	08 f0       	brcs	.+2      	; 0x554 <KEYPAD_enuGetPressedKey+0xf8>
 552:	a0 cf       	rjmp	.-192    	; 0x494 <KEYPAD_enuGetPressedKey+0x38>
 554:	01 c0       	rjmp	.+2      	; 0x558 <KEYPAD_enuGetPressedKey+0xfc>
	/**
	*@ validate the pointer
	*/
	if( Copy_pu8Addr == NULL)
	{
		LOCAL_enumReturnStatus = KeyPad_enumNOK ;
 556:	81 e0       	ldi	r24, 0x01	; 1
	/**
	*@ return the error status value
	*/
	 return LOCAL_enumReturnStatus ;
	 
}/*KEYPAD_enuGetPressedKey function*/
 558:	0f 90       	pop	r0
 55a:	df 91       	pop	r29
 55c:	cf 91       	pop	r28
 55e:	1f 91       	pop	r17
 560:	0f 91       	pop	r16
 562:	ff 90       	pop	r15
 564:	ef 90       	pop	r14
 566:	df 90       	pop	r13
 568:	cf 90       	pop	r12
 56a:	bf 90       	pop	r11
 56c:	af 90       	pop	r10
 56e:	9f 90       	pop	r9
 570:	8f 90       	pop	r8
 572:	08 95       	ret

Disassembly of section .text.LED_enumdInit:

00000574 <LED_enumdInit>:
 574:	ff 92       	push	r15
 576:	0f 93       	push	r16
 578:	1f 93       	push	r17
 57a:	cf 93       	push	r28
 57c:	df 93       	push	r29
 57e:	00 d0       	rcall	.+0      	; 0x580 <LED_enumdInit+0xc>
 580:	00 d0       	rcall	.+0      	; 0x582 <LED_enumdInit+0xe>
 582:	00 d0       	rcall	.+0      	; 0x584 <LED_enumdInit+0x10>
 584:	cd b7       	in	r28, 0x3d	; 61
 586:	de b7       	in	r29, 0x3e	; 62
 588:	f1 2c       	mov	r15, r1
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	69 c0       	rjmp	.+210    	; 0x660 <LED_enumdInit+0xec>
 58e:	8f 2d       	mov	r24, r15
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	fc 01       	movw	r30, r24
 594:	ee 0f       	add	r30, r30
 596:	ff 1f       	adc	r31, r31
 598:	e8 0f       	add	r30, r24
 59a:	f9 1f       	adc	r31, r25
 59c:	df 01       	movw	r26, r30
 59e:	a8 57       	subi	r26, 0x78	; 120
 5a0:	bf 4f       	sbci	r27, 0xFF	; 255
 5a2:	2c 91       	ld	r18, X
 5a4:	41 e0       	ldi	r20, 0x01	; 1
 5a6:	50 e0       	ldi	r21, 0x00	; 0
 5a8:	4c 0f       	add	r20, r28
 5aa:	5d 1f       	adc	r21, r29
 5ac:	e4 0f       	add	r30, r20
 5ae:	f5 1f       	adc	r31, r21
 5b0:	20 83       	st	Z, r18
 5b2:	11 96       	adiw	r26, 0x01	; 1
 5b4:	2c 91       	ld	r18, X
 5b6:	11 97       	sbiw	r26, 0x01	; 1
 5b8:	21 83       	std	Z+1, r18	; 0x01
 5ba:	12 96       	adiw	r26, 0x02	; 2
 5bc:	2c 91       	ld	r18, X
 5be:	21 30       	cpi	r18, 0x01	; 1
 5c0:	99 f0       	breq	.+38     	; 0x5e8 <LED_enumdInit+0x74>
 5c2:	28 f0       	brcs	.+10     	; 0x5ce <LED_enumdInit+0x5a>
 5c4:	22 30       	cpi	r18, 0x02	; 2
 5c6:	f1 f0       	breq	.+60     	; 0x604 <LED_enumdInit+0x90>
 5c8:	23 30       	cpi	r18, 0x03	; 3
 5ca:	51 f1       	breq	.+84     	; 0x620 <LED_enumdInit+0xac>
 5cc:	35 c0       	rjmp	.+106    	; 0x638 <LED_enumdInit+0xc4>
 5ce:	fc 01       	movw	r30, r24
 5d0:	ee 0f       	add	r30, r30
 5d2:	ff 1f       	adc	r31, r31
 5d4:	e8 0f       	add	r30, r24
 5d6:	f9 1f       	adc	r31, r25
 5d8:	21 e0       	ldi	r18, 0x01	; 1
 5da:	30 e0       	ldi	r19, 0x00	; 0
 5dc:	2c 0f       	add	r18, r28
 5de:	3d 1f       	adc	r19, r29
 5e0:	e2 0f       	add	r30, r18
 5e2:	f3 1f       	adc	r31, r19
 5e4:	12 82       	std	Z+2, r1	; 0x02
 5e6:	28 c0       	rjmp	.+80     	; 0x638 <LED_enumdInit+0xc4>
 5e8:	fc 01       	movw	r30, r24
 5ea:	ee 0f       	add	r30, r30
 5ec:	ff 1f       	adc	r31, r31
 5ee:	e8 0f       	add	r30, r24
 5f0:	f9 1f       	adc	r31, r25
 5f2:	41 e0       	ldi	r20, 0x01	; 1
 5f4:	50 e0       	ldi	r21, 0x00	; 0
 5f6:	4c 0f       	add	r20, r28
 5f8:	5d 1f       	adc	r21, r29
 5fa:	e4 0f       	add	r30, r20
 5fc:	f5 1f       	adc	r31, r21
 5fe:	21 e0       	ldi	r18, 0x01	; 1
 600:	22 83       	std	Z+2, r18	; 0x02
 602:	1a c0       	rjmp	.+52     	; 0x638 <LED_enumdInit+0xc4>
 604:	fc 01       	movw	r30, r24
 606:	ee 0f       	add	r30, r30
 608:	ff 1f       	adc	r31, r31
 60a:	e8 0f       	add	r30, r24
 60c:	f9 1f       	adc	r31, r25
 60e:	21 e0       	ldi	r18, 0x01	; 1
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	2c 0f       	add	r18, r28
 614:	3d 1f       	adc	r19, r29
 616:	e2 0f       	add	r30, r18
 618:	f3 1f       	adc	r31, r19
 61a:	21 e0       	ldi	r18, 0x01	; 1
 61c:	22 83       	std	Z+2, r18	; 0x02
 61e:	0c c0       	rjmp	.+24     	; 0x638 <LED_enumdInit+0xc4>
 620:	fc 01       	movw	r30, r24
 622:	ee 0f       	add	r30, r30
 624:	ff 1f       	adc	r31, r31
 626:	e8 0f       	add	r30, r24
 628:	f9 1f       	adc	r31, r25
 62a:	41 e0       	ldi	r20, 0x01	; 1
 62c:	50 e0       	ldi	r21, 0x00	; 0
 62e:	4c 0f       	add	r20, r28
 630:	5d 1f       	adc	r21, r29
 632:	e4 0f       	add	r30, r20
 634:	f5 1f       	adc	r31, r21
 636:	12 82       	std	Z+2, r1	; 0x02
 638:	8c 01       	movw	r16, r24
 63a:	00 0f       	add	r16, r16
 63c:	11 1f       	adc	r17, r17
 63e:	80 0f       	add	r24, r16
 640:	91 1f       	adc	r25, r17
 642:	01 e0       	ldi	r16, 0x01	; 1
 644:	10 e0       	ldi	r17, 0x00	; 0
 646:	0c 0f       	add	r16, r28
 648:	1d 1f       	adc	r17, r29
 64a:	08 0f       	add	r16, r24
 64c:	19 1f       	adc	r17, r25
 64e:	c8 01       	movw	r24, r16
 650:	0e 94 5a 00 	call	0xb4	; 0xb4 <__data_load_end>
 654:	c8 01       	movw	r24, r16
 656:	0e 94 5a 00 	call	0xb4	; 0xb4 <__data_load_end>
 65a:	81 11       	cpse	r24, r1
 65c:	81 e0       	ldi	r24, 0x01	; 1
 65e:	f3 94       	inc	r15
 660:	51 e0       	ldi	r21, 0x01	; 1
 662:	5f 15       	cp	r21, r15
 664:	08 f0       	brcs	.+2      	; 0x668 <LED_enumdInit+0xf4>
 666:	93 cf       	rjmp	.-218    	; 0x58e <LED_enumdInit+0x1a>
 668:	26 96       	adiw	r28, 0x06	; 6
 66a:	0f b6       	in	r0, 0x3f	; 63
 66c:	f8 94       	cli
 66e:	de bf       	out	0x3e, r29	; 62
 670:	0f be       	out	0x3f, r0	; 63
 672:	cd bf       	out	0x3d, r28	; 61
 674:	df 91       	pop	r29
 676:	cf 91       	pop	r28
 678:	1f 91       	pop	r17
 67a:	0f 91       	pop	r16
 67c:	ff 90       	pop	r15
 67e:	08 95       	ret

Disassembly of section .text.LED_enuSetLedState:

00000704 <LED_enuSetLedState>:
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	00 d0       	rcall	.+0      	; 0x70a <LED_enuSetLedState+0x6>
 70a:	0f 92       	push	r0
 70c:	cd b7       	in	r28, 0x3d	; 61
 70e:	de b7       	in	r29, 0x3e	; 62
 710:	90 e0       	ldi	r25, 0x00	; 0
 712:	fc 01       	movw	r30, r24
 714:	ee 0f       	add	r30, r30
 716:	ff 1f       	adc	r31, r31
 718:	8e 0f       	add	r24, r30
 71a:	9f 1f       	adc	r25, r31
 71c:	fc 01       	movw	r30, r24
 71e:	e8 57       	subi	r30, 0x78	; 120
 720:	ff 4f       	sbci	r31, 0xFF	; 255
 722:	62 83       	std	Z+2, r22	; 0x02
 724:	80 81       	ld	r24, Z
 726:	89 83       	std	Y+1, r24	; 0x01
 728:	81 81       	ldd	r24, Z+1	; 0x01
 72a:	8a 83       	std	Y+2, r24	; 0x02
 72c:	61 30       	cpi	r22, 0x01	; 1
 72e:	41 f0       	breq	.+16     	; 0x740 <LED_enuSetLedState+0x3c>
 730:	28 f0       	brcs	.+10     	; 0x73c <LED_enuSetLedState+0x38>
 732:	62 30       	cpi	r22, 0x02	; 2
 734:	41 f0       	breq	.+16     	; 0x746 <LED_enuSetLedState+0x42>
 736:	63 30       	cpi	r22, 0x03	; 3
 738:	49 f0       	breq	.+18     	; 0x74c <LED_enuSetLedState+0x48>
 73a:	09 c0       	rjmp	.+18     	; 0x74e <LED_enuSetLedState+0x4a>
 73c:	1b 82       	std	Y+3, r1	; 0x03
 73e:	07 c0       	rjmp	.+14     	; 0x74e <LED_enuSetLedState+0x4a>
 740:	81 e0       	ldi	r24, 0x01	; 1
 742:	8b 83       	std	Y+3, r24	; 0x03
 744:	04 c0       	rjmp	.+8      	; 0x74e <LED_enuSetLedState+0x4a>
 746:	81 e0       	ldi	r24, 0x01	; 1
 748:	8b 83       	std	Y+3, r24	; 0x03
 74a:	01 c0       	rjmp	.+2      	; 0x74e <LED_enuSetLedState+0x4a>
 74c:	1b 82       	std	Y+3, r1	; 0x03
 74e:	ce 01       	movw	r24, r28
 750:	01 96       	adiw	r24, 0x01	; 1
 752:	0e 94 5a 00 	call	0xb4	; 0xb4 <__data_load_end>
 756:	ce 01       	movw	r24, r28
 758:	01 96       	adiw	r24, 0x01	; 1
 75a:	0e 94 5a 00 	call	0xb4	; 0xb4 <__data_load_end>
 75e:	81 11       	cpse	r24, r1
 760:	81 e0       	ldi	r24, 0x01	; 1
 762:	0f 90       	pop	r0
 764:	0f 90       	pop	r0
 766:	0f 90       	pop	r0
 768:	df 91       	pop	r29
 76a:	cf 91       	pop	r28
 76c:	08 95       	ret

Disassembly of section .text.DIO_enumSetCFG:

000000b4 <DIO_enumSetCFG>:
  b4:	fc 01       	movw	r30, r24
  b6:	20 81       	ld	r18, Z
  b8:	24 30       	cpi	r18, 0x04	; 4
  ba:	08 f0       	brcs	.+2      	; 0xbe <DIO_enumSetCFG+0xa>
  bc:	bf c1       	rjmp	.+894    	; 0x43c <__EEPROM_REGION_LENGTH__+0x3c>
  be:	31 81       	ldd	r19, Z+1	; 0x01
  c0:	38 30       	cpi	r19, 0x08	; 8
  c2:	08 f0       	brcs	.+2      	; 0xc6 <DIO_enumSetCFG+0x12>
  c4:	bd c1       	rjmp	.+890    	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
  c6:	42 81       	ldd	r20, Z+2	; 0x02
  c8:	44 30       	cpi	r20, 0x04	; 4
  ca:	08 f0       	brcs	.+2      	; 0xce <DIO_enumSetCFG+0x1a>
  cc:	bb c1       	rjmp	.+886    	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
  ce:	21 30       	cpi	r18, 0x01	; 1
  d0:	09 f4       	brne	.+2      	; 0xd4 <DIO_enumSetCFG+0x20>
  d2:	73 c0       	rjmp	.+230    	; 0x1ba <DIO_enumSetCFG+0x106>
  d4:	38 f0       	brcs	.+14     	; 0xe4 <DIO_enumSetCFG+0x30>
  d6:	22 30       	cpi	r18, 0x02	; 2
  d8:	09 f4       	brne	.+2      	; 0xdc <DIO_enumSetCFG+0x28>
  da:	da c0       	rjmp	.+436    	; 0x290 <DIO_enumSetCFG+0x1dc>
  dc:	23 30       	cpi	r18, 0x03	; 3
  de:	09 f4       	brne	.+2      	; 0xe2 <DIO_enumSetCFG+0x2e>
  e0:	42 c1       	rjmp	.+644    	; 0x366 <DIO_enumSetCFG+0x2b2>
  e2:	b2 c1       	rjmp	.+868    	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
  e4:	41 30       	cpi	r20, 0x01	; 1
  e6:	f9 f0       	breq	.+62     	; 0x126 <DIO_enumSetCFG+0x72>
  e8:	30 f0       	brcs	.+12     	; 0xf6 <DIO_enumSetCFG+0x42>
  ea:	42 30       	cpi	r20, 0x02	; 2
  ec:	a9 f1       	breq	.+106    	; 0x158 <DIO_enumSetCFG+0xa4>
  ee:	43 30       	cpi	r20, 0x03	; 3
  f0:	09 f4       	brne	.+2      	; 0xf4 <DIO_enumSetCFG+0x40>
  f2:	4a c0       	rjmp	.+148    	; 0x188 <DIO_enumSetCFG+0xd4>
  f4:	ab c1       	rjmp	.+854    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
  f6:	6a b3       	in	r22, 0x1a	; 26
  f8:	41 e0       	ldi	r20, 0x01	; 1
  fa:	50 e0       	ldi	r21, 0x00	; 0
  fc:	fa 01       	movw	r30, r20
  fe:	02 c0       	rjmp	.+4      	; 0x104 <DIO_enumSetCFG+0x50>
 100:	ee 0f       	add	r30, r30
 102:	ff 1f       	adc	r31, r31
 104:	3a 95       	dec	r19
 106:	e2 f7       	brpl	.-8      	; 0x100 <DIO_enumSetCFG+0x4c>
 108:	9f 01       	movw	r18, r30
 10a:	26 2b       	or	r18, r22
 10c:	2a bb       	out	0x1a, r18	; 26
 10e:	2b b3       	in	r18, 0x1b	; 27
 110:	fc 01       	movw	r30, r24
 112:	01 80       	ldd	r0, Z+1	; 0x01
 114:	02 c0       	rjmp	.+4      	; 0x11a <DIO_enumSetCFG+0x66>
 116:	44 0f       	add	r20, r20
 118:	55 1f       	adc	r21, r21
 11a:	0a 94       	dec	r0
 11c:	e2 f7       	brpl	.-8      	; 0x116 <DIO_enumSetCFG+0x62>
 11e:	42 2b       	or	r20, r18
 120:	4b bb       	out	0x1b, r20	; 27
 122:	80 e0       	ldi	r24, 0x00	; 0
 124:	08 95       	ret
 126:	6a b3       	in	r22, 0x1a	; 26
 128:	41 e0       	ldi	r20, 0x01	; 1
 12a:	50 e0       	ldi	r21, 0x00	; 0
 12c:	fa 01       	movw	r30, r20
 12e:	02 c0       	rjmp	.+4      	; 0x134 <DIO_enumSetCFG+0x80>
 130:	ee 0f       	add	r30, r30
 132:	ff 1f       	adc	r31, r31
 134:	3a 95       	dec	r19
 136:	e2 f7       	brpl	.-8      	; 0x130 <DIO_enumSetCFG+0x7c>
 138:	9f 01       	movw	r18, r30
 13a:	26 2b       	or	r18, r22
 13c:	2a bb       	out	0x1a, r18	; 26
 13e:	2b b3       	in	r18, 0x1b	; 27
 140:	fc 01       	movw	r30, r24
 142:	01 80       	ldd	r0, Z+1	; 0x01
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_enumSetCFG+0x96>
 146:	44 0f       	add	r20, r20
 148:	55 1f       	adc	r21, r21
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_enumSetCFG+0x92>
 14e:	40 95       	com	r20
 150:	42 23       	and	r20, r18
 152:	4b bb       	out	0x1b, r20	; 27
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	08 95       	ret
 158:	2a b3       	in	r18, 0x1a	; 26
 15a:	41 e0       	ldi	r20, 0x01	; 1
 15c:	50 e0       	ldi	r21, 0x00	; 0
 15e:	ba 01       	movw	r22, r20
 160:	02 c0       	rjmp	.+4      	; 0x166 <DIO_enumSetCFG+0xb2>
 162:	66 0f       	add	r22, r22
 164:	77 1f       	adc	r23, r23
 166:	3a 95       	dec	r19
 168:	e2 f7       	brpl	.-8      	; 0x162 <DIO_enumSetCFG+0xae>
 16a:	60 95       	com	r22
 16c:	26 23       	and	r18, r22
 16e:	2a bb       	out	0x1a, r18	; 26
 170:	2b b3       	in	r18, 0x1b	; 27
 172:	fc 01       	movw	r30, r24
 174:	01 80       	ldd	r0, Z+1	; 0x01
 176:	02 c0       	rjmp	.+4      	; 0x17c <DIO_enumSetCFG+0xc8>
 178:	44 0f       	add	r20, r20
 17a:	55 1f       	adc	r21, r21
 17c:	0a 94       	dec	r0
 17e:	e2 f7       	brpl	.-8      	; 0x178 <DIO_enumSetCFG+0xc4>
 180:	42 2b       	or	r20, r18
 182:	4b bb       	out	0x1b, r20	; 27
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	08 95       	ret
 188:	2a b3       	in	r18, 0x1a	; 26
 18a:	41 e0       	ldi	r20, 0x01	; 1
 18c:	50 e0       	ldi	r21, 0x00	; 0
 18e:	ba 01       	movw	r22, r20
 190:	02 c0       	rjmp	.+4      	; 0x196 <DIO_enumSetCFG+0xe2>
 192:	66 0f       	add	r22, r22
 194:	77 1f       	adc	r23, r23
 196:	3a 95       	dec	r19
 198:	e2 f7       	brpl	.-8      	; 0x192 <DIO_enumSetCFG+0xde>
 19a:	60 95       	com	r22
 19c:	26 23       	and	r18, r22
 19e:	2a bb       	out	0x1a, r18	; 26
 1a0:	2b b3       	in	r18, 0x1b	; 27
 1a2:	fc 01       	movw	r30, r24
 1a4:	01 80       	ldd	r0, Z+1	; 0x01
 1a6:	02 c0       	rjmp	.+4      	; 0x1ac <DIO_enumSetCFG+0xf8>
 1a8:	44 0f       	add	r20, r20
 1aa:	55 1f       	adc	r21, r21
 1ac:	0a 94       	dec	r0
 1ae:	e2 f7       	brpl	.-8      	; 0x1a8 <DIO_enumSetCFG+0xf4>
 1b0:	40 95       	com	r20
 1b2:	42 23       	and	r20, r18
 1b4:	4b bb       	out	0x1b, r20	; 27
 1b6:	80 e0       	ldi	r24, 0x00	; 0
 1b8:	08 95       	ret
 1ba:	41 30       	cpi	r20, 0x01	; 1
 1bc:	f9 f0       	breq	.+62     	; 0x1fc <DIO_enumSetCFG+0x148>
 1be:	30 f0       	brcs	.+12     	; 0x1cc <DIO_enumSetCFG+0x118>
 1c0:	42 30       	cpi	r20, 0x02	; 2
 1c2:	a9 f1       	breq	.+106    	; 0x22e <DIO_enumSetCFG+0x17a>
 1c4:	43 30       	cpi	r20, 0x03	; 3
 1c6:	09 f4       	brne	.+2      	; 0x1ca <DIO_enumSetCFG+0x116>
 1c8:	4a c0       	rjmp	.+148    	; 0x25e <DIO_enumSetCFG+0x1aa>
 1ca:	42 c1       	rjmp	.+644    	; 0x450 <__EEPROM_REGION_LENGTH__+0x50>
 1cc:	67 b3       	in	r22, 0x17	; 23
 1ce:	41 e0       	ldi	r20, 0x01	; 1
 1d0:	50 e0       	ldi	r21, 0x00	; 0
 1d2:	fa 01       	movw	r30, r20
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_enumSetCFG+0x126>
 1d6:	ee 0f       	add	r30, r30
 1d8:	ff 1f       	adc	r31, r31
 1da:	3a 95       	dec	r19
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_enumSetCFG+0x122>
 1de:	9f 01       	movw	r18, r30
 1e0:	26 2b       	or	r18, r22
 1e2:	27 bb       	out	0x17, r18	; 23
 1e4:	28 b3       	in	r18, 0x18	; 24
 1e6:	fc 01       	movw	r30, r24
 1e8:	01 80       	ldd	r0, Z+1	; 0x01
 1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <DIO_enumSetCFG+0x13c>
 1ec:	44 0f       	add	r20, r20
 1ee:	55 1f       	adc	r21, r21
 1f0:	0a 94       	dec	r0
 1f2:	e2 f7       	brpl	.-8      	; 0x1ec <DIO_enumSetCFG+0x138>
 1f4:	42 2b       	or	r20, r18
 1f6:	48 bb       	out	0x18, r20	; 24
 1f8:	80 e0       	ldi	r24, 0x00	; 0
 1fa:	08 95       	ret
 1fc:	67 b3       	in	r22, 0x17	; 23
 1fe:	41 e0       	ldi	r20, 0x01	; 1
 200:	50 e0       	ldi	r21, 0x00	; 0
 202:	fa 01       	movw	r30, r20
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_enumSetCFG+0x156>
 206:	ee 0f       	add	r30, r30
 208:	ff 1f       	adc	r31, r31
 20a:	3a 95       	dec	r19
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_enumSetCFG+0x152>
 20e:	9f 01       	movw	r18, r30
 210:	26 2b       	or	r18, r22
 212:	27 bb       	out	0x17, r18	; 23
 214:	28 b3       	in	r18, 0x18	; 24
 216:	fc 01       	movw	r30, r24
 218:	01 80       	ldd	r0, Z+1	; 0x01
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_enumSetCFG+0x16c>
 21c:	44 0f       	add	r20, r20
 21e:	55 1f       	adc	r21, r21
 220:	0a 94       	dec	r0
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_enumSetCFG+0x168>
 224:	40 95       	com	r20
 226:	42 23       	and	r20, r18
 228:	48 bb       	out	0x18, r20	; 24
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	08 95       	ret
 22e:	27 b3       	in	r18, 0x17	; 23
 230:	41 e0       	ldi	r20, 0x01	; 1
 232:	50 e0       	ldi	r21, 0x00	; 0
 234:	ba 01       	movw	r22, r20
 236:	02 c0       	rjmp	.+4      	; 0x23c <DIO_enumSetCFG+0x188>
 238:	66 0f       	add	r22, r22
 23a:	77 1f       	adc	r23, r23
 23c:	3a 95       	dec	r19
 23e:	e2 f7       	brpl	.-8      	; 0x238 <DIO_enumSetCFG+0x184>
 240:	60 95       	com	r22
 242:	26 23       	and	r18, r22
 244:	27 bb       	out	0x17, r18	; 23
 246:	28 b3       	in	r18, 0x18	; 24
 248:	fc 01       	movw	r30, r24
 24a:	01 80       	ldd	r0, Z+1	; 0x01
 24c:	02 c0       	rjmp	.+4      	; 0x252 <DIO_enumSetCFG+0x19e>
 24e:	44 0f       	add	r20, r20
 250:	55 1f       	adc	r21, r21
 252:	0a 94       	dec	r0
 254:	e2 f7       	brpl	.-8      	; 0x24e <DIO_enumSetCFG+0x19a>
 256:	42 2b       	or	r20, r18
 258:	48 bb       	out	0x18, r20	; 24
 25a:	80 e0       	ldi	r24, 0x00	; 0
 25c:	08 95       	ret
 25e:	27 b3       	in	r18, 0x17	; 23
 260:	41 e0       	ldi	r20, 0x01	; 1
 262:	50 e0       	ldi	r21, 0x00	; 0
 264:	ba 01       	movw	r22, r20
 266:	02 c0       	rjmp	.+4      	; 0x26c <DIO_enumSetCFG+0x1b8>
 268:	66 0f       	add	r22, r22
 26a:	77 1f       	adc	r23, r23
 26c:	3a 95       	dec	r19
 26e:	e2 f7       	brpl	.-8      	; 0x268 <DIO_enumSetCFG+0x1b4>
 270:	60 95       	com	r22
 272:	26 23       	and	r18, r22
 274:	27 bb       	out	0x17, r18	; 23
 276:	28 b3       	in	r18, 0x18	; 24
 278:	fc 01       	movw	r30, r24
 27a:	01 80       	ldd	r0, Z+1	; 0x01
 27c:	02 c0       	rjmp	.+4      	; 0x282 <DIO_enumSetCFG+0x1ce>
 27e:	44 0f       	add	r20, r20
 280:	55 1f       	adc	r21, r21
 282:	0a 94       	dec	r0
 284:	e2 f7       	brpl	.-8      	; 0x27e <DIO_enumSetCFG+0x1ca>
 286:	40 95       	com	r20
 288:	42 23       	and	r20, r18
 28a:	48 bb       	out	0x18, r20	; 24
 28c:	80 e0       	ldi	r24, 0x00	; 0
 28e:	08 95       	ret
 290:	41 30       	cpi	r20, 0x01	; 1
 292:	f9 f0       	breq	.+62     	; 0x2d2 <DIO_enumSetCFG+0x21e>
 294:	30 f0       	brcs	.+12     	; 0x2a2 <DIO_enumSetCFG+0x1ee>
 296:	42 30       	cpi	r20, 0x02	; 2
 298:	a9 f1       	breq	.+106    	; 0x304 <DIO_enumSetCFG+0x250>
 29a:	43 30       	cpi	r20, 0x03	; 3
 29c:	09 f4       	brne	.+2      	; 0x2a0 <DIO_enumSetCFG+0x1ec>
 29e:	4a c0       	rjmp	.+148    	; 0x334 <DIO_enumSetCFG+0x280>
 2a0:	d9 c0       	rjmp	.+434    	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 2a2:	64 b3       	in	r22, 0x14	; 20
 2a4:	41 e0       	ldi	r20, 0x01	; 1
 2a6:	50 e0       	ldi	r21, 0x00	; 0
 2a8:	fa 01       	movw	r30, r20
 2aa:	02 c0       	rjmp	.+4      	; 0x2b0 <DIO_enumSetCFG+0x1fc>
 2ac:	ee 0f       	add	r30, r30
 2ae:	ff 1f       	adc	r31, r31
 2b0:	3a 95       	dec	r19
 2b2:	e2 f7       	brpl	.-8      	; 0x2ac <DIO_enumSetCFG+0x1f8>
 2b4:	9f 01       	movw	r18, r30
 2b6:	26 2b       	or	r18, r22
 2b8:	24 bb       	out	0x14, r18	; 20
 2ba:	25 b3       	in	r18, 0x15	; 21
 2bc:	fc 01       	movw	r30, r24
 2be:	01 80       	ldd	r0, Z+1	; 0x01
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <DIO_enumSetCFG+0x212>
 2c2:	44 0f       	add	r20, r20
 2c4:	55 1f       	adc	r21, r21
 2c6:	0a 94       	dec	r0
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <DIO_enumSetCFG+0x20e>
 2ca:	42 2b       	or	r20, r18
 2cc:	45 bb       	out	0x15, r20	; 21
 2ce:	80 e0       	ldi	r24, 0x00	; 0
 2d0:	08 95       	ret
 2d2:	64 b3       	in	r22, 0x14	; 20
 2d4:	41 e0       	ldi	r20, 0x01	; 1
 2d6:	50 e0       	ldi	r21, 0x00	; 0
 2d8:	fa 01       	movw	r30, r20
 2da:	02 c0       	rjmp	.+4      	; 0x2e0 <DIO_enumSetCFG+0x22c>
 2dc:	ee 0f       	add	r30, r30
 2de:	ff 1f       	adc	r31, r31
 2e0:	3a 95       	dec	r19
 2e2:	e2 f7       	brpl	.-8      	; 0x2dc <DIO_enumSetCFG+0x228>
 2e4:	9f 01       	movw	r18, r30
 2e6:	26 2b       	or	r18, r22
 2e8:	24 bb       	out	0x14, r18	; 20
 2ea:	25 b3       	in	r18, 0x15	; 21
 2ec:	fc 01       	movw	r30, r24
 2ee:	01 80       	ldd	r0, Z+1	; 0x01
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_enumSetCFG+0x242>
 2f2:	44 0f       	add	r20, r20
 2f4:	55 1f       	adc	r21, r21
 2f6:	0a 94       	dec	r0
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_enumSetCFG+0x23e>
 2fa:	40 95       	com	r20
 2fc:	42 23       	and	r20, r18
 2fe:	45 bb       	out	0x15, r20	; 21
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	08 95       	ret
 304:	24 b3       	in	r18, 0x14	; 20
 306:	41 e0       	ldi	r20, 0x01	; 1
 308:	50 e0       	ldi	r21, 0x00	; 0
 30a:	ba 01       	movw	r22, r20
 30c:	02 c0       	rjmp	.+4      	; 0x312 <DIO_enumSetCFG+0x25e>
 30e:	66 0f       	add	r22, r22
 310:	77 1f       	adc	r23, r23
 312:	3a 95       	dec	r19
 314:	e2 f7       	brpl	.-8      	; 0x30e <DIO_enumSetCFG+0x25a>
 316:	60 95       	com	r22
 318:	26 23       	and	r18, r22
 31a:	24 bb       	out	0x14, r18	; 20
 31c:	25 b3       	in	r18, 0x15	; 21
 31e:	fc 01       	movw	r30, r24
 320:	01 80       	ldd	r0, Z+1	; 0x01
 322:	02 c0       	rjmp	.+4      	; 0x328 <DIO_enumSetCFG+0x274>
 324:	44 0f       	add	r20, r20
 326:	55 1f       	adc	r21, r21
 328:	0a 94       	dec	r0
 32a:	e2 f7       	brpl	.-8      	; 0x324 <DIO_enumSetCFG+0x270>
 32c:	42 2b       	or	r20, r18
 32e:	45 bb       	out	0x15, r20	; 21
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	08 95       	ret
 334:	24 b3       	in	r18, 0x14	; 20
 336:	41 e0       	ldi	r20, 0x01	; 1
 338:	50 e0       	ldi	r21, 0x00	; 0
 33a:	ba 01       	movw	r22, r20
 33c:	02 c0       	rjmp	.+4      	; 0x342 <DIO_enumSetCFG+0x28e>
 33e:	66 0f       	add	r22, r22
 340:	77 1f       	adc	r23, r23
 342:	3a 95       	dec	r19
 344:	e2 f7       	brpl	.-8      	; 0x33e <DIO_enumSetCFG+0x28a>
 346:	60 95       	com	r22
 348:	26 23       	and	r18, r22
 34a:	24 bb       	out	0x14, r18	; 20
 34c:	25 b3       	in	r18, 0x15	; 21
 34e:	fc 01       	movw	r30, r24
 350:	01 80       	ldd	r0, Z+1	; 0x01
 352:	02 c0       	rjmp	.+4      	; 0x358 <DIO_enumSetCFG+0x2a4>
 354:	44 0f       	add	r20, r20
 356:	55 1f       	adc	r21, r21
 358:	0a 94       	dec	r0
 35a:	e2 f7       	brpl	.-8      	; 0x354 <DIO_enumSetCFG+0x2a0>
 35c:	40 95       	com	r20
 35e:	42 23       	and	r20, r18
 360:	45 bb       	out	0x15, r20	; 21
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	08 95       	ret
 366:	41 30       	cpi	r20, 0x01	; 1
 368:	f9 f0       	breq	.+62     	; 0x3a8 <DIO_enumSetCFG+0x2f4>
 36a:	30 f0       	brcs	.+12     	; 0x378 <DIO_enumSetCFG+0x2c4>
 36c:	42 30       	cpi	r20, 0x02	; 2
 36e:	a9 f1       	breq	.+106    	; 0x3da <DIO_enumSetCFG+0x326>
 370:	43 30       	cpi	r20, 0x03	; 3
 372:	09 f4       	brne	.+2      	; 0x376 <DIO_enumSetCFG+0x2c2>
 374:	4a c0       	rjmp	.+148    	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 376:	70 c0       	rjmp	.+224    	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 378:	61 b3       	in	r22, 0x11	; 17
 37a:	41 e0       	ldi	r20, 0x01	; 1
 37c:	50 e0       	ldi	r21, 0x00	; 0
 37e:	fa 01       	movw	r30, r20
 380:	02 c0       	rjmp	.+4      	; 0x386 <DIO_enumSetCFG+0x2d2>
 382:	ee 0f       	add	r30, r30
 384:	ff 1f       	adc	r31, r31
 386:	3a 95       	dec	r19
 388:	e2 f7       	brpl	.-8      	; 0x382 <DIO_enumSetCFG+0x2ce>
 38a:	9f 01       	movw	r18, r30
 38c:	26 2b       	or	r18, r22
 38e:	21 bb       	out	0x11, r18	; 17
 390:	22 b3       	in	r18, 0x12	; 18
 392:	fc 01       	movw	r30, r24
 394:	01 80       	ldd	r0, Z+1	; 0x01
 396:	02 c0       	rjmp	.+4      	; 0x39c <DIO_enumSetCFG+0x2e8>
 398:	44 0f       	add	r20, r20
 39a:	55 1f       	adc	r21, r21
 39c:	0a 94       	dec	r0
 39e:	e2 f7       	brpl	.-8      	; 0x398 <DIO_enumSetCFG+0x2e4>
 3a0:	42 2b       	or	r20, r18
 3a2:	42 bb       	out	0x12, r20	; 18
 3a4:	80 e0       	ldi	r24, 0x00	; 0
 3a6:	08 95       	ret
 3a8:	61 b3       	in	r22, 0x11	; 17
 3aa:	41 e0       	ldi	r20, 0x01	; 1
 3ac:	50 e0       	ldi	r21, 0x00	; 0
 3ae:	fa 01       	movw	r30, r20
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <DIO_enumSetCFG+0x302>
 3b2:	ee 0f       	add	r30, r30
 3b4:	ff 1f       	adc	r31, r31
 3b6:	3a 95       	dec	r19
 3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <DIO_enumSetCFG+0x2fe>
 3ba:	9f 01       	movw	r18, r30
 3bc:	26 2b       	or	r18, r22
 3be:	21 bb       	out	0x11, r18	; 17
 3c0:	22 b3       	in	r18, 0x12	; 18
 3c2:	fc 01       	movw	r30, r24
 3c4:	01 80       	ldd	r0, Z+1	; 0x01
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <DIO_enumSetCFG+0x318>
 3c8:	44 0f       	add	r20, r20
 3ca:	55 1f       	adc	r21, r21
 3cc:	0a 94       	dec	r0
 3ce:	e2 f7       	brpl	.-8      	; 0x3c8 <DIO_enumSetCFG+0x314>
 3d0:	40 95       	com	r20
 3d2:	42 23       	and	r20, r18
 3d4:	42 bb       	out	0x12, r20	; 18
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	08 95       	ret
 3da:	21 b3       	in	r18, 0x11	; 17
 3dc:	41 e0       	ldi	r20, 0x01	; 1
 3de:	50 e0       	ldi	r21, 0x00	; 0
 3e0:	ba 01       	movw	r22, r20
 3e2:	02 c0       	rjmp	.+4      	; 0x3e8 <DIO_enumSetCFG+0x334>
 3e4:	66 0f       	add	r22, r22
 3e6:	77 1f       	adc	r23, r23
 3e8:	3a 95       	dec	r19
 3ea:	e2 f7       	brpl	.-8      	; 0x3e4 <DIO_enumSetCFG+0x330>
 3ec:	60 95       	com	r22
 3ee:	26 23       	and	r18, r22
 3f0:	21 bb       	out	0x11, r18	; 17
 3f2:	22 b3       	in	r18, 0x12	; 18
 3f4:	fc 01       	movw	r30, r24
 3f6:	01 80       	ldd	r0, Z+1	; 0x01
 3f8:	02 c0       	rjmp	.+4      	; 0x3fe <DIO_enumSetCFG+0x34a>
 3fa:	44 0f       	add	r20, r20
 3fc:	55 1f       	adc	r21, r21
 3fe:	0a 94       	dec	r0
 400:	e2 f7       	brpl	.-8      	; 0x3fa <DIO_enumSetCFG+0x346>
 402:	42 2b       	or	r20, r18
 404:	42 bb       	out	0x12, r20	; 18
 406:	80 e0       	ldi	r24, 0x00	; 0
 408:	08 95       	ret
 40a:	21 b3       	in	r18, 0x11	; 17
 40c:	41 e0       	ldi	r20, 0x01	; 1
 40e:	50 e0       	ldi	r21, 0x00	; 0
 410:	ba 01       	movw	r22, r20
 412:	02 c0       	rjmp	.+4      	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
 414:	66 0f       	add	r22, r22
 416:	77 1f       	adc	r23, r23
 418:	3a 95       	dec	r19
 41a:	e2 f7       	brpl	.-8      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 41c:	60 95       	com	r22
 41e:	26 23       	and	r18, r22
 420:	21 bb       	out	0x11, r18	; 17
 422:	22 b3       	in	r18, 0x12	; 18
 424:	fc 01       	movw	r30, r24
 426:	01 80       	ldd	r0, Z+1	; 0x01
 428:	02 c0       	rjmp	.+4      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 42a:	44 0f       	add	r20, r20
 42c:	55 1f       	adc	r21, r21
 42e:	0a 94       	dec	r0
 430:	e2 f7       	brpl	.-8      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 432:	40 95       	com	r20
 434:	42 23       	and	r20, r18
 436:	42 bb       	out	0x12, r20	; 18
 438:	80 e0       	ldi	r24, 0x00	; 0
 43a:	08 95       	ret
 43c:	82 e0       	ldi	r24, 0x02	; 2
 43e:	08 95       	ret
 440:	83 e0       	ldi	r24, 0x03	; 3
 442:	08 95       	ret
 444:	84 e0       	ldi	r24, 0x04	; 4
 446:	08 95       	ret
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	08 95       	ret
 44c:	80 e0       	ldi	r24, 0x00	; 0
 44e:	08 95       	ret
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	08 95       	ret
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	08 95       	ret
 458:	80 e0       	ldi	r24, 0x00	; 0
 45a:	08 95       	ret

Disassembly of section .text.DIO_enumGetPinVal:

00000680 <DIO_enumGetPinVal>:
 680:	84 30       	cpi	r24, 0x04	; 4
 682:	d0 f5       	brcc	.+116    	; 0x6f8 <DIO_enumGetPinVal+0x78>
 684:	68 30       	cpi	r22, 0x08	; 8
 686:	d0 f5       	brcc	.+116    	; 0x6fc <DIO_enumGetPinVal+0x7c>
 688:	81 30       	cpi	r24, 0x01	; 1
 68a:	91 f0       	breq	.+36     	; 0x6b0 <DIO_enumGetPinVal+0x30>
 68c:	28 f0       	brcs	.+10     	; 0x698 <DIO_enumGetPinVal+0x18>
 68e:	82 30       	cpi	r24, 0x02	; 2
 690:	d9 f0       	breq	.+54     	; 0x6c8 <DIO_enumGetPinVal+0x48>
 692:	83 30       	cpi	r24, 0x03	; 3
 694:	29 f1       	breq	.+74     	; 0x6e0 <DIO_enumGetPinVal+0x60>
 696:	34 c0       	rjmp	.+104    	; 0x700 <DIO_enumGetPinVal+0x80>
 698:	89 b3       	in	r24, 0x19	; 25
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	02 c0       	rjmp	.+4      	; 0x6a2 <DIO_enumGetPinVal+0x22>
 69e:	95 95       	asr	r25
 6a0:	87 95       	ror	r24
 6a2:	6a 95       	dec	r22
 6a4:	e2 f7       	brpl	.-8      	; 0x69e <DIO_enumGetPinVal+0x1e>
 6a6:	81 70       	andi	r24, 0x01	; 1
 6a8:	fa 01       	movw	r30, r20
 6aa:	80 83       	st	Z, r24
 6ac:	80 e0       	ldi	r24, 0x00	; 0
 6ae:	08 95       	ret
 6b0:	86 b3       	in	r24, 0x16	; 22
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <DIO_enumGetPinVal+0x3a>
 6b6:	95 95       	asr	r25
 6b8:	87 95       	ror	r24
 6ba:	6a 95       	dec	r22
 6bc:	e2 f7       	brpl	.-8      	; 0x6b6 <DIO_enumGetPinVal+0x36>
 6be:	81 70       	andi	r24, 0x01	; 1
 6c0:	fa 01       	movw	r30, r20
 6c2:	80 83       	st	Z, r24
 6c4:	80 e0       	ldi	r24, 0x00	; 0
 6c6:	08 95       	ret
 6c8:	83 b3       	in	r24, 0x13	; 19
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	02 c0       	rjmp	.+4      	; 0x6d2 <DIO_enumGetPinVal+0x52>
 6ce:	95 95       	asr	r25
 6d0:	87 95       	ror	r24
 6d2:	6a 95       	dec	r22
 6d4:	e2 f7       	brpl	.-8      	; 0x6ce <DIO_enumGetPinVal+0x4e>
 6d6:	81 70       	andi	r24, 0x01	; 1
 6d8:	fa 01       	movw	r30, r20
 6da:	80 83       	st	Z, r24
 6dc:	80 e0       	ldi	r24, 0x00	; 0
 6de:	08 95       	ret
 6e0:	80 b3       	in	r24, 0x10	; 16
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	02 c0       	rjmp	.+4      	; 0x6ea <DIO_enumGetPinVal+0x6a>
 6e6:	95 95       	asr	r25
 6e8:	87 95       	ror	r24
 6ea:	6a 95       	dec	r22
 6ec:	e2 f7       	brpl	.-8      	; 0x6e6 <DIO_enumGetPinVal+0x66>
 6ee:	81 70       	andi	r24, 0x01	; 1
 6f0:	fa 01       	movw	r30, r20
 6f2:	80 83       	st	Z, r24
 6f4:	80 e0       	ldi	r24, 0x00	; 0
 6f6:	08 95       	ret
 6f8:	82 e0       	ldi	r24, 0x02	; 2
 6fa:	08 95       	ret
 6fc:	83 e0       	ldi	r24, 0x03	; 3
 6fe:	08 95       	ret
 700:	80 e0       	ldi	r24, 0x00	; 0
 702:	08 95       	ret

Disassembly of section .text.__vector_1:

0000076e <__vector_1>:
 76e:	1f 92       	push	r1
 770:	0f 92       	push	r0
 772:	0f b6       	in	r0, 0x3f	; 63
 774:	0f 92       	push	r0
 776:	11 24       	eor	r1, r1
 778:	2f 93       	push	r18
 77a:	3f 93       	push	r19
 77c:	4f 93       	push	r20
 77e:	5f 93       	push	r21
 780:	6f 93       	push	r22
 782:	7f 93       	push	r23
 784:	8f 93       	push	r24
 786:	9f 93       	push	r25
 788:	af 93       	push	r26
 78a:	bf 93       	push	r27
 78c:	ef 93       	push	r30
 78e:	ff 93       	push	r31
 790:	e0 91 92 00 	lds	r30, 0x0092	; 0x800092 <ExtInt0_AddCallBack>
 794:	f0 91 93 00 	lds	r31, 0x0093	; 0x800093 <ExtInt0_AddCallBack+0x1>
 798:	09 95       	icall
 79a:	8a b7       	in	r24, 0x3a	; 58
 79c:	80 64       	ori	r24, 0x40	; 64
 79e:	8a bf       	out	0x3a, r24	; 58
 7a0:	ff 91       	pop	r31
 7a2:	ef 91       	pop	r30
 7a4:	bf 91       	pop	r27
 7a6:	af 91       	pop	r26
 7a8:	9f 91       	pop	r25
 7aa:	8f 91       	pop	r24
 7ac:	7f 91       	pop	r23
 7ae:	6f 91       	pop	r22
 7b0:	5f 91       	pop	r21
 7b2:	4f 91       	pop	r20
 7b4:	3f 91       	pop	r19
 7b6:	2f 91       	pop	r18
 7b8:	0f 90       	pop	r0
 7ba:	0f be       	out	0x3f, r0	; 63
 7bc:	0f 90       	pop	r0
 7be:	1f 90       	pop	r1
 7c0:	18 95       	reti

Disassembly of section .text.__vector_2:

000007c2 <__vector_2>:
 7c2:	1f 92       	push	r1
 7c4:	0f 92       	push	r0
 7c6:	0f b6       	in	r0, 0x3f	; 63
 7c8:	0f 92       	push	r0
 7ca:	11 24       	eor	r1, r1
 7cc:	2f 93       	push	r18
 7ce:	3f 93       	push	r19
 7d0:	4f 93       	push	r20
 7d2:	5f 93       	push	r21
 7d4:	6f 93       	push	r22
 7d6:	7f 93       	push	r23
 7d8:	8f 93       	push	r24
 7da:	9f 93       	push	r25
 7dc:	af 93       	push	r26
 7de:	bf 93       	push	r27
 7e0:	ef 93       	push	r30
 7e2:	ff 93       	push	r31
 7e4:	e0 91 90 00 	lds	r30, 0x0090	; 0x800090 <ExtInt1_AddCallBack>
 7e8:	f0 91 91 00 	lds	r31, 0x0091	; 0x800091 <ExtInt1_AddCallBack+0x1>
 7ec:	09 95       	icall
 7ee:	8a b7       	in	r24, 0x3a	; 58
 7f0:	80 68       	ori	r24, 0x80	; 128
 7f2:	8a bf       	out	0x3a, r24	; 58
 7f4:	ff 91       	pop	r31
 7f6:	ef 91       	pop	r30
 7f8:	bf 91       	pop	r27
 7fa:	af 91       	pop	r26
 7fc:	9f 91       	pop	r25
 7fe:	8f 91       	pop	r24
 800:	7f 91       	pop	r23
 802:	6f 91       	pop	r22
 804:	5f 91       	pop	r21
 806:	4f 91       	pop	r20
 808:	3f 91       	pop	r19
 80a:	2f 91       	pop	r18
 80c:	0f 90       	pop	r0
 80e:	0f be       	out	0x3f, r0	; 63
 810:	0f 90       	pop	r0
 812:	1f 90       	pop	r1
 814:	18 95       	reti

Disassembly of section .text.__vector_3:

00000816 <__vector_3>:
 816:	1f 92       	push	r1
 818:	0f 92       	push	r0
 81a:	0f b6       	in	r0, 0x3f	; 63
 81c:	0f 92       	push	r0
 81e:	11 24       	eor	r1, r1
 820:	2f 93       	push	r18
 822:	3f 93       	push	r19
 824:	4f 93       	push	r20
 826:	5f 93       	push	r21
 828:	6f 93       	push	r22
 82a:	7f 93       	push	r23
 82c:	8f 93       	push	r24
 82e:	9f 93       	push	r25
 830:	af 93       	push	r26
 832:	bf 93       	push	r27
 834:	ef 93       	push	r30
 836:	ff 93       	push	r31
 838:	e0 91 8e 00 	lds	r30, 0x008E	; 0x80008e <ExtInt2_AddCallBack>
 83c:	f0 91 8f 00 	lds	r31, 0x008F	; 0x80008f <ExtInt2_AddCallBack+0x1>
 840:	09 95       	icall
 842:	8a b7       	in	r24, 0x3a	; 58
 844:	80 62       	ori	r24, 0x20	; 32
 846:	8a bf       	out	0x3a, r24	; 58
 848:	ff 91       	pop	r31
 84a:	ef 91       	pop	r30
 84c:	bf 91       	pop	r27
 84e:	af 91       	pop	r26
 850:	9f 91       	pop	r25
 852:	8f 91       	pop	r24
 854:	7f 91       	pop	r23
 856:	6f 91       	pop	r22
 858:	5f 91       	pop	r21
 85a:	4f 91       	pop	r20
 85c:	3f 91       	pop	r19
 85e:	2f 91       	pop	r18
 860:	0f 90       	pop	r0
 862:	0f be       	out	0x3f, r0	; 63
 864:	0f 90       	pop	r0
 866:	1f 90       	pop	r1
 868:	18 95       	reti

Disassembly of section .text.__dummy_fini:

000008ee <_fini>:
 8ee:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

000008f0 <__funcs_on_exit>:
 8f0:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

000008f2 <__simulator_exit>:
 8f2:	08 95       	ret

Disassembly of section .text.exit:

000008d0 <exit>:
 8d0:	ec 01       	movw	r28, r24
 8d2:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__funcs_on_exit>
 8d6:	0e 94 77 04 	call	0x8ee	; 0x8ee <_fini>
 8da:	ce 01       	movw	r24, r28
 8dc:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__simulator_exit>
 8e0:	ce 01       	movw	r24, r28
 8e2:	0e 94 75 04 	call	0x8ea	; 0x8ea <_Exit>

Disassembly of section .text._Exit:

000008ea <_Exit>:
 8ea:	0e 94 58 00 	call	0xb0	; 0xb0 <_exit>
