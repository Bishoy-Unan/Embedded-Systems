
LED_SWITCH.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000f0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000b18  00000bac  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000bac  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000001c  00000000  00000000  00000bdb  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000d0  00000000  00000000  00000bf7  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000292e  00000000  00000000  00000cc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a26  00000000  00000000  000035f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e08  00000000  00000000  0000401b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000120  00000000  00000000  00004e24  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000021a  00000000  00000000  00004f44  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000db8  00000000  00000000  0000515e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00005f16  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000afe  00000afe  00000b92  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00005f78  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    00000080  00000a5c  00000a5c  00000af0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.LED_enumdInit 00000110  000007f6  000007f6  0000088a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .data.LEDS    00000006  00800060  00000b0c  00000ba0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 17 .text.SWITCH_enumdInit 000000d2  00000906  00000906  0000099a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .data.SWITCHS 00000006  00800066  00000b12  00000ba6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 19 .text.DIO_enumSetCFG 00000706  000000f0  000000f0  00000184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.DIO_enumGetPinVal 00000084  000009d8  000009d8  00000a6c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.libgcc  0000000c  00000af2  00000af2  00000b86  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__dummy_fini 00000002  00000b06  00000b06  00000b9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.__dummy_funcs_on_exit 00000002  00000b08  00000b08  00000b9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__dummy_simulator_exit 00000002  00000b0a  00000b0a  00000b9e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.exit    00000016  00000adc  00000adc  00000b70  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text._Exit   00000004  00000b02  00000b02  00000b96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__ctors_end>
   4:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
   8:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
   c:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  10:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  14:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  18:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  1c:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  20:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  24:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  28:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  2c:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  30:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  34:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  38:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  3c:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  40:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  44:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  48:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  4c:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  50:	0c 94 7f 05 	jmp	0xafe	; 0xafe <__bad_interrupt>
  54:	9e 00       	.word	0x009e	; ????
  56:	b7 00       	.word	0x00b7	; ????
  58:	d1 00       	.word	0x00d1	; ????
  5a:	e9 00       	.word	0x00e9	; ????
  5c:	03 01       	movw	r0, r6
  5e:	1c 01       	movw	r2, r24
  60:	36 01       	movw	r6, r12
  62:	50 01       	movw	r10, r0
  64:	74 01       	movw	r14, r8
  66:	8d 01       	movw	r16, r26
  68:	a7 01       	movw	r20, r14
  6a:	bf 01       	movw	r22, r30
  6c:	d9 01       	movw	r26, r18
  6e:	f2 01       	movw	r30, r4
  70:	0c 02       	muls	r16, r28
  72:	26 02       	muls	r18, r22
  74:	4a 02       	muls	r20, r26
  76:	63 02       	muls	r22, r19
  78:	7d 02       	muls	r23, r29
  7a:	95 02       	muls	r25, r21
  7c:	af 02       	muls	r26, r31
  7e:	c8 02       	muls	r28, r24
  80:	e2 02       	muls	r30, r18
  82:	fc 02       	muls	r31, r28
  84:	20 03       	mulsu	r18, r16
  86:	39 03       	fmul	r19, r17
  88:	53 03       	mulsu	r21, r19
  8a:	6b 03       	fmul	r22, r19
  8c:	85 03       	fmuls	r16, r21
  8e:	9e 03       	fmulsu	r17, r22
  90:	b8 03       	fmulsu	r19, r16
  92:	d2 03       	fmuls	r21, r18

00000094 <.dinit>:
  94:	00 60       	ori	r16, 0x00	; 0
  96:	00 6c       	ori	r16, 0xC0	; 192
  98:	00 0b       	sbc	r16, r16
  9a:	0c 00       	.word	0x000c	; ????

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf e5       	ldi	r28, 0x5F	; 95
  a2:	d8 e0       	ldi	r29, 0x08	; 8
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	e4 e9       	ldi	r30, 0x94	; 148
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	40 e0       	ldi	r20, 0x00	; 0
  ae:	17 c0       	rjmp	.+46     	; 0xde <__do_clear_bss+0x8>
  b0:	b5 91       	lpm	r27, Z+
  b2:	a5 91       	lpm	r26, Z+
  b4:	35 91       	lpm	r19, Z+
  b6:	25 91       	lpm	r18, Z+
  b8:	05 91       	lpm	r16, Z+
  ba:	07 fd       	sbrc	r16, 7
  bc:	0c c0       	rjmp	.+24     	; 0xd6 <__do_clear_bss>
  be:	95 91       	lpm	r25, Z+
  c0:	85 91       	lpm	r24, Z+
  c2:	ef 01       	movw	r28, r30
  c4:	f9 2f       	mov	r31, r25
  c6:	e8 2f       	mov	r30, r24
  c8:	05 90       	lpm	r0, Z+
  ca:	0d 92       	st	X+, r0
  cc:	a2 17       	cp	r26, r18
  ce:	b3 07       	cpc	r27, r19
  d0:	d9 f7       	brne	.-10     	; 0xc8 <__do_copy_data+0x20>
  d2:	fe 01       	movw	r30, r28
  d4:	04 c0       	rjmp	.+8      	; 0xde <__do_clear_bss+0x8>

000000d6 <__do_clear_bss>:
  d6:	1d 92       	st	X+, r1
  d8:	a2 17       	cp	r26, r18
  da:	b3 07       	cpc	r27, r19
  dc:	e1 f7       	brne	.-8      	; 0xd6 <__do_clear_bss>
  de:	eb 39       	cpi	r30, 0x9B	; 155
  e0:	f4 07       	cpc	r31, r20
  e2:	31 f7       	brne	.-52     	; 0xb0 <__do_copy_data+0x8>
  e4:	0e 94 2e 05 	call	0xa5c	; 0xa5c <main>
  e8:	0c 94 6e 05 	jmp	0xadc	; 0xadc <exit>

000000ec <_exit>:
  ec:	f8 94       	cli

000000ee <__stop_program>:
  ee:	ff cf       	rjmp	.-2      	; 0xee <__stop_program>

Disassembly of section .text:

00000afe <__bad_interrupt>:
 afe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.main:

00000a5c <main>:
extern LED_strCFG_t LEDS[NumOfLeds];
extern SWITCH_strCFG_t SWITCHS[NumOfLSWITCHES];


int main(void)
{
 a5c:	cf 93       	push	r28
 a5e:	df 93       	push	r29
 a60:	00 d0       	rcall	.+0      	; 0xa62 <main+0x6>
 a62:	cd b7       	in	r28, 0x3d	; 61
 a64:	de b7       	in	r29, 0x3e	; 62
	/**
	*@ LOCAL_u8Button1 variable to check switch1 one pressed or not , it initialized by 1 which mean switch unpressed
	*/
	u8 LOCAL_u8Button1 = 1 ;
 a66:	81 e0       	ldi	r24, 0x01	; 1
 a68:	89 83       	std	Y+1, r24	; 0x01
	/**
	*@ LOCAL_u8Button2 variable to check switch2 one pressed or not , it initialized by 1 which mean switch unpressed
	*/
	u8 LOCAL_u8Button2 = 1 ;
 a6a:	8a 83       	std	Y+2, r24	; 0x02
	
	LED_enumdInit();
 a6c:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <LED_enumdInit>
	SWITCH_enumdInit();
 a70:	0e 94 83 04 	call	0x906	; 0x906 <SWITCH_enumdInit>
	while(1)
    {
		/**
		*@ Check if switch1 pressed or not
		*/
		  DIO_enumGetPinVal(SWITCHS[SWITCH1].SWITCH_strPORT, SWITCHS[SWITCH1].SWITCH_strPIN ,& LOCAL_u8Button1) ;
 a74:	06 e6       	ldi	r16, 0x66	; 102
 a76:	10 e0       	ldi	r17, 0x00	; 0
 a78:	ae 01       	movw	r20, r28
 a7a:	4f 5f       	subi	r20, 0xFF	; 255
 a7c:	5f 4f       	sbci	r21, 0xFF	; 255
 a7e:	f8 01       	movw	r30, r16
 a80:	61 81       	ldd	r22, Z+1	; 0x01
 a82:	80 81       	ld	r24, Z
 a84:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <DIO_enumGetPinVal>
		 
		/**
		*@ Check if switch1 pressed or not
		*/
		  DIO_enumGetPinVal(SWITCHS[SWITCH2].SWITCH_strPORT, SWITCHS[SWITCH2].SWITCH_strPIN ,& LOCAL_u8Button2) ;
 a88:	ae 01       	movw	r20, r28
 a8a:	4e 5f       	subi	r20, 0xFE	; 254
 a8c:	5f 4f       	sbci	r21, 0xFF	; 255
 a8e:	f8 01       	movw	r30, r16
 a90:	64 81       	ldd	r22, Z+4	; 0x04
 a92:	83 81       	ldd	r24, Z+3	; 0x03
 a94:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <DIO_enumGetPinVal>
		  
		/**
		*@ IF switch 1 pressed toggle led 1 and if switch 2 pressed toggle led 2
		*/  
		if ( LOCAL_u8Button1 == Pressed )
 a98:	89 81       	ldd	r24, Y+1	; 0x01
 a9a:	81 11       	cpse	r24, r1
 a9c:	0e c0       	rjmp	.+28     	; 0xaba <main+0x5e>
		{
			TOG_BIT(DDRA , PIN0 );
 a9e:	9a b3       	in	r25, 0x1a	; 26
 aa0:	81 e0       	ldi	r24, 0x01	; 1
 aa2:	89 27       	eor	r24, r25
 aa4:	8a bb       	out	0x1a, r24	; 26
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 aa6:	ff e3       	ldi	r31, 0x3F	; 63
 aa8:	2d e0       	ldi	r18, 0x0D	; 13
 aaa:	83 e0       	ldi	r24, 0x03	; 3
 aac:	f1 50       	subi	r31, 0x01	; 1
 aae:	20 40       	sbci	r18, 0x00	; 0
 ab0:	80 40       	sbci	r24, 0x00	; 0
 ab2:	e1 f7       	brne	.-8      	; 0xaac <main+0x50>
 ab4:	00 c0       	rjmp	.+0      	; 0xab6 <main+0x5a>
 ab6:	00 00       	nop
 ab8:	dd cf       	rjmp	.-70     	; 0xa74 <main+0x18>
			_delay_ms(1000);
			
		}
		
		else if (  LOCAL_u8Button2 == Pressed)
 aba:	8a 81       	ldd	r24, Y+2	; 0x02
 abc:	81 11       	cpse	r24, r1
 abe:	da cf       	rjmp	.-76     	; 0xa74 <main+0x18>
		{
			TOG_BIT(DDRA , PIN1 );
 ac0:	9a b3       	in	r25, 0x1a	; 26
 ac2:	82 e0       	ldi	r24, 0x02	; 2
 ac4:	89 27       	eor	r24, r25
 ac6:	8a bb       	out	0x1a, r24	; 26
 ac8:	9f e3       	ldi	r25, 0x3F	; 63
 aca:	ed e0       	ldi	r30, 0x0D	; 13
 acc:	f3 e0       	ldi	r31, 0x03	; 3
 ace:	91 50       	subi	r25, 0x01	; 1
 ad0:	e0 40       	sbci	r30, 0x00	; 0
 ad2:	f0 40       	sbci	r31, 0x00	; 0
 ad4:	e1 f7       	brne	.-8      	; 0xace <main+0x72>
 ad6:	00 c0       	rjmp	.+0      	; 0xad8 <main+0x7c>
 ad8:	00 00       	nop
 ada:	cc cf       	rjmp	.-104    	; 0xa74 <main+0x18>

Disassembly of section .text.LED_enumdInit:

000007f6 <LED_enumdInit>:
 *@brief  : Function to Configure the  LEDS Pins to be active high or active low .
 *@param  : Address to struct in which i configure port num and pin num and pin configration.
 *@return : Error State                                               
 */
LED_enumErrorState LED_enumdInit(void)
{
 7f6:	ff 92       	push	r15
 7f8:	0f 93       	push	r16
 7fa:	1f 93       	push	r17
 7fc:	cf 93       	push	r28
 7fe:	df 93       	push	r29
 800:	00 d0       	rcall	.+0      	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 802:	00 d0       	rcall	.+0      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
 804:	00 d0       	rcall	.+0      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 806:	cd b7       	in	r28, 0x3d	; 61
 808:	de b7       	in	r29, 0x3e	; 62
	
	u8 LOCAL_u8Iterator = 0 ;
	
	PPRT_strCFG_t LOCAL_strCurrentLed[NumOfLeds];

	for( LOCAL_u8Iterator = 0 ; LOCAL_u8Iterator < NumOfLeds ; LOCAL_u8Iterator++)
 80a:	f1 2c       	mov	r15, r1
 *@param  : Address to struct in which i configure port num and pin num and pin configration.
 *@return : Error State                                               
 */
LED_enumErrorState LED_enumdInit(void)
{
	LED_enumErrorState LOCAL_enumReturnStatus = LED_enumOK ;
 80c:	80 e0       	ldi	r24, 0x00	; 0
	
	u8 LOCAL_u8Iterator = 0 ;
	
	PPRT_strCFG_t LOCAL_strCurrentLed[NumOfLeds];

	for( LOCAL_u8Iterator = 0 ; LOCAL_u8Iterator < NumOfLeds ; LOCAL_u8Iterator++)
 80e:	6b c0       	rjmp	.+214    	; 0x8e6 <__stack+0x87>
	{
		LOCAL_strCurrentLed[LOCAL_u8Iterator].PORT_strPORT = LEDS[LOCAL_u8Iterator].LED_strPORT ;
 810:	8f 2d       	mov	r24, r15
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	fc 01       	movw	r30, r24
 816:	ee 0f       	add	r30, r30
 818:	ff 1f       	adc	r31, r31
 81a:	e8 0f       	add	r30, r24
 81c:	f9 1f       	adc	r31, r25
 81e:	df 01       	movw	r26, r30
 820:	a0 5a       	subi	r26, 0xA0	; 160
 822:	bf 4f       	sbci	r27, 0xFF	; 255
 824:	2c 91       	ld	r18, X
 826:	41 e0       	ldi	r20, 0x01	; 1
 828:	50 e0       	ldi	r21, 0x00	; 0
 82a:	4c 0f       	add	r20, r28
 82c:	5d 1f       	adc	r21, r29
 82e:	e4 0f       	add	r30, r20
 830:	f5 1f       	adc	r31, r21
 832:	20 83       	st	Z, r18
		
		LOCAL_strCurrentLed[LOCAL_u8Iterator].PORT_strPIN = LEDS[LOCAL_u8Iterator].LED_strPIN ;
 834:	11 96       	adiw	r26, 0x01	; 1
 836:	2c 91       	ld	r18, X
 838:	11 97       	sbiw	r26, 0x01	; 1
 83a:	21 83       	std	Z+1, r18	; 0x01
		
		switch(LEDS[LOCAL_u8Iterator].LED_strSTATE){
 83c:	12 96       	adiw	r26, 0x02	; 2
 83e:	2c 91       	ld	r18, X
 840:	21 30       	cpi	r18, 0x01	; 1
 842:	a1 f0       	breq	.+40     	; 0x86c <__stack+0xd>
 844:	28 f0       	brcs	.+10     	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 846:	22 30       	cpi	r18, 0x02	; 2
 848:	f9 f0       	breq	.+62     	; 0x888 <__stack+0x29>
 84a:	23 30       	cpi	r18, 0x03	; 3
 84c:	59 f1       	breq	.+86     	; 0x8a4 <__stack+0x45>
 84e:	37 c0       	rjmp	.+110    	; 0x8be <__stack+0x5f>
										case LED_enumActiveHigh_ON:
												LOCAL_strCurrentLed[LOCAL_u8Iterator].PORT_strCFGType = DIO_enumActiveHigh_ON ;		
 850:	fc 01       	movw	r30, r24
 852:	ee 0f       	add	r30, r30
 854:	ff 1f       	adc	r31, r31
 856:	e8 0f       	add	r30, r24
 858:	f9 1f       	adc	r31, r25
 85a:	21 e0       	ldi	r18, 0x01	; 1
 85c:	30 e0       	ldi	r19, 0x00	; 0
 85e:	2c 0f       	add	r18, r28
 860:	3d 1f       	adc	r19, r29
 862:	e2 0f       	add	r30, r18
 864:	f3 1f       	adc	r31, r19
 866:	24 e0       	ldi	r18, 0x04	; 4
 868:	22 83       	std	Z+2, r18	; 0x02
										break;
 86a:	29 c0       	rjmp	.+82     	; 0x8be <__stack+0x5f>
										case LED_enumActiveHigh_OFF:
												LOCAL_strCurrentLed[LOCAL_u8Iterator].PORT_strCFGType = DIO_enumActiveHigh_OFF ;			
 86c:	fc 01       	movw	r30, r24
 86e:	ee 0f       	add	r30, r30
 870:	ff 1f       	adc	r31, r31
 872:	e8 0f       	add	r30, r24
 874:	f9 1f       	adc	r31, r25
 876:	41 e0       	ldi	r20, 0x01	; 1
 878:	50 e0       	ldi	r21, 0x00	; 0
 87a:	4c 0f       	add	r20, r28
 87c:	5d 1f       	adc	r21, r29
 87e:	e4 0f       	add	r30, r20
 880:	f5 1f       	adc	r31, r21
 882:	25 e0       	ldi	r18, 0x05	; 5
 884:	22 83       	std	Z+2, r18	; 0x02
										break;
 886:	1b c0       	rjmp	.+54     	; 0x8be <__stack+0x5f>
										case LED_enumActiveLow_ON:
												LOCAL_strCurrentLed[LOCAL_u8Iterator].PORT_strCFGType = DIO_enumActiveLow_ON ;
 888:	fc 01       	movw	r30, r24
 88a:	ee 0f       	add	r30, r30
 88c:	ff 1f       	adc	r31, r31
 88e:	e8 0f       	add	r30, r24
 890:	f9 1f       	adc	r31, r25
 892:	21 e0       	ldi	r18, 0x01	; 1
 894:	30 e0       	ldi	r19, 0x00	; 0
 896:	2c 0f       	add	r18, r28
 898:	3d 1f       	adc	r19, r29
 89a:	e2 0f       	add	r30, r18
 89c:	f3 1f       	adc	r31, r19
 89e:	26 e0       	ldi	r18, 0x06	; 6
 8a0:	22 83       	std	Z+2, r18	; 0x02
										break;
 8a2:	0d c0       	rjmp	.+26     	; 0x8be <__stack+0x5f>
										case LED_enumActiveLOw_OFF:
												LOCAL_strCurrentLed[LOCAL_u8Iterator].PORT_strCFGType = DIO_enumActiveLOw_OFF ;
 8a4:	fc 01       	movw	r30, r24
 8a6:	ee 0f       	add	r30, r30
 8a8:	ff 1f       	adc	r31, r31
 8aa:	e8 0f       	add	r30, r24
 8ac:	f9 1f       	adc	r31, r25
 8ae:	41 e0       	ldi	r20, 0x01	; 1
 8b0:	50 e0       	ldi	r21, 0x00	; 0
 8b2:	4c 0f       	add	r20, r28
 8b4:	5d 1f       	adc	r21, r29
 8b6:	e4 0f       	add	r30, r20
 8b8:	f5 1f       	adc	r31, r21
 8ba:	27 e0       	ldi	r18, 0x07	; 7
 8bc:	22 83       	std	Z+2, r18	; 0x02
		
	/**
	*@ call DIO_enumSetCFG function to set configration in DIO Driver
	*@ and check return of DIO_enumSetCFG function ok or not ok
	*/		
		 DIO_enumSetCFG( & LOCAL_strCurrentLed [LOCAL_u8Iterator] );
 8be:	8c 01       	movw	r16, r24
 8c0:	00 0f       	add	r16, r16
 8c2:	11 1f       	adc	r17, r17
 8c4:	80 0f       	add	r24, r16
 8c6:	91 1f       	adc	r25, r17
 8c8:	01 e0       	ldi	r16, 0x01	; 1
 8ca:	10 e0       	ldi	r17, 0x00	; 0
 8cc:	0c 0f       	add	r16, r28
 8ce:	1d 1f       	adc	r17, r29
 8d0:	08 0f       	add	r16, r24
 8d2:	19 1f       	adc	r17, r25
 8d4:	c8 01       	movw	r24, r16
 8d6:	0e 94 78 00 	call	0xf0	; 0xf0 <_etext>
			
		if( ! (DIO_enumSetCFG( & LOCAL_strCurrentLed [LOCAL_u8Iterator] ))){
 8da:	c8 01       	movw	r24, r16
 8dc:	0e 94 78 00 	call	0xf0	; 0xf0 <_etext>
 8e0:	81 11       	cpse	r24, r1
			LOCAL_enumReturnStatus = LED_enumOK ;
		}/*if*/
		else {
			LOCAL_enumReturnStatus = LED_enumNOK ;
 8e2:	81 e0       	ldi	r24, 0x01	; 1
	
	u8 LOCAL_u8Iterator = 0 ;
	
	PPRT_strCFG_t LOCAL_strCurrentLed[NumOfLeds];

	for( LOCAL_u8Iterator = 0 ; LOCAL_u8Iterator < NumOfLeds ; LOCAL_u8Iterator++)
 8e4:	f3 94       	inc	r15
 8e6:	51 e0       	ldi	r21, 0x01	; 1
 8e8:	5f 15       	cp	r21, r15
 8ea:	08 f0       	brcs	.+2      	; 0x8ee <__stack+0x8f>
 8ec:	91 cf       	rjmp	.-222    	; 0x810 <__DATA_REGION_LENGTH__+0x10>
	

return LOCAL_enumReturnStatus ;
	
	
}/*led init function */
 8ee:	26 96       	adiw	r28, 0x06	; 6
 8f0:	0f b6       	in	r0, 0x3f	; 63
 8f2:	f8 94       	cli
 8f4:	de bf       	out	0x3e, r29	; 62
 8f6:	0f be       	out	0x3f, r0	; 63
 8f8:	cd bf       	out	0x3d, r28	; 61
 8fa:	df 91       	pop	r29
 8fc:	cf 91       	pop	r28
 8fe:	1f 91       	pop	r17
 900:	0f 91       	pop	r16
 902:	ff 90       	pop	r15
 904:	08 95       	ret

Disassembly of section .text.SWITCH_enumdInit:

00000906 <SWITCH_enumdInit>:
 *@brief  : Function to Configure the  SWITCHS Pins to be INPUT pull up or input external pull down resistor .
 *@param  : Address to struct in which i configure port num and pin num and pin configration.
 *@return : Error State                                               
 */
SWITCH_enumErrorState SWITCH_enumdInit(void)
{
 906:	ff 92       	push	r15
 908:	0f 93       	push	r16
 90a:	1f 93       	push	r17
 90c:	cf 93       	push	r28
 90e:	df 93       	push	r29
 910:	00 d0       	rcall	.+0      	; 0x912 <SWITCH_enumdInit+0xc>
 912:	00 d0       	rcall	.+0      	; 0x914 <SWITCH_enumdInit+0xe>
 914:	00 d0       	rcall	.+0      	; 0x916 <SWITCH_enumdInit+0x10>
 916:	cd b7       	in	r28, 0x3d	; 61
 918:	de b7       	in	r29, 0x3e	; 62
	
	u8 LOCAL_u8Iterator = 0 ;
	
	PPRT_strCFG_t LOCAL_strCurrentSWITCH[NumOfLSWITCHES];

	for( LOCAL_u8Iterator = 0 ; LOCAL_u8Iterator < NumOfLSWITCHES ; LOCAL_u8Iterator++)
 91a:	f1 2c       	mov	r15, r1
 *@param  : Address to struct in which i configure port num and pin num and pin configration.
 *@return : Error State                                               
 */
SWITCH_enumErrorState SWITCH_enumdInit(void)
{
	SWITCH_enumErrorState LOCAL_enumReturnStatus = SWITCH_enumOK ;
 91c:	80 e0       	ldi	r24, 0x00	; 0
	
	u8 LOCAL_u8Iterator = 0 ;
	
	PPRT_strCFG_t LOCAL_strCurrentSWITCH[NumOfLSWITCHES];

	for( LOCAL_u8Iterator = 0 ; LOCAL_u8Iterator < NumOfLSWITCHES ; LOCAL_u8Iterator++)
 91e:	4c c0       	rjmp	.+152    	; 0x9b8 <SWITCH_enumdInit+0xb2>
	{
		LOCAL_strCurrentSWITCH[LOCAL_u8Iterator].PORT_strPORT = SWITCHS[LOCAL_u8Iterator].SWITCH_strPORT ;
 920:	8f 2d       	mov	r24, r15
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	fc 01       	movw	r30, r24
 926:	ee 0f       	add	r30, r30
 928:	ff 1f       	adc	r31, r31
 92a:	e8 0f       	add	r30, r24
 92c:	f9 1f       	adc	r31, r25
 92e:	df 01       	movw	r26, r30
 930:	aa 59       	subi	r26, 0x9A	; 154
 932:	bf 4f       	sbci	r27, 0xFF	; 255
 934:	2c 91       	ld	r18, X
 936:	41 e0       	ldi	r20, 0x01	; 1
 938:	50 e0       	ldi	r21, 0x00	; 0
 93a:	4c 0f       	add	r20, r28
 93c:	5d 1f       	adc	r21, r29
 93e:	e4 0f       	add	r30, r20
 940:	f5 1f       	adc	r31, r21
 942:	20 83       	st	Z, r18
		
		LOCAL_strCurrentSWITCH[LOCAL_u8Iterator].PORT_strPIN = SWITCHS[LOCAL_u8Iterator].SWITCH_strPIN ;
 944:	11 96       	adiw	r26, 0x01	; 1
 946:	2c 91       	ld	r18, X
 948:	11 97       	sbiw	r26, 0x01	; 1
 94a:	21 83       	std	Z+1, r18	; 0x01
		
		switch(SWITCHS[LOCAL_u8Iterator].SWITCH_strSTATE){
 94c:	12 96       	adiw	r26, 0x02	; 2
 94e:	2c 91       	ld	r18, X
 950:	22 23       	and	r18, r18
 952:	19 f0       	breq	.+6      	; 0x95a <SWITCH_enumdInit+0x54>
 954:	21 30       	cpi	r18, 0x01	; 1
 956:	79 f0       	breq	.+30     	; 0x976 <SWITCH_enumdInit+0x70>
 958:	1b c0       	rjmp	.+54     	; 0x990 <SWITCH_enumdInit+0x8a>
										case SWITCH_enumINPUT_PULLUP:
												LOCAL_strCurrentSWITCH[LOCAL_u8Iterator].PORT_strCFGType = DIO_enumInputPullUp ;		
 95a:	fc 01       	movw	r30, r24
 95c:	ee 0f       	add	r30, r30
 95e:	ff 1f       	adc	r31, r31
 960:	e8 0f       	add	r30, r24
 962:	f9 1f       	adc	r31, r25
 964:	21 e0       	ldi	r18, 0x01	; 1
 966:	30 e0       	ldi	r19, 0x00	; 0
 968:	2c 0f       	add	r18, r28
 96a:	3d 1f       	adc	r19, r29
 96c:	e2 0f       	add	r30, r18
 96e:	f3 1f       	adc	r31, r19
 970:	22 e0       	ldi	r18, 0x02	; 2
 972:	22 83       	std	Z+2, r18	; 0x02
										break;
 974:	0d c0       	rjmp	.+26     	; 0x990 <SWITCH_enumdInit+0x8a>
										case SWITCH_enumINPUT_EXTERNALPULLDOWN:
												LOCAL_strCurrentSWITCH[LOCAL_u8Iterator].PORT_strCFGType = DIO_enumInputExternalPullDown  ;			
 976:	fc 01       	movw	r30, r24
 978:	ee 0f       	add	r30, r30
 97a:	ff 1f       	adc	r31, r31
 97c:	e8 0f       	add	r30, r24
 97e:	f9 1f       	adc	r31, r25
 980:	41 e0       	ldi	r20, 0x01	; 1
 982:	50 e0       	ldi	r21, 0x00	; 0
 984:	4c 0f       	add	r20, r28
 986:	5d 1f       	adc	r21, r29
 988:	e4 0f       	add	r30, r20
 98a:	f5 1f       	adc	r31, r21
 98c:	23 e0       	ldi	r18, 0x03	; 3
 98e:	22 83       	std	Z+2, r18	; 0x02
		
	/**
	*@ call DIO_enumSetCFG function to set configration in DIO Driver
	*@ and check return of DIO_enumSetCFG function ok or not ok
	*/		
		 DIO_enumSetCFG( & LOCAL_strCurrentSWITCH [LOCAL_u8Iterator] );
 990:	8c 01       	movw	r16, r24
 992:	00 0f       	add	r16, r16
 994:	11 1f       	adc	r17, r17
 996:	80 0f       	add	r24, r16
 998:	91 1f       	adc	r25, r17
 99a:	01 e0       	ldi	r16, 0x01	; 1
 99c:	10 e0       	ldi	r17, 0x00	; 0
 99e:	0c 0f       	add	r16, r28
 9a0:	1d 1f       	adc	r17, r29
 9a2:	08 0f       	add	r16, r24
 9a4:	19 1f       	adc	r17, r25
 9a6:	c8 01       	movw	r24, r16
 9a8:	0e 94 78 00 	call	0xf0	; 0xf0 <_etext>
			
		if( ! (DIO_enumSetCFG( & LOCAL_strCurrentSWITCH [LOCAL_u8Iterator] )) ){
 9ac:	c8 01       	movw	r24, r16
 9ae:	0e 94 78 00 	call	0xf0	; 0xf0 <_etext>
 9b2:	81 11       	cpse	r24, r1
			LOCAL_enumReturnStatus = SWITCH_enumOK ;
		}/*if*/
		else {
			LOCAL_enumReturnStatus = SWITCH_enumNOK ;
 9b4:	81 e0       	ldi	r24, 0x01	; 1
	
	u8 LOCAL_u8Iterator = 0 ;
	
	PPRT_strCFG_t LOCAL_strCurrentSWITCH[NumOfLSWITCHES];

	for( LOCAL_u8Iterator = 0 ; LOCAL_u8Iterator < NumOfLSWITCHES ; LOCAL_u8Iterator++)
 9b6:	f3 94       	inc	r15
 9b8:	51 e0       	ldi	r21, 0x01	; 1
 9ba:	5f 15       	cp	r21, r15
 9bc:	08 f0       	brcs	.+2      	; 0x9c0 <SWITCH_enumdInit+0xba>
 9be:	b0 cf       	rjmp	.-160    	; 0x920 <SWITCH_enumdInit+0x1a>
	

return LOCAL_enumReturnStatus ;
	
	
}/*led init function */
 9c0:	26 96       	adiw	r28, 0x06	; 6
 9c2:	0f b6       	in	r0, 0x3f	; 63
 9c4:	f8 94       	cli
 9c6:	de bf       	out	0x3e, r29	; 62
 9c8:	0f be       	out	0x3f, r0	; 63
 9ca:	cd bf       	out	0x3d, r28	; 61
 9cc:	df 91       	pop	r29
 9ce:	cf 91       	pop	r28
 9d0:	1f 91       	pop	r17
 9d2:	0f 91       	pop	r16
 9d4:	ff 90       	pop	r15
 9d6:	08 95       	ret

Disassembly of section .text.DIO_enumSetCFG:

000000f0 <DIO_enumSetCFG>:
	
	
	
	
	
}/*set bin value function*/
  f0:	dc 01       	movw	r26, r24
  f2:	2c 91       	ld	r18, X
  f4:	24 30       	cpi	r18, 0x04	; 4
  f6:	08 f0       	brcs	.+2      	; 0xfa <DIO_enumSetCFG+0xa>
  f8:	6e c3       	rjmp	.+1756   	; 0x7d6 <__EEPROM_REGION_LENGTH__+0x3d6>
  fa:	11 96       	adiw	r26, 0x01	; 1
  fc:	3c 91       	ld	r19, X
  fe:	11 97       	sbiw	r26, 0x01	; 1
 100:	38 30       	cpi	r19, 0x08	; 8
 102:	08 f0       	brcs	.+2      	; 0x106 <DIO_enumSetCFG+0x16>
 104:	6a c3       	rjmp	.+1748   	; 0x7da <__EEPROM_REGION_LENGTH__+0x3da>
 106:	12 96       	adiw	r26, 0x02	; 2
 108:	ec 91       	ld	r30, X
 10a:	e8 30       	cpi	r30, 0x08	; 8
 10c:	08 f0       	brcs	.+2      	; 0x110 <DIO_enumSetCFG+0x20>
 10e:	67 c3       	rjmp	.+1742   	; 0x7de <__EEPROM_REGION_LENGTH__+0x3de>
 110:	21 30       	cpi	r18, 0x01	; 1
 112:	09 f4       	brne	.+2      	; 0x116 <DIO_enumSetCFG+0x26>
 114:	de c0       	rjmp	.+444    	; 0x2d2 <DIO_enumSetCFG+0x1e2>
 116:	38 f0       	brcs	.+14     	; 0x126 <DIO_enumSetCFG+0x36>
 118:	22 30       	cpi	r18, 0x02	; 2
 11a:	09 f4       	brne	.+2      	; 0x11e <DIO_enumSetCFG+0x2e>
 11c:	b0 c1       	rjmp	.+864    	; 0x47e <__EEPROM_REGION_LENGTH__+0x7e>
 11e:	23 30       	cpi	r18, 0x03	; 3
 120:	09 f4       	brne	.+2      	; 0x124 <DIO_enumSetCFG+0x34>
 122:	83 c2       	rjmp	.+1286   	; 0x62a <__EEPROM_REGION_LENGTH__+0x22a>
 124:	5e c3       	rjmp	.+1724   	; 0x7e2 <__EEPROM_REGION_LENGTH__+0x3e2>
 126:	4e 2f       	mov	r20, r30
 128:	50 e0       	ldi	r21, 0x00	; 0
 12a:	48 30       	cpi	r20, 0x08	; 8
 12c:	51 05       	cpc	r21, r1
 12e:	08 f0       	brcs	.+2      	; 0x132 <DIO_enumSetCFG+0x42>
 130:	5a c3       	rjmp	.+1716   	; 0x7e6 <__EEPROM_REGION_LENGTH__+0x3e6>
 132:	fa 01       	movw	r30, r20
 134:	e6 5d       	subi	r30, 0xD6	; 214
 136:	ff 4f       	sbci	r31, 0xFF	; 255
 138:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__tablejump2__>
 13c:	6a b3       	in	r22, 0x1a	; 26
 13e:	41 e0       	ldi	r20, 0x01	; 1
 140:	50 e0       	ldi	r21, 0x00	; 0
 142:	fa 01       	movw	r30, r20
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_enumSetCFG+0x5a>
 146:	ee 0f       	add	r30, r30
 148:	ff 1f       	adc	r31, r31
 14a:	3a 95       	dec	r19
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_enumSetCFG+0x56>
 14e:	9f 01       	movw	r18, r30
 150:	26 2b       	or	r18, r22
 152:	2a bb       	out	0x1a, r18	; 26
 154:	2b b3       	in	r18, 0x1b	; 27
 156:	dc 01       	movw	r26, r24
 158:	11 96       	adiw	r26, 0x01	; 1
 15a:	0c 90       	ld	r0, X
 15c:	02 c0       	rjmp	.+4      	; 0x162 <DIO_enumSetCFG+0x72>
 15e:	44 0f       	add	r20, r20
 160:	55 1f       	adc	r21, r21
 162:	0a 94       	dec	r0
 164:	e2 f7       	brpl	.-8      	; 0x15e <DIO_enumSetCFG+0x6e>
 166:	42 2b       	or	r20, r18
 168:	4b bb       	out	0x1b, r20	; 27
 16a:	80 e0       	ldi	r24, 0x00	; 0
 16c:	08 95       	ret
 16e:	6a b3       	in	r22, 0x1a	; 26
 170:	41 e0       	ldi	r20, 0x01	; 1
 172:	50 e0       	ldi	r21, 0x00	; 0
 174:	fa 01       	movw	r30, r20
 176:	02 c0       	rjmp	.+4      	; 0x17c <DIO_enumSetCFG+0x8c>
 178:	ee 0f       	add	r30, r30
 17a:	ff 1f       	adc	r31, r31
 17c:	3a 95       	dec	r19
 17e:	e2 f7       	brpl	.-8      	; 0x178 <DIO_enumSetCFG+0x88>
 180:	9f 01       	movw	r18, r30
 182:	26 2b       	or	r18, r22
 184:	2a bb       	out	0x1a, r18	; 26
 186:	2b b3       	in	r18, 0x1b	; 27
 188:	dc 01       	movw	r26, r24
 18a:	11 96       	adiw	r26, 0x01	; 1
 18c:	0c 90       	ld	r0, X
 18e:	02 c0       	rjmp	.+4      	; 0x194 <DIO_enumSetCFG+0xa4>
 190:	44 0f       	add	r20, r20
 192:	55 1f       	adc	r21, r21
 194:	0a 94       	dec	r0
 196:	e2 f7       	brpl	.-8      	; 0x190 <DIO_enumSetCFG+0xa0>
 198:	40 95       	com	r20
 19a:	42 23       	and	r20, r18
 19c:	4b bb       	out	0x1b, r20	; 27
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	08 95       	ret
 1a2:	2a b3       	in	r18, 0x1a	; 26
 1a4:	41 e0       	ldi	r20, 0x01	; 1
 1a6:	50 e0       	ldi	r21, 0x00	; 0
 1a8:	ba 01       	movw	r22, r20
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_enumSetCFG+0xc0>
 1ac:	66 0f       	add	r22, r22
 1ae:	77 1f       	adc	r23, r23
 1b0:	3a 95       	dec	r19
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_enumSetCFG+0xbc>
 1b4:	60 95       	com	r22
 1b6:	26 23       	and	r18, r22
 1b8:	2a bb       	out	0x1a, r18	; 26
 1ba:	2b b3       	in	r18, 0x1b	; 27
 1bc:	fc 01       	movw	r30, r24
 1be:	01 80       	ldd	r0, Z+1	; 0x01
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <DIO_enumSetCFG+0xd6>
 1c2:	44 0f       	add	r20, r20
 1c4:	55 1f       	adc	r21, r21
 1c6:	0a 94       	dec	r0
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <DIO_enumSetCFG+0xd2>
 1ca:	42 2b       	or	r20, r18
 1cc:	4b bb       	out	0x1b, r20	; 27
 1ce:	80 e0       	ldi	r24, 0x00	; 0
 1d0:	08 95       	ret
 1d2:	2a b3       	in	r18, 0x1a	; 26
 1d4:	41 e0       	ldi	r20, 0x01	; 1
 1d6:	50 e0       	ldi	r21, 0x00	; 0
 1d8:	ba 01       	movw	r22, r20
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_enumSetCFG+0xf0>
 1dc:	66 0f       	add	r22, r22
 1de:	77 1f       	adc	r23, r23
 1e0:	3a 95       	dec	r19
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_enumSetCFG+0xec>
 1e4:	60 95       	com	r22
 1e6:	26 23       	and	r18, r22
 1e8:	2a bb       	out	0x1a, r18	; 26
 1ea:	2b b3       	in	r18, 0x1b	; 27
 1ec:	dc 01       	movw	r26, r24
 1ee:	11 96       	adiw	r26, 0x01	; 1
 1f0:	0c 90       	ld	r0, X
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_enumSetCFG+0x108>
 1f4:	44 0f       	add	r20, r20
 1f6:	55 1f       	adc	r21, r21
 1f8:	0a 94       	dec	r0
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <DIO_enumSetCFG+0x104>
 1fc:	40 95       	com	r20
 1fe:	42 23       	and	r20, r18
 200:	4b bb       	out	0x1b, r20	; 27
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	08 95       	ret
 206:	6a b3       	in	r22, 0x1a	; 26
 208:	41 e0       	ldi	r20, 0x01	; 1
 20a:	50 e0       	ldi	r21, 0x00	; 0
 20c:	fa 01       	movw	r30, r20
 20e:	02 c0       	rjmp	.+4      	; 0x214 <DIO_enumSetCFG+0x124>
 210:	ee 0f       	add	r30, r30
 212:	ff 1f       	adc	r31, r31
 214:	3a 95       	dec	r19
 216:	e2 f7       	brpl	.-8      	; 0x210 <DIO_enumSetCFG+0x120>
 218:	9f 01       	movw	r18, r30
 21a:	26 2b       	or	r18, r22
 21c:	2a bb       	out	0x1a, r18	; 26
 21e:	2b b3       	in	r18, 0x1b	; 27
 220:	dc 01       	movw	r26, r24
 222:	11 96       	adiw	r26, 0x01	; 1
 224:	0c 90       	ld	r0, X
 226:	02 c0       	rjmp	.+4      	; 0x22c <DIO_enumSetCFG+0x13c>
 228:	44 0f       	add	r20, r20
 22a:	55 1f       	adc	r21, r21
 22c:	0a 94       	dec	r0
 22e:	e2 f7       	brpl	.-8      	; 0x228 <DIO_enumSetCFG+0x138>
 230:	42 2b       	or	r20, r18
 232:	4b bb       	out	0x1b, r20	; 27
 234:	80 e0       	ldi	r24, 0x00	; 0
 236:	08 95       	ret
 238:	6a b3       	in	r22, 0x1a	; 26
 23a:	41 e0       	ldi	r20, 0x01	; 1
 23c:	50 e0       	ldi	r21, 0x00	; 0
 23e:	fa 01       	movw	r30, r20
 240:	02 c0       	rjmp	.+4      	; 0x246 <DIO_enumSetCFG+0x156>
 242:	ee 0f       	add	r30, r30
 244:	ff 1f       	adc	r31, r31
 246:	3a 95       	dec	r19
 248:	e2 f7       	brpl	.-8      	; 0x242 <DIO_enumSetCFG+0x152>
 24a:	9f 01       	movw	r18, r30
 24c:	26 2b       	or	r18, r22
 24e:	2a bb       	out	0x1a, r18	; 26
 250:	2b b3       	in	r18, 0x1b	; 27
 252:	dc 01       	movw	r26, r24
 254:	11 96       	adiw	r26, 0x01	; 1
 256:	0c 90       	ld	r0, X
 258:	02 c0       	rjmp	.+4      	; 0x25e <DIO_enumSetCFG+0x16e>
 25a:	44 0f       	add	r20, r20
 25c:	55 1f       	adc	r21, r21
 25e:	0a 94       	dec	r0
 260:	e2 f7       	brpl	.-8      	; 0x25a <DIO_enumSetCFG+0x16a>
 262:	40 95       	com	r20
 264:	42 23       	and	r20, r18
 266:	4b bb       	out	0x1b, r20	; 27
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	08 95       	ret
 26c:	6a b3       	in	r22, 0x1a	; 26
 26e:	41 e0       	ldi	r20, 0x01	; 1
 270:	50 e0       	ldi	r21, 0x00	; 0
 272:	fa 01       	movw	r30, r20
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_enumSetCFG+0x18a>
 276:	ee 0f       	add	r30, r30
 278:	ff 1f       	adc	r31, r31
 27a:	3a 95       	dec	r19
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_enumSetCFG+0x186>
 27e:	9f 01       	movw	r18, r30
 280:	26 2b       	or	r18, r22
 282:	2a bb       	out	0x1a, r18	; 26
 284:	2b b3       	in	r18, 0x1b	; 27
 286:	dc 01       	movw	r26, r24
 288:	11 96       	adiw	r26, 0x01	; 1
 28a:	0c 90       	ld	r0, X
 28c:	02 c0       	rjmp	.+4      	; 0x292 <DIO_enumSetCFG+0x1a2>
 28e:	44 0f       	add	r20, r20
 290:	55 1f       	adc	r21, r21
 292:	0a 94       	dec	r0
 294:	e2 f7       	brpl	.-8      	; 0x28e <DIO_enumSetCFG+0x19e>
 296:	40 95       	com	r20
 298:	42 23       	and	r20, r18
 29a:	4b bb       	out	0x1b, r20	; 27
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	08 95       	ret
 2a0:	6a b3       	in	r22, 0x1a	; 26
 2a2:	41 e0       	ldi	r20, 0x01	; 1
 2a4:	50 e0       	ldi	r21, 0x00	; 0
 2a6:	fa 01       	movw	r30, r20
 2a8:	02 c0       	rjmp	.+4      	; 0x2ae <DIO_enumSetCFG+0x1be>
 2aa:	ee 0f       	add	r30, r30
 2ac:	ff 1f       	adc	r31, r31
 2ae:	3a 95       	dec	r19
 2b0:	e2 f7       	brpl	.-8      	; 0x2aa <DIO_enumSetCFG+0x1ba>
 2b2:	9f 01       	movw	r18, r30
 2b4:	26 2b       	or	r18, r22
 2b6:	2a bb       	out	0x1a, r18	; 26
 2b8:	2b b3       	in	r18, 0x1b	; 27
 2ba:	dc 01       	movw	r26, r24
 2bc:	11 96       	adiw	r26, 0x01	; 1
 2be:	0c 90       	ld	r0, X
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <DIO_enumSetCFG+0x1d6>
 2c2:	44 0f       	add	r20, r20
 2c4:	55 1f       	adc	r21, r21
 2c6:	0a 94       	dec	r0
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <DIO_enumSetCFG+0x1d2>
 2ca:	42 2b       	or	r20, r18
 2cc:	4b bb       	out	0x1b, r20	; 27
 2ce:	80 e0       	ldi	r24, 0x00	; 0
 2d0:	08 95       	ret
 2d2:	4e 2f       	mov	r20, r30
 2d4:	50 e0       	ldi	r21, 0x00	; 0
 2d6:	48 30       	cpi	r20, 0x08	; 8
 2d8:	51 05       	cpc	r21, r1
 2da:	08 f0       	brcs	.+2      	; 0x2de <DIO_enumSetCFG+0x1ee>
 2dc:	86 c2       	rjmp	.+1292   	; 0x7ea <__EEPROM_REGION_LENGTH__+0x3ea>
 2de:	fa 01       	movw	r30, r20
 2e0:	ee 5c       	subi	r30, 0xCE	; 206
 2e2:	ff 4f       	sbci	r31, 0xFF	; 255
 2e4:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__tablejump2__>
 2e8:	67 b3       	in	r22, 0x17	; 23
 2ea:	41 e0       	ldi	r20, 0x01	; 1
 2ec:	50 e0       	ldi	r21, 0x00	; 0
 2ee:	fa 01       	movw	r30, r20
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <DIO_enumSetCFG+0x206>
 2f2:	ee 0f       	add	r30, r30
 2f4:	ff 1f       	adc	r31, r31
 2f6:	3a 95       	dec	r19
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <DIO_enumSetCFG+0x202>
 2fa:	9f 01       	movw	r18, r30
 2fc:	26 2b       	or	r18, r22
 2fe:	27 bb       	out	0x17, r18	; 23
 300:	28 b3       	in	r18, 0x18	; 24
 302:	dc 01       	movw	r26, r24
 304:	11 96       	adiw	r26, 0x01	; 1
 306:	0c 90       	ld	r0, X
 308:	02 c0       	rjmp	.+4      	; 0x30e <DIO_enumSetCFG+0x21e>
 30a:	44 0f       	add	r20, r20
 30c:	55 1f       	adc	r21, r21
 30e:	0a 94       	dec	r0
 310:	e2 f7       	brpl	.-8      	; 0x30a <DIO_enumSetCFG+0x21a>
 312:	42 2b       	or	r20, r18
 314:	48 bb       	out	0x18, r20	; 24
 316:	80 e0       	ldi	r24, 0x00	; 0
 318:	08 95       	ret
 31a:	67 b3       	in	r22, 0x17	; 23
 31c:	41 e0       	ldi	r20, 0x01	; 1
 31e:	50 e0       	ldi	r21, 0x00	; 0
 320:	fa 01       	movw	r30, r20
 322:	02 c0       	rjmp	.+4      	; 0x328 <DIO_enumSetCFG+0x238>
 324:	ee 0f       	add	r30, r30
 326:	ff 1f       	adc	r31, r31
 328:	3a 95       	dec	r19
 32a:	e2 f7       	brpl	.-8      	; 0x324 <DIO_enumSetCFG+0x234>
 32c:	9f 01       	movw	r18, r30
 32e:	26 2b       	or	r18, r22
 330:	27 bb       	out	0x17, r18	; 23
 332:	28 b3       	in	r18, 0x18	; 24
 334:	dc 01       	movw	r26, r24
 336:	11 96       	adiw	r26, 0x01	; 1
 338:	0c 90       	ld	r0, X
 33a:	02 c0       	rjmp	.+4      	; 0x340 <DIO_enumSetCFG+0x250>
 33c:	44 0f       	add	r20, r20
 33e:	55 1f       	adc	r21, r21
 340:	0a 94       	dec	r0
 342:	e2 f7       	brpl	.-8      	; 0x33c <DIO_enumSetCFG+0x24c>
 344:	40 95       	com	r20
 346:	42 23       	and	r20, r18
 348:	48 bb       	out	0x18, r20	; 24
 34a:	80 e0       	ldi	r24, 0x00	; 0
 34c:	08 95       	ret
 34e:	27 b3       	in	r18, 0x17	; 23
 350:	41 e0       	ldi	r20, 0x01	; 1
 352:	50 e0       	ldi	r21, 0x00	; 0
 354:	ba 01       	movw	r22, r20
 356:	02 c0       	rjmp	.+4      	; 0x35c <DIO_enumSetCFG+0x26c>
 358:	66 0f       	add	r22, r22
 35a:	77 1f       	adc	r23, r23
 35c:	3a 95       	dec	r19
 35e:	e2 f7       	brpl	.-8      	; 0x358 <DIO_enumSetCFG+0x268>
 360:	60 95       	com	r22
 362:	26 23       	and	r18, r22
 364:	27 bb       	out	0x17, r18	; 23
 366:	28 b3       	in	r18, 0x18	; 24
 368:	fc 01       	movw	r30, r24
 36a:	01 80       	ldd	r0, Z+1	; 0x01
 36c:	02 c0       	rjmp	.+4      	; 0x372 <DIO_enumSetCFG+0x282>
 36e:	44 0f       	add	r20, r20
 370:	55 1f       	adc	r21, r21
 372:	0a 94       	dec	r0
 374:	e2 f7       	brpl	.-8      	; 0x36e <DIO_enumSetCFG+0x27e>
 376:	42 2b       	or	r20, r18
 378:	48 bb       	out	0x18, r20	; 24
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	08 95       	ret
 37e:	27 b3       	in	r18, 0x17	; 23
 380:	41 e0       	ldi	r20, 0x01	; 1
 382:	50 e0       	ldi	r21, 0x00	; 0
 384:	ba 01       	movw	r22, r20
 386:	02 c0       	rjmp	.+4      	; 0x38c <DIO_enumSetCFG+0x29c>
 388:	66 0f       	add	r22, r22
 38a:	77 1f       	adc	r23, r23
 38c:	3a 95       	dec	r19
 38e:	e2 f7       	brpl	.-8      	; 0x388 <DIO_enumSetCFG+0x298>
 390:	60 95       	com	r22
 392:	26 23       	and	r18, r22
 394:	27 bb       	out	0x17, r18	; 23
 396:	28 b3       	in	r18, 0x18	; 24
 398:	dc 01       	movw	r26, r24
 39a:	11 96       	adiw	r26, 0x01	; 1
 39c:	0c 90       	ld	r0, X
 39e:	02 c0       	rjmp	.+4      	; 0x3a4 <DIO_enumSetCFG+0x2b4>
 3a0:	44 0f       	add	r20, r20
 3a2:	55 1f       	adc	r21, r21
 3a4:	0a 94       	dec	r0
 3a6:	e2 f7       	brpl	.-8      	; 0x3a0 <DIO_enumSetCFG+0x2b0>
 3a8:	40 95       	com	r20
 3aa:	42 23       	and	r20, r18
 3ac:	48 bb       	out	0x18, r20	; 24
 3ae:	80 e0       	ldi	r24, 0x00	; 0
 3b0:	08 95       	ret
 3b2:	67 b3       	in	r22, 0x17	; 23
 3b4:	41 e0       	ldi	r20, 0x01	; 1
 3b6:	50 e0       	ldi	r21, 0x00	; 0
 3b8:	fa 01       	movw	r30, r20
 3ba:	02 c0       	rjmp	.+4      	; 0x3c0 <DIO_enumSetCFG+0x2d0>
 3bc:	ee 0f       	add	r30, r30
 3be:	ff 1f       	adc	r31, r31
 3c0:	3a 95       	dec	r19
 3c2:	e2 f7       	brpl	.-8      	; 0x3bc <DIO_enumSetCFG+0x2cc>
 3c4:	9f 01       	movw	r18, r30
 3c6:	26 2b       	or	r18, r22
 3c8:	27 bb       	out	0x17, r18	; 23
 3ca:	28 b3       	in	r18, 0x18	; 24
 3cc:	dc 01       	movw	r26, r24
 3ce:	11 96       	adiw	r26, 0x01	; 1
 3d0:	0c 90       	ld	r0, X
 3d2:	02 c0       	rjmp	.+4      	; 0x3d8 <DIO_enumSetCFG+0x2e8>
 3d4:	44 0f       	add	r20, r20
 3d6:	55 1f       	adc	r21, r21
 3d8:	0a 94       	dec	r0
 3da:	e2 f7       	brpl	.-8      	; 0x3d4 <DIO_enumSetCFG+0x2e4>
 3dc:	42 2b       	or	r20, r18
 3de:	48 bb       	out	0x18, r20	; 24
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	08 95       	ret
 3e4:	67 b3       	in	r22, 0x17	; 23
 3e6:	41 e0       	ldi	r20, 0x01	; 1
 3e8:	50 e0       	ldi	r21, 0x00	; 0
 3ea:	fa 01       	movw	r30, r20
 3ec:	02 c0       	rjmp	.+4      	; 0x3f2 <DIO_enumSetCFG+0x302>
 3ee:	ee 0f       	add	r30, r30
 3f0:	ff 1f       	adc	r31, r31
 3f2:	3a 95       	dec	r19
 3f4:	e2 f7       	brpl	.-8      	; 0x3ee <DIO_enumSetCFG+0x2fe>
 3f6:	9f 01       	movw	r18, r30
 3f8:	26 2b       	or	r18, r22
 3fa:	27 bb       	out	0x17, r18	; 23
 3fc:	28 b3       	in	r18, 0x18	; 24
 3fe:	dc 01       	movw	r26, r24
 400:	11 96       	adiw	r26, 0x01	; 1
 402:	0c 90       	ld	r0, X
 404:	02 c0       	rjmp	.+4      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 406:	44 0f       	add	r20, r20
 408:	55 1f       	adc	r21, r21
 40a:	0a 94       	dec	r0
 40c:	e2 f7       	brpl	.-8      	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 40e:	40 95       	com	r20
 410:	42 23       	and	r20, r18
 412:	48 bb       	out	0x18, r20	; 24
 414:	80 e0       	ldi	r24, 0x00	; 0
 416:	08 95       	ret
 418:	67 b3       	in	r22, 0x17	; 23
 41a:	41 e0       	ldi	r20, 0x01	; 1
 41c:	50 e0       	ldi	r21, 0x00	; 0
 41e:	fa 01       	movw	r30, r20
 420:	02 c0       	rjmp	.+4      	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 422:	ee 0f       	add	r30, r30
 424:	ff 1f       	adc	r31, r31
 426:	3a 95       	dec	r19
 428:	e2 f7       	brpl	.-8      	; 0x422 <__EEPROM_REGION_LENGTH__+0x22>
 42a:	9f 01       	movw	r18, r30
 42c:	26 2b       	or	r18, r22
 42e:	27 bb       	out	0x17, r18	; 23
 430:	28 b3       	in	r18, 0x18	; 24
 432:	dc 01       	movw	r26, r24
 434:	11 96       	adiw	r26, 0x01	; 1
 436:	0c 90       	ld	r0, X
 438:	02 c0       	rjmp	.+4      	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 43a:	44 0f       	add	r20, r20
 43c:	55 1f       	adc	r21, r21
 43e:	0a 94       	dec	r0
 440:	e2 f7       	brpl	.-8      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 442:	40 95       	com	r20
 444:	42 23       	and	r20, r18
 446:	48 bb       	out	0x18, r20	; 24
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	08 95       	ret
 44c:	67 b3       	in	r22, 0x17	; 23
 44e:	41 e0       	ldi	r20, 0x01	; 1
 450:	50 e0       	ldi	r21, 0x00	; 0
 452:	fa 01       	movw	r30, r20
 454:	02 c0       	rjmp	.+4      	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 456:	ee 0f       	add	r30, r30
 458:	ff 1f       	adc	r31, r31
 45a:	3a 95       	dec	r19
 45c:	e2 f7       	brpl	.-8      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 45e:	9f 01       	movw	r18, r30
 460:	26 2b       	or	r18, r22
 462:	27 bb       	out	0x17, r18	; 23
 464:	28 b3       	in	r18, 0x18	; 24
 466:	dc 01       	movw	r26, r24
 468:	11 96       	adiw	r26, 0x01	; 1
 46a:	0c 90       	ld	r0, X
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__EEPROM_REGION_LENGTH__+0x72>
 46e:	44 0f       	add	r20, r20
 470:	55 1f       	adc	r21, r21
 472:	0a 94       	dec	r0
 474:	e2 f7       	brpl	.-8      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
 476:	42 2b       	or	r20, r18
 478:	48 bb       	out	0x18, r20	; 24
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	08 95       	ret
 47e:	4e 2f       	mov	r20, r30
 480:	50 e0       	ldi	r21, 0x00	; 0
 482:	48 30       	cpi	r20, 0x08	; 8
 484:	51 05       	cpc	r21, r1
 486:	08 f0       	brcs	.+2      	; 0x48a <__EEPROM_REGION_LENGTH__+0x8a>
 488:	b2 c1       	rjmp	.+868    	; 0x7ee <__EEPROM_REGION_LENGTH__+0x3ee>
 48a:	fa 01       	movw	r30, r20
 48c:	e6 5c       	subi	r30, 0xC6	; 198
 48e:	ff 4f       	sbci	r31, 0xFF	; 255
 490:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__tablejump2__>
 494:	64 b3       	in	r22, 0x14	; 20
 496:	41 e0       	ldi	r20, 0x01	; 1
 498:	50 e0       	ldi	r21, 0x00	; 0
 49a:	fa 01       	movw	r30, r20
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <__EEPROM_REGION_LENGTH__+0xa2>
 49e:	ee 0f       	add	r30, r30
 4a0:	ff 1f       	adc	r31, r31
 4a2:	3a 95       	dec	r19
 4a4:	e2 f7       	brpl	.-8      	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 4a6:	9f 01       	movw	r18, r30
 4a8:	26 2b       	or	r18, r22
 4aa:	24 bb       	out	0x14, r18	; 20
 4ac:	25 b3       	in	r18, 0x15	; 21
 4ae:	dc 01       	movw	r26, r24
 4b0:	11 96       	adiw	r26, 0x01	; 1
 4b2:	0c 90       	ld	r0, X
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4b6:	44 0f       	add	r20, r20
 4b8:	55 1f       	adc	r21, r21
 4ba:	0a 94       	dec	r0
 4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4be:	42 2b       	or	r20, r18
 4c0:	45 bb       	out	0x15, r20	; 21
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	08 95       	ret
 4c6:	64 b3       	in	r22, 0x14	; 20
 4c8:	41 e0       	ldi	r20, 0x01	; 1
 4ca:	50 e0       	ldi	r21, 0x00	; 0
 4cc:	fa 01       	movw	r30, r20
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <__EEPROM_REGION_LENGTH__+0xd4>
 4d0:	ee 0f       	add	r30, r30
 4d2:	ff 1f       	adc	r31, r31
 4d4:	3a 95       	dec	r19
 4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <__EEPROM_REGION_LENGTH__+0xd0>
 4d8:	9f 01       	movw	r18, r30
 4da:	26 2b       	or	r18, r22
 4dc:	24 bb       	out	0x14, r18	; 20
 4de:	25 b3       	in	r18, 0x15	; 21
 4e0:	dc 01       	movw	r26, r24
 4e2:	11 96       	adiw	r26, 0x01	; 1
 4e4:	0c 90       	ld	r0, X
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <__EEPROM_REGION_LENGTH__+0xec>
 4e8:	44 0f       	add	r20, r20
 4ea:	55 1f       	adc	r21, r21
 4ec:	0a 94       	dec	r0
 4ee:	e2 f7       	brpl	.-8      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
 4f0:	40 95       	com	r20
 4f2:	42 23       	and	r20, r18
 4f4:	45 bb       	out	0x15, r20	; 21
 4f6:	80 e0       	ldi	r24, 0x00	; 0
 4f8:	08 95       	ret
 4fa:	24 b3       	in	r18, 0x14	; 20
 4fc:	41 e0       	ldi	r20, 0x01	; 1
 4fe:	50 e0       	ldi	r21, 0x00	; 0
 500:	ba 01       	movw	r22, r20
 502:	02 c0       	rjmp	.+4      	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 504:	66 0f       	add	r22, r22
 506:	77 1f       	adc	r23, r23
 508:	3a 95       	dec	r19
 50a:	e2 f7       	brpl	.-8      	; 0x504 <__EEPROM_REGION_LENGTH__+0x104>
 50c:	60 95       	com	r22
 50e:	26 23       	and	r18, r22
 510:	24 bb       	out	0x14, r18	; 20
 512:	25 b3       	in	r18, 0x15	; 21
 514:	fc 01       	movw	r30, r24
 516:	01 80       	ldd	r0, Z+1	; 0x01
 518:	02 c0       	rjmp	.+4      	; 0x51e <__EEPROM_REGION_LENGTH__+0x11e>
 51a:	44 0f       	add	r20, r20
 51c:	55 1f       	adc	r21, r21
 51e:	0a 94       	dec	r0
 520:	e2 f7       	brpl	.-8      	; 0x51a <__EEPROM_REGION_LENGTH__+0x11a>
 522:	42 2b       	or	r20, r18
 524:	45 bb       	out	0x15, r20	; 21
 526:	80 e0       	ldi	r24, 0x00	; 0
 528:	08 95       	ret
 52a:	24 b3       	in	r18, 0x14	; 20
 52c:	41 e0       	ldi	r20, 0x01	; 1
 52e:	50 e0       	ldi	r21, 0x00	; 0
 530:	ba 01       	movw	r22, r20
 532:	02 c0       	rjmp	.+4      	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
 534:	66 0f       	add	r22, r22
 536:	77 1f       	adc	r23, r23
 538:	3a 95       	dec	r19
 53a:	e2 f7       	brpl	.-8      	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 53c:	60 95       	com	r22
 53e:	26 23       	and	r18, r22
 540:	24 bb       	out	0x14, r18	; 20
 542:	25 b3       	in	r18, 0x15	; 21
 544:	dc 01       	movw	r26, r24
 546:	11 96       	adiw	r26, 0x01	; 1
 548:	0c 90       	ld	r0, X
 54a:	02 c0       	rjmp	.+4      	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 54c:	44 0f       	add	r20, r20
 54e:	55 1f       	adc	r21, r21
 550:	0a 94       	dec	r0
 552:	e2 f7       	brpl	.-8      	; 0x54c <__EEPROM_REGION_LENGTH__+0x14c>
 554:	40 95       	com	r20
 556:	42 23       	and	r20, r18
 558:	45 bb       	out	0x15, r20	; 21
 55a:	80 e0       	ldi	r24, 0x00	; 0
 55c:	08 95       	ret
 55e:	64 b3       	in	r22, 0x14	; 20
 560:	41 e0       	ldi	r20, 0x01	; 1
 562:	50 e0       	ldi	r21, 0x00	; 0
 564:	fa 01       	movw	r30, r20
 566:	02 c0       	rjmp	.+4      	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
 568:	ee 0f       	add	r30, r30
 56a:	ff 1f       	adc	r31, r31
 56c:	3a 95       	dec	r19
 56e:	e2 f7       	brpl	.-8      	; 0x568 <__EEPROM_REGION_LENGTH__+0x168>
 570:	9f 01       	movw	r18, r30
 572:	26 2b       	or	r18, r22
 574:	24 bb       	out	0x14, r18	; 20
 576:	25 b3       	in	r18, 0x15	; 21
 578:	dc 01       	movw	r26, r24
 57a:	11 96       	adiw	r26, 0x01	; 1
 57c:	0c 90       	ld	r0, X
 57e:	02 c0       	rjmp	.+4      	; 0x584 <__EEPROM_REGION_LENGTH__+0x184>
 580:	44 0f       	add	r20, r20
 582:	55 1f       	adc	r21, r21
 584:	0a 94       	dec	r0
 586:	e2 f7       	brpl	.-8      	; 0x580 <__EEPROM_REGION_LENGTH__+0x180>
 588:	42 2b       	or	r20, r18
 58a:	45 bb       	out	0x15, r20	; 21
 58c:	80 e0       	ldi	r24, 0x00	; 0
 58e:	08 95       	ret
 590:	64 b3       	in	r22, 0x14	; 20
 592:	41 e0       	ldi	r20, 0x01	; 1
 594:	50 e0       	ldi	r21, 0x00	; 0
 596:	fa 01       	movw	r30, r20
 598:	02 c0       	rjmp	.+4      	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 59a:	ee 0f       	add	r30, r30
 59c:	ff 1f       	adc	r31, r31
 59e:	3a 95       	dec	r19
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
 5a2:	9f 01       	movw	r18, r30
 5a4:	26 2b       	or	r18, r22
 5a6:	24 bb       	out	0x14, r18	; 20
 5a8:	25 b3       	in	r18, 0x15	; 21
 5aa:	dc 01       	movw	r26, r24
 5ac:	11 96       	adiw	r26, 0x01	; 1
 5ae:	0c 90       	ld	r0, X
 5b0:	02 c0       	rjmp	.+4      	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 5b2:	44 0f       	add	r20, r20
 5b4:	55 1f       	adc	r21, r21
 5b6:	0a 94       	dec	r0
 5b8:	e2 f7       	brpl	.-8      	; 0x5b2 <__EEPROM_REGION_LENGTH__+0x1b2>
 5ba:	40 95       	com	r20
 5bc:	42 23       	and	r20, r18
 5be:	45 bb       	out	0x15, r20	; 21
 5c0:	80 e0       	ldi	r24, 0x00	; 0
 5c2:	08 95       	ret
 5c4:	64 b3       	in	r22, 0x14	; 20
 5c6:	41 e0       	ldi	r20, 0x01	; 1
 5c8:	50 e0       	ldi	r21, 0x00	; 0
 5ca:	fa 01       	movw	r30, r20
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5ce:	ee 0f       	add	r30, r30
 5d0:	ff 1f       	adc	r31, r31
 5d2:	3a 95       	dec	r19
 5d4:	e2 f7       	brpl	.-8      	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5d6:	9f 01       	movw	r18, r30
 5d8:	26 2b       	or	r18, r22
 5da:	24 bb       	out	0x14, r18	; 20
 5dc:	25 b3       	in	r18, 0x15	; 21
 5de:	dc 01       	movw	r26, r24
 5e0:	11 96       	adiw	r26, 0x01	; 1
 5e2:	0c 90       	ld	r0, X
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 5e6:	44 0f       	add	r20, r20
 5e8:	55 1f       	adc	r21, r21
 5ea:	0a 94       	dec	r0
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <__EEPROM_REGION_LENGTH__+0x1e6>
 5ee:	40 95       	com	r20
 5f0:	42 23       	and	r20, r18
 5f2:	45 bb       	out	0x15, r20	; 21
 5f4:	80 e0       	ldi	r24, 0x00	; 0
 5f6:	08 95       	ret
 5f8:	64 b3       	in	r22, 0x14	; 20
 5fa:	41 e0       	ldi	r20, 0x01	; 1
 5fc:	50 e0       	ldi	r21, 0x00	; 0
 5fe:	fa 01       	movw	r30, r20
 600:	02 c0       	rjmp	.+4      	; 0x606 <__EEPROM_REGION_LENGTH__+0x206>
 602:	ee 0f       	add	r30, r30
 604:	ff 1f       	adc	r31, r31
 606:	3a 95       	dec	r19
 608:	e2 f7       	brpl	.-8      	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 60a:	9f 01       	movw	r18, r30
 60c:	26 2b       	or	r18, r22
 60e:	24 bb       	out	0x14, r18	; 20
 610:	25 b3       	in	r18, 0x15	; 21
 612:	dc 01       	movw	r26, r24
 614:	11 96       	adiw	r26, 0x01	; 1
 616:	0c 90       	ld	r0, X
 618:	02 c0       	rjmp	.+4      	; 0x61e <__EEPROM_REGION_LENGTH__+0x21e>
 61a:	44 0f       	add	r20, r20
 61c:	55 1f       	adc	r21, r21
 61e:	0a 94       	dec	r0
 620:	e2 f7       	brpl	.-8      	; 0x61a <__EEPROM_REGION_LENGTH__+0x21a>
 622:	42 2b       	or	r20, r18
 624:	45 bb       	out	0x15, r20	; 21
 626:	80 e0       	ldi	r24, 0x00	; 0
 628:	08 95       	ret
 62a:	4e 2f       	mov	r20, r30
 62c:	50 e0       	ldi	r21, 0x00	; 0
 62e:	48 30       	cpi	r20, 0x08	; 8
 630:	51 05       	cpc	r21, r1
 632:	08 f0       	brcs	.+2      	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 634:	de c0       	rjmp	.+444    	; 0x7f2 <__EEPROM_REGION_LENGTH__+0x3f2>
 636:	fa 01       	movw	r30, r20
 638:	ee 5b       	subi	r30, 0xBE	; 190
 63a:	ff 4f       	sbci	r31, 0xFF	; 255
 63c:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__tablejump2__>
 640:	61 b3       	in	r22, 0x11	; 17
 642:	41 e0       	ldi	r20, 0x01	; 1
 644:	50 e0       	ldi	r21, 0x00	; 0
 646:	fa 01       	movw	r30, r20
 648:	02 c0       	rjmp	.+4      	; 0x64e <__EEPROM_REGION_LENGTH__+0x24e>
 64a:	ee 0f       	add	r30, r30
 64c:	ff 1f       	adc	r31, r31
 64e:	3a 95       	dec	r19
 650:	e2 f7       	brpl	.-8      	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
 652:	9f 01       	movw	r18, r30
 654:	26 2b       	or	r18, r22
 656:	21 bb       	out	0x11, r18	; 17
 658:	22 b3       	in	r18, 0x12	; 18
 65a:	dc 01       	movw	r26, r24
 65c:	11 96       	adiw	r26, 0x01	; 1
 65e:	0c 90       	ld	r0, X
 660:	02 c0       	rjmp	.+4      	; 0x666 <__EEPROM_REGION_LENGTH__+0x266>
 662:	44 0f       	add	r20, r20
 664:	55 1f       	adc	r21, r21
 666:	0a 94       	dec	r0
 668:	e2 f7       	brpl	.-8      	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
 66a:	42 2b       	or	r20, r18
 66c:	42 bb       	out	0x12, r20	; 18
 66e:	80 e0       	ldi	r24, 0x00	; 0
 670:	08 95       	ret
 672:	61 b3       	in	r22, 0x11	; 17
 674:	41 e0       	ldi	r20, 0x01	; 1
 676:	50 e0       	ldi	r21, 0x00	; 0
 678:	fa 01       	movw	r30, r20
 67a:	02 c0       	rjmp	.+4      	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 67c:	ee 0f       	add	r30, r30
 67e:	ff 1f       	adc	r31, r31
 680:	3a 95       	dec	r19
 682:	e2 f7       	brpl	.-8      	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
 684:	9f 01       	movw	r18, r30
 686:	26 2b       	or	r18, r22
 688:	21 bb       	out	0x11, r18	; 17
 68a:	22 b3       	in	r18, 0x12	; 18
 68c:	dc 01       	movw	r26, r24
 68e:	11 96       	adiw	r26, 0x01	; 1
 690:	0c 90       	ld	r0, X
 692:	02 c0       	rjmp	.+4      	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
 694:	44 0f       	add	r20, r20
 696:	55 1f       	adc	r21, r21
 698:	0a 94       	dec	r0
 69a:	e2 f7       	brpl	.-8      	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
 69c:	40 95       	com	r20
 69e:	42 23       	and	r20, r18
 6a0:	42 bb       	out	0x12, r20	; 18
 6a2:	80 e0       	ldi	r24, 0x00	; 0
 6a4:	08 95       	ret
 6a6:	21 b3       	in	r18, 0x11	; 17
 6a8:	41 e0       	ldi	r20, 0x01	; 1
 6aa:	50 e0       	ldi	r21, 0x00	; 0
 6ac:	ba 01       	movw	r22, r20
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <__EEPROM_REGION_LENGTH__+0x2b4>
 6b0:	66 0f       	add	r22, r22
 6b2:	77 1f       	adc	r23, r23
 6b4:	3a 95       	dec	r19
 6b6:	e2 f7       	brpl	.-8      	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 6b8:	60 95       	com	r22
 6ba:	26 23       	and	r18, r22
 6bc:	21 bb       	out	0x11, r18	; 17
 6be:	22 b3       	in	r18, 0x12	; 18
 6c0:	fc 01       	movw	r30, r24
 6c2:	01 80       	ldd	r0, Z+1	; 0x01
 6c4:	02 c0       	rjmp	.+4      	; 0x6ca <__EEPROM_REGION_LENGTH__+0x2ca>
 6c6:	44 0f       	add	r20, r20
 6c8:	55 1f       	adc	r21, r21
 6ca:	0a 94       	dec	r0
 6cc:	e2 f7       	brpl	.-8      	; 0x6c6 <__EEPROM_REGION_LENGTH__+0x2c6>
 6ce:	42 2b       	or	r20, r18
 6d0:	42 bb       	out	0x12, r20	; 18
 6d2:	80 e0       	ldi	r24, 0x00	; 0
 6d4:	08 95       	ret
 6d6:	21 b3       	in	r18, 0x11	; 17
 6d8:	41 e0       	ldi	r20, 0x01	; 1
 6da:	50 e0       	ldi	r21, 0x00	; 0
 6dc:	ba 01       	movw	r22, r20
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <__EEPROM_REGION_LENGTH__+0x2e4>
 6e0:	66 0f       	add	r22, r22
 6e2:	77 1f       	adc	r23, r23
 6e4:	3a 95       	dec	r19
 6e6:	e2 f7       	brpl	.-8      	; 0x6e0 <__EEPROM_REGION_LENGTH__+0x2e0>
 6e8:	60 95       	com	r22
 6ea:	26 23       	and	r18, r22
 6ec:	21 bb       	out	0x11, r18	; 17
 6ee:	22 b3       	in	r18, 0x12	; 18
 6f0:	dc 01       	movw	r26, r24
 6f2:	11 96       	adiw	r26, 0x01	; 1
 6f4:	0c 90       	ld	r0, X
 6f6:	02 c0       	rjmp	.+4      	; 0x6fc <__EEPROM_REGION_LENGTH__+0x2fc>
 6f8:	44 0f       	add	r20, r20
 6fa:	55 1f       	adc	r21, r21
 6fc:	0a 94       	dec	r0
 6fe:	e2 f7       	brpl	.-8      	; 0x6f8 <__EEPROM_REGION_LENGTH__+0x2f8>
 700:	40 95       	com	r20
 702:	42 23       	and	r20, r18
 704:	42 bb       	out	0x12, r20	; 18
 706:	80 e0       	ldi	r24, 0x00	; 0
 708:	08 95       	ret
 70a:	61 b3       	in	r22, 0x11	; 17
 70c:	41 e0       	ldi	r20, 0x01	; 1
 70e:	50 e0       	ldi	r21, 0x00	; 0
 710:	fa 01       	movw	r30, r20
 712:	02 c0       	rjmp	.+4      	; 0x718 <__EEPROM_REGION_LENGTH__+0x318>
 714:	ee 0f       	add	r30, r30
 716:	ff 1f       	adc	r31, r31
 718:	3a 95       	dec	r19
 71a:	e2 f7       	brpl	.-8      	; 0x714 <__EEPROM_REGION_LENGTH__+0x314>
 71c:	9f 01       	movw	r18, r30
 71e:	26 2b       	or	r18, r22
 720:	21 bb       	out	0x11, r18	; 17
 722:	22 b3       	in	r18, 0x12	; 18
 724:	dc 01       	movw	r26, r24
 726:	11 96       	adiw	r26, 0x01	; 1
 728:	0c 90       	ld	r0, X
 72a:	02 c0       	rjmp	.+4      	; 0x730 <__EEPROM_REGION_LENGTH__+0x330>
 72c:	44 0f       	add	r20, r20
 72e:	55 1f       	adc	r21, r21
 730:	0a 94       	dec	r0
 732:	e2 f7       	brpl	.-8      	; 0x72c <__EEPROM_REGION_LENGTH__+0x32c>
 734:	42 2b       	or	r20, r18
 736:	42 bb       	out	0x12, r20	; 18
 738:	80 e0       	ldi	r24, 0x00	; 0
 73a:	08 95       	ret
 73c:	61 b3       	in	r22, 0x11	; 17
 73e:	41 e0       	ldi	r20, 0x01	; 1
 740:	50 e0       	ldi	r21, 0x00	; 0
 742:	fa 01       	movw	r30, r20
 744:	02 c0       	rjmp	.+4      	; 0x74a <__EEPROM_REGION_LENGTH__+0x34a>
 746:	ee 0f       	add	r30, r30
 748:	ff 1f       	adc	r31, r31
 74a:	3a 95       	dec	r19
 74c:	e2 f7       	brpl	.-8      	; 0x746 <__EEPROM_REGION_LENGTH__+0x346>
 74e:	9f 01       	movw	r18, r30
 750:	26 2b       	or	r18, r22
 752:	21 bb       	out	0x11, r18	; 17
 754:	22 b3       	in	r18, 0x12	; 18
 756:	dc 01       	movw	r26, r24
 758:	11 96       	adiw	r26, 0x01	; 1
 75a:	0c 90       	ld	r0, X
 75c:	02 c0       	rjmp	.+4      	; 0x762 <__EEPROM_REGION_LENGTH__+0x362>
 75e:	44 0f       	add	r20, r20
 760:	55 1f       	adc	r21, r21
 762:	0a 94       	dec	r0
 764:	e2 f7       	brpl	.-8      	; 0x75e <__EEPROM_REGION_LENGTH__+0x35e>
 766:	40 95       	com	r20
 768:	42 23       	and	r20, r18
 76a:	42 bb       	out	0x12, r20	; 18
 76c:	80 e0       	ldi	r24, 0x00	; 0
 76e:	08 95       	ret
 770:	61 b3       	in	r22, 0x11	; 17
 772:	41 e0       	ldi	r20, 0x01	; 1
 774:	50 e0       	ldi	r21, 0x00	; 0
 776:	fa 01       	movw	r30, r20
 778:	02 c0       	rjmp	.+4      	; 0x77e <__EEPROM_REGION_LENGTH__+0x37e>
 77a:	ee 0f       	add	r30, r30
 77c:	ff 1f       	adc	r31, r31
 77e:	3a 95       	dec	r19
 780:	e2 f7       	brpl	.-8      	; 0x77a <__EEPROM_REGION_LENGTH__+0x37a>
 782:	9f 01       	movw	r18, r30
 784:	26 2b       	or	r18, r22
 786:	21 bb       	out	0x11, r18	; 17
 788:	22 b3       	in	r18, 0x12	; 18
 78a:	dc 01       	movw	r26, r24
 78c:	11 96       	adiw	r26, 0x01	; 1
 78e:	0c 90       	ld	r0, X
 790:	02 c0       	rjmp	.+4      	; 0x796 <__EEPROM_REGION_LENGTH__+0x396>
 792:	44 0f       	add	r20, r20
 794:	55 1f       	adc	r21, r21
 796:	0a 94       	dec	r0
 798:	e2 f7       	brpl	.-8      	; 0x792 <__EEPROM_REGION_LENGTH__+0x392>
 79a:	40 95       	com	r20
 79c:	42 23       	and	r20, r18
 79e:	42 bb       	out	0x12, r20	; 18
 7a0:	80 e0       	ldi	r24, 0x00	; 0
 7a2:	08 95       	ret
 7a4:	61 b3       	in	r22, 0x11	; 17
 7a6:	41 e0       	ldi	r20, 0x01	; 1
 7a8:	50 e0       	ldi	r21, 0x00	; 0
 7aa:	fa 01       	movw	r30, r20
 7ac:	02 c0       	rjmp	.+4      	; 0x7b2 <__EEPROM_REGION_LENGTH__+0x3b2>
 7ae:	ee 0f       	add	r30, r30
 7b0:	ff 1f       	adc	r31, r31
 7b2:	3a 95       	dec	r19
 7b4:	e2 f7       	brpl	.-8      	; 0x7ae <__EEPROM_REGION_LENGTH__+0x3ae>
 7b6:	9f 01       	movw	r18, r30
 7b8:	26 2b       	or	r18, r22
 7ba:	21 bb       	out	0x11, r18	; 17
 7bc:	22 b3       	in	r18, 0x12	; 18
 7be:	dc 01       	movw	r26, r24
 7c0:	11 96       	adiw	r26, 0x01	; 1
 7c2:	0c 90       	ld	r0, X
 7c4:	02 c0       	rjmp	.+4      	; 0x7ca <__EEPROM_REGION_LENGTH__+0x3ca>
 7c6:	44 0f       	add	r20, r20
 7c8:	55 1f       	adc	r21, r21
 7ca:	0a 94       	dec	r0
 7cc:	e2 f7       	brpl	.-8      	; 0x7c6 <__EEPROM_REGION_LENGTH__+0x3c6>
 7ce:	42 2b       	or	r20, r18
 7d0:	42 bb       	out	0x12, r20	; 18
 7d2:	80 e0       	ldi	r24, 0x00	; 0
 7d4:	08 95       	ret
 7d6:	82 e0       	ldi	r24, 0x02	; 2
 7d8:	08 95       	ret
 7da:	83 e0       	ldi	r24, 0x03	; 3
 7dc:	08 95       	ret
 7de:	84 e0       	ldi	r24, 0x04	; 4
 7e0:	08 95       	ret
 7e2:	80 e0       	ldi	r24, 0x00	; 0
 7e4:	08 95       	ret
 7e6:	80 e0       	ldi	r24, 0x00	; 0
 7e8:	08 95       	ret
 7ea:	80 e0       	ldi	r24, 0x00	; 0
 7ec:	08 95       	ret
 7ee:	80 e0       	ldi	r24, 0x00	; 0
 7f0:	08 95       	ret
 7f2:	80 e0       	ldi	r24, 0x00	; 0
 7f4:	08 95       	ret

Disassembly of section .text.DIO_enumGetPinVal:

000009d8 <DIO_enumGetPinVal>:
DIO_enumError_t DIO_enumGetPinVal(DIO_enumPorts_t Copy_enumPortNum, DIO_enumPins_t Copy_enumPinNum , u8 * Pu8PinVal)
{
	
	DIO_enumError_t Ret_enumERRORStatus = DIO_enumOK  ; 
	
	if( (Copy_enumPortNum > DIO_enumPORTD) || (Copy_enumPortNum < DIO_enumPORTA))
 9d8:	84 30       	cpi	r24, 0x04	; 4
 9da:	d0 f5       	brcc	.+116    	; 0xa50 <DIO_enumGetPinVal+0x78>
		{ 
			Ret_enumERRORStatus = DIO_enumINVALID_PORT ;
		}
	else if( (Copy_enumPinNum > DIO_enumPIN7) || (Copy_enumPinNum < DIO_enumPIN0))
 9dc:	68 30       	cpi	r22, 0x08	; 8
 9de:	d0 f5       	brcc	.+116    	; 0xa54 <DIO_enumGetPinVal+0x7c>
			Ret_enumERRORStatus = DIO_enumINVALID_PIN ;
		}	
	
	else
		{
			switch(Copy_enumPortNum)
 9e0:	81 30       	cpi	r24, 0x01	; 1
 9e2:	91 f0       	breq	.+36     	; 0xa08 <DIO_enumGetPinVal+0x30>
 9e4:	28 f0       	brcs	.+10     	; 0x9f0 <DIO_enumGetPinVal+0x18>
 9e6:	82 30       	cpi	r24, 0x02	; 2
 9e8:	d9 f0       	breq	.+54     	; 0xa20 <DIO_enumGetPinVal+0x48>
 9ea:	83 30       	cpi	r24, 0x03	; 3
 9ec:	29 f1       	breq	.+74     	; 0xa38 <DIO_enumGetPinVal+0x60>
 9ee:	34 c0       	rjmp	.+104    	; 0xa58 <DIO_enumGetPinVal+0x80>
			{
				case DIO_enumPORTA:
									*Pu8PinVal = GET_BIT(PINA,Copy_enumPinNum);
 9f0:	89 b3       	in	r24, 0x19	; 25
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	02 c0       	rjmp	.+4      	; 0x9fa <DIO_enumGetPinVal+0x22>
 9f6:	95 95       	asr	r25
 9f8:	87 95       	ror	r24
 9fa:	6a 95       	dec	r22
 9fc:	e2 f7       	brpl	.-8      	; 0x9f6 <DIO_enumGetPinVal+0x1e>
 9fe:	81 70       	andi	r24, 0x01	; 1
 a00:	fa 01       	movw	r30, r20
 a02:	80 83       	st	Z, r24
			
			
			
			
			
			Ret_enumERRORStatus = DIO_enumOK ;
 a04:	80 e0       	ldi	r24, 0x00	; 0
			switch(Copy_enumPortNum)
			{
				case DIO_enumPORTA:
									*Pu8PinVal = GET_BIT(PINA,Copy_enumPinNum);
					
				break;
 a06:	08 95       	ret
				case DIO_enumPORTB:
									*Pu8PinVal = GET_BIT(PINB,Copy_enumPinNum);
 a08:	86 b3       	in	r24, 0x16	; 22
 a0a:	90 e0       	ldi	r25, 0x00	; 0
 a0c:	02 c0       	rjmp	.+4      	; 0xa12 <DIO_enumGetPinVal+0x3a>
 a0e:	95 95       	asr	r25
 a10:	87 95       	ror	r24
 a12:	6a 95       	dec	r22
 a14:	e2 f7       	brpl	.-8      	; 0xa0e <DIO_enumGetPinVal+0x36>
 a16:	81 70       	andi	r24, 0x01	; 1
 a18:	fa 01       	movw	r30, r20
 a1a:	80 83       	st	Z, r24
			
			
			
			
			
			Ret_enumERRORStatus = DIO_enumOK ;
 a1c:	80 e0       	ldi	r24, 0x00	; 0
					
				break;
				case DIO_enumPORTB:
									*Pu8PinVal = GET_BIT(PINB,Copy_enumPinNum);
										
				break ;
 a1e:	08 95       	ret
				case DIO_enumPORTC:
									*Pu8PinVal = GET_BIT(PINC,Copy_enumPinNum);
 a20:	83 b3       	in	r24, 0x13	; 19
 a22:	90 e0       	ldi	r25, 0x00	; 0
 a24:	02 c0       	rjmp	.+4      	; 0xa2a <DIO_enumGetPinVal+0x52>
 a26:	95 95       	asr	r25
 a28:	87 95       	ror	r24
 a2a:	6a 95       	dec	r22
 a2c:	e2 f7       	brpl	.-8      	; 0xa26 <DIO_enumGetPinVal+0x4e>
 a2e:	81 70       	andi	r24, 0x01	; 1
 a30:	fa 01       	movw	r30, r20
 a32:	80 83       	st	Z, r24
			
			
			
			
			
			Ret_enumERRORStatus = DIO_enumOK ;
 a34:	80 e0       	ldi	r24, 0x00	; 0
										
				break ;
				case DIO_enumPORTC:
									*Pu8PinVal = GET_BIT(PINC,Copy_enumPinNum);
										
				break;
 a36:	08 95       	ret
				case DIO_enumPORTD:
									*Pu8PinVal = GET_BIT(PIND,Copy_enumPinNum);
 a38:	80 b3       	in	r24, 0x10	; 16
 a3a:	90 e0       	ldi	r25, 0x00	; 0
 a3c:	02 c0       	rjmp	.+4      	; 0xa42 <DIO_enumGetPinVal+0x6a>
 a3e:	95 95       	asr	r25
 a40:	87 95       	ror	r24
 a42:	6a 95       	dec	r22
 a44:	e2 f7       	brpl	.-8      	; 0xa3e <DIO_enumGetPinVal+0x66>
 a46:	81 70       	andi	r24, 0x01	; 1
 a48:	fa 01       	movw	r30, r20
 a4a:	80 83       	st	Z, r24
			
			
			
			
			
			Ret_enumERRORStatus = DIO_enumOK ;
 a4c:	80 e0       	ldi	r24, 0x00	; 0
										
				break;
				case DIO_enumPORTD:
									*Pu8PinVal = GET_BIT(PIND,Copy_enumPinNum);
										
				break;
 a4e:	08 95       	ret
	
	DIO_enumError_t Ret_enumERRORStatus = DIO_enumOK  ; 
	
	if( (Copy_enumPortNum > DIO_enumPORTD) || (Copy_enumPortNum < DIO_enumPORTA))
		{ 
			Ret_enumERRORStatus = DIO_enumINVALID_PORT ;
 a50:	82 e0       	ldi	r24, 0x02	; 2
 a52:	08 95       	ret
		}
	else if( (Copy_enumPinNum > DIO_enumPIN7) || (Copy_enumPinNum < DIO_enumPIN0))
		{
			Ret_enumERRORStatus = DIO_enumINVALID_PIN ;
 a54:	83 e0       	ldi	r24, 0x03	; 3
 a56:	08 95       	ret
			
			
			
			
			
			Ret_enumERRORStatus = DIO_enumOK ;
 a58:	80 e0       	ldi	r24, 0x00	; 0
		}//els
	return Ret_enumERRORStatus ;
	
	
}/*get bin value function*/
 a5a:	08 95       	ret

Disassembly of section .text.libgcc:

00000af2 <__tablejump2__>:
 af2:	ee 0f       	add	r30, r30
 af4:	ff 1f       	adc	r31, r31
 af6:	05 90       	lpm	r0, Z+
 af8:	f4 91       	lpm	r31, Z
 afa:	e0 2d       	mov	r30, r0
 afc:	09 94       	ijmp

Disassembly of section .text.__dummy_fini:

00000b06 <_fini>:
 b06:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000b08 <__funcs_on_exit>:
 b08:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000b0a <__simulator_exit>:
 b0a:	08 95       	ret

Disassembly of section .text.exit:

00000adc <exit>:
 adc:	ec 01       	movw	r28, r24
 ade:	0e 94 84 05 	call	0xb08	; 0xb08 <__funcs_on_exit>
 ae2:	0e 94 83 05 	call	0xb06	; 0xb06 <_fini>
 ae6:	ce 01       	movw	r24, r28
 ae8:	0e 94 85 05 	call	0xb0a	; 0xb0a <__simulator_exit>
 aec:	ce 01       	movw	r24, r28
 aee:	0e 94 81 05 	call	0xb02	; 0xb02 <_Exit>

Disassembly of section .text._Exit:

00000b02 <_Exit>:
 b02:	0e 94 76 00 	call	0xec	; 0xec <_exit>
